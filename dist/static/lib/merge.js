var Merge = {"app/Api.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _UI = require(parentUrl,'./util/UI.js');\n\nvar _UI2 = _interopRequireDefault(_UI);\n\nvar _Store = require(parentUrl,'./data/Store.js');\n\nvar _Store2 = _interopRequireDefault(_Store);\n\nvar _Dict = require(parentUrl,'./data/Dict.js');\n\nvar _Dict2 = _interopRequireDefault(_Dict);\n\nvar _SessionUtil = require(parentUrl,'./util/SessionUtil.js');\n\nvar _SessionUtil2 = _interopRequireDefault(_SessionUtil);\n\nvar _watermark = require(parentUrl,'./util/watermark.js');\n\nvar _watermark2 = _interopRequireDefault(_watermark);\n\nvar _Core = require(parentUrl,'./util/Core.js');\n\nvar _Core2 = _interopRequireDefault(_Core);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\n/**\r\n * 通用API接口\r\n */\nvar Api = {\n    // post: function (path, param, _call, type) {\n    //   $.post(PATH(path), param, function(result) {\n    //     _call(result);\n    //   }, type).error(function(result) {\n    //     console.log('error', result);\n    //     var data = result.responseJSON;\n    //     if(result.status == 404) {\n    //       alert(\"不存在该接口：\" + data.path); \n    //       return;\n    //     }\n    //     _call(false);\n    //   });\n    // },\n\n    /**\r\n     * 登录请求\r\n     * var param = {\r\n    *\t  cname: '',\r\n    *    cpwd: ''\r\n    * };\r\n     * @param {Object}   param \r\n     * @param {Function} _call \r\n     */\n    postLogin: function postLogin(param, _call) {\n        if (window.UserType == 'auction') {\n            param.userType = 'auction';\n        }\n\n        _UI2.default.openLoading();\n        _Core2.default.postEncrypt(Constants.root + \"authUser/login\", param, function (result) {\n            _UI2.default.closeLoading();\n\n            if (result.status == 'success') {\n                // 保存token\n                _SessionUtil2.default.setUser(result.data);\n                _Store2.default.commit('setLogin', true);\n                _call();\n            }\n        }, \"json\");\n    },\n\n\n    /**\r\n     * 获取用户信息\r\n     * @param {Function} _call\r\n     */\n    postUserInfo: function postUserInfo(_call) {\n        // console.log('query user info');\n        var url = Constants.root + \"authUser/userInfo\";\n        _Core2.default.post(url, {}, function (result) {\n            if (result.msg == '请登录后再操作') {\n                _call(result);\n                _Store2.default.commit('setLogin', false);\n            } else {\n                var userInfo = result.data;\n                var userData = userInfo.userData;\n\n                // var sysData = userInfo.sysData;\n                _watermark2.default.createWM(userInfo.name // 传用户名\n                // 'mobile'\n                );\n\n                _Store2.default.commit('setUsername', userInfo.name);\n                _Core2.default.put('opinions', userData.opinions);\n                _Store2.default.commit('setLogin', true);\n                _Store2.default.commit('setUserInfo', userInfo);\n                _Store2.default.commit('setAuthUrl', userData.authUrl);\n                _call(result);\n            }\n        }, 'json', false);\n    },\n\n    serverLog: function serverLog(log) {\n        var url = Constants.root + 'sysLog/print';\n        var param = {\n            log: log\n        };\n        _Core2.default.post(url, param, function (result) {\n            console.log(result);\n        });\n    },\n\n\n    postCacheUpdate: function postCacheUpdate(name, _call) {\n        console.log('缓存未更新，功能暂未实现');\n        return;\n        var url = Constants.root + 'cache/updateCache';\n        var map = _Dict2.default.get('cacheType');\n        var desc = map[name];\n        console.log('更新' + desc + '缓存');\n        var param = {\n            name: name\n        };\n        _Core2.default.post(url, param, function (result) {\n            console.log('result', result);\n            // 执行成功\n            if (_call != null) {\n                _call(result);\n            }\n        });\n    }\n\n};\n\nexports = Api;\n})('app/Api.js'); exports; ","app/config/global-cmpt.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _NodeModule = require(parentUrl,'../NodeModule.js');\n\nvar _input = require(parentUrl,'@/component/input/input.vue');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _editorTextarea = require(parentUrl,'@/component/input/editor-textarea.vue');\n\nvar _editorTextarea2 = _interopRequireDefault(_editorTextarea);\n\nvar _editorAce = require(parentUrl,'@/component/input/editor-ace.vue');\n\nvar _editorAce2 = _interopRequireDefault(_editorAce);\n\nvar _inputTest = require(parentUrl,'@/component/input/input-test.vue');\n\nvar _inputTest2 = _interopRequireDefault(_inputTest);\n\nvar _queryInput = require(parentUrl,'@/component/input/query-input.vue');\n\nvar _queryInput2 = _interopRequireDefault(_queryInput);\n\nvar _queryInputModel = require(parentUrl,'@/component/input/query-input-model.vue');\n\nvar _queryInputModel2 = _interopRequireDefault(_queryInputModel);\n\nvar _inputBoxFix = require(parentUrl,'@/component/input/input-box-fix.vue');\n\nvar _inputBoxFix2 = _interopRequireDefault(_inputBoxFix);\n\nvar _inputBoxGrid = require(parentUrl,'@/component/input/input-box-grid.vue');\n\nvar _inputBoxGrid2 = _interopRequireDefault(_inputBoxGrid);\n\nvar _queryInputGroup = require(parentUrl,'@/component/input/query-input-group.vue');\n\nvar _queryInputGroup2 = _interopRequireDefault(_queryInputGroup);\n\nvar _pageInit = require(parentUrl,'@/component/content/page-init.vue');\n\nvar _pageInit2 = _interopRequireDefault(_pageInit);\n\nvar _tagGroup = require(parentUrl,'@/component/content/tag-group.vue');\n\nvar _tagGroup2 = _interopRequireDefault(_tagGroup);\n\nvar _menu = require(parentUrl,'@/component/element/menu.vue');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _menuPure = require(parentUrl,'@/component/element/menu-pure.vue');\n\nvar _menuPure2 = _interopRequireDefault(_menuPure);\n\nvar _menuSon = require(parentUrl,'@/component/element/menu-son.vue');\n\nvar _menuSon2 = _interopRequireDefault(_menuSon);\n\nvar _menuAndTag = require(parentUrl,'@/component/element/menu-and-tag.vue');\n\nvar _menuAndTag2 = _interopRequireDefault(_menuAndTag);\n\nvar _button = require(parentUrl,'@/component/system/button/button.vue');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _buttonLink = require(parentUrl,'@/component/system/button/button-link.vue');\n\nvar _buttonLink2 = _interopRequireDefault(_buttonLink);\n\nvar _tree = require(parentUrl,'@/component/element/tree.vue');\n\nvar _tree2 = _interopRequireDefault(_tree);\n\nvar _tag = require(parentUrl,'@/component/element/tag.vue');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _pagin = require(parentUrl,'@/component/element/pagin.vue');\n\nvar _pagin2 = _interopRequireDefault(_pagin);\n\nvar _buttonGroup = require(parentUrl,'@/component/element/button-group.vue');\n\nvar _buttonGroup2 = _interopRequireDefault(_buttonGroup);\n\nvar _queryButtonGroup = require(parentUrl,'@/component/element/query-button-group.vue');\n\nvar _queryButtonGroup2 = _interopRequireDefault(_queryButtonGroup);\n\nvar _buttonAuth = require(parentUrl,'@/component/element/button-auth.vue');\n\nvar _buttonAuth2 = _interopRequireDefault(_buttonAuth);\n\nvar _dialogEditS = require(parentUrl,'@/component/element/dialog-edit/dialog-edit-s4.vue');\n\nvar _dialogEditS2 = _interopRequireDefault(_dialogEditS);\n\nvar _dialogShow = require(parentUrl,'@/component/element/dialog-edit/dialog-show.vue');\n\nvar _dialogShow2 = _interopRequireDefault(_dialogShow);\n\nvar _dialog = require(parentUrl,'@/component/element/dialog.vue');\n\nvar _dialog2 = _interopRequireDefault(_dialog);\n\nvar _table = require(parentUrl,'@/component-plus/element/table.vue');\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _queryInputGroup3 = require(parentUrl,'@/component-plus/input/query-input-group.vue');\n\nvar _queryInputGroup4 = _interopRequireDefault(_queryInputGroup3);\n\nvar _tableColumn = require(parentUrl,'@/component/element/table-column/table-column.vue');\n\nvar _tableColumn2 = _interopRequireDefault(_tableColumn);\n\nvar _tableColumnPopover = require(parentUrl,'@/component/element/table-column/table-column-popover.vue');\n\nvar _tableColumnPopover2 = _interopRequireDefault(_tableColumnPopover);\n\nvar _tableExtend = require(parentUrl,'@/component/element/table-column/table-extend.vue');\n\nvar _tableExtend2 = _interopRequireDefault(_tableExtend);\n\nvar _tableOther = require(parentUrl,'@/component/element/table-column/table-other.vue');\n\nvar _tableOther2 = _interopRequireDefault(_tableOther);\n\nvar _selectSingle = require(parentUrl,'@/component/input/select-single.vue');\n\nvar _selectSingle2 = _interopRequireDefault(_selectSingle);\n\nvar _selectRadio = require(parentUrl,'@/component/input/select-radio.vue');\n\nvar _selectRadio2 = _interopRequireDefault(_selectRadio);\n\nvar _selectMulti = require(parentUrl,'@/component/input/select-multi.vue');\n\nvar _selectMulti2 = _interopRequireDefault(_selectMulti);\n\nvar _selectLevel = require(parentUrl,'@/component/input/select-level.vue');\n\nvar _selectLevel2 = _interopRequireDefault(_selectLevel);\n\nvar _selectAuto = require(parentUrl,'@/component/input/select-auto.vue');\n\nvar _selectAuto2 = _interopRequireDefault(_selectAuto);\n\nvar _selectArea = require(parentUrl,'@/component/service/select-area.vue');\n\nvar _selectArea2 = _interopRequireDefault(_selectArea);\n\nvar _selectCity = require(parentUrl,'@/component/input/select-city.vue');\n\nvar _selectCity2 = _interopRequireDefault(_selectCity);\n\nvar _checkbox = require(parentUrl,'@/component/input/checkbox.vue');\n\nvar _checkbox2 = _interopRequireDefault(_checkbox);\n\nvar _auth = require(parentUrl,'@/component/element/auth.vue');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _comcodeDialog = require(parentUrl,'@/component/service/comcode-dialog.vue');\n\nvar _comcodeDialog2 = _interopRequireDefault(_comcodeDialog);\n\nvar _comcodeDialogMulti = require(parentUrl,'@/component/service/comcode-dialog-multi.vue');\n\nvar _comcodeDialogMulti2 = _interopRequireDefault(_comcodeDialogMulti);\n\nvar _packetDialog = require(parentUrl,'@/component/service/packet-dialog.vue');\n\nvar _packetDialog2 = _interopRequireDefault(_packetDialog);\n\nvar _uploadPic = require(parentUrl,'@/component/service/uploadPic.vue');\n\nvar _uploadPic2 = _interopRequireDefault(_uploadPic);\n\nvar _uploadImage = require(parentUrl,'@/component/service/uploadImage.vue');\n\nvar _uploadImage2 = _interopRequireDefault(_uploadImage);\n\nvar _claimFlowLink = require(parentUrl,'@/component/service/claim-flow-link.vue');\n\nvar _claimFlowLink2 = _interopRequireDefault(_claimFlowLink);\n\nvar _authBind = require(parentUrl,'@/component/service/auth-bind.vue');\n\nvar _authBind2 = _interopRequireDefault(_authBind);\n\nvar _authButton = require(parentUrl,'@/component/service/auth-button.vue');\n\nvar _authButton2 = _interopRequireDefault(_authButton);\n\nvar _inputMulti = require(parentUrl,'@/component/input/input-multi.vue');\n\nvar _inputMulti2 = _interopRequireDefault(_inputMulti);\n\nvar _inputMap = require(parentUrl,'@/component/input/input-map.vue');\n\nvar _inputMap2 = _interopRequireDefault(_inputMap);\n\nvar _inputJson = require(parentUrl,'@/component/input/input-json.vue');\n\nvar _inputJson2 = _interopRequireDefault(_inputJson);\n\nvar _inputTable = require(parentUrl,'@/component/input/input-table.vue');\n\nvar _inputTable2 = _interopRequireDefault(_inputTable);\n\nvar _inputTableField = require(parentUrl,'@/component/input/input-table-field.vue');\n\nvar _inputTableField2 = _interopRequireDefault(_inputTableField);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\n_NodeModule.Vue.component('cc-input', _input2.default);\n\n// 'cc-query-input', './component/input/query-input.vue',\n// 'cc-input-box-fix', './component/input/input-box-fix.vue',\n// 'cc-input-box-grid', './component/input/input-box-grid.vue',\n// 'cc-query', './component/input/query-input-group.vue',\n// 'cc-page', './component/content/page-init.vue',\n// 'cc-tag-group', './component/content/tag-group.vue',\n// 'cc-button', './component/system/button/button.vue',\n// 'cc-button-link', './component/button/button-link.vue',\n// 'cc-tree', './component/element/tree.vue',\n// 'cc-tag', './component/element/tag.vue',\n// 'cc-pagin', './component/element/pagin.vue',\n// 'cc-button-group', './component/element/button-group.vue',\n// 'cc-button-auth', './component/element/button-auth.vue',\n// 'cc-dialog-edit', './component/element/dialog-edit/dialog-edit-s1.vue',\n// 'cc-dialog-show', './component/element/dialog-edit/dialog-show.vue',\n// 'cc-dialog', './component/element/dialog.vue',\n// 'cc-table', './component/element/table.vue',\n// 'cc-table-column', './component/element/table-column.vue',\n// 'cc-select-single', './component/input/select-single.vue',\n// 'cc-select-multi', './component/input/select-multi.vue',\n// 'cc-select-level', './component/input/select-level.vue',\n// 'cc-auth', './component/element/auth.vue',\n\n// 业务相关组件\n// 'cc-comcode-dialog', './component/service/comcode-dialog.vue',\n// 'cc-packet-dialog', './component/service/packet-dialog.vue',\n\n// 页面子组件 src\\main\\resources\\templates\\admin\\page\\verifyConfig\\verfiyConfigDialog.vue\n// 'cc-dialog-verify-config': './page/verifyConfig/verifyConfigDialog.vue',\n\n// // 页面组件\n// 'cc-param-page': './page/param.vue',\n\n_NodeModule.Vue.component('cc-editor-textarea', _editorTextarea2.default);\n\n_NodeModule.Vue.component('cc-editor-ace', _editorAce2.default);\n\n_NodeModule.Vue.component('cc-input-test', _inputTest2.default);\n\n_NodeModule.Vue.component('cc-query-input', _queryInput2.default);\n\n_NodeModule.Vue.component('cc-query-input2', _queryInputModel2.default);\n\n_NodeModule.Vue.component('cc-input-box-fix', _inputBoxFix2.default);\n\n_NodeModule.Vue.component('cc-input-box-grid', _inputBoxGrid2.default);\n\n_NodeModule.Vue.component('cc-query', _queryInputGroup2.default);\n\n_NodeModule.Vue.component('cc-page', _pageInit2.default);\n\n_NodeModule.Vue.component('cc-tag-group', _tagGroup2.default);\n\n_NodeModule.Vue.component('cc-menu', _menu2.default);\n\n_NodeModule.Vue.component('cc-menu-pure', _menuPure2.default);\n\n_NodeModule.Vue.component('cc-menu-son', _menuSon2.default);\n\n_NodeModule.Vue.component('cc-menu-and-tag', _menuAndTag2.default);\n\n_NodeModule.Vue.component('cc-button', _button2.default);\n\n_NodeModule.Vue.component('cc-button-link', _buttonLink2.default);\n\n_NodeModule.Vue.component('cc-tree', _tree2.default);\n\n_NodeModule.Vue.component('cc-tag', _tag2.default);\n\n_NodeModule.Vue.component('cc-pagin', _pagin2.default);\n\n_NodeModule.Vue.component('cc-button-group', _buttonGroup2.default);\n\n_NodeModule.Vue.component('cc-query-button', _queryButtonGroup2.default);\n\n_NodeModule.Vue.component('cc-button-auth', _buttonAuth2.default);\n\n_NodeModule.Vue.component('cc-dialog-edit', _dialogEditS2.default);\n\n_NodeModule.Vue.component('cc-dialog-show', _dialogShow2.default);\n\n_NodeModule.Vue.component('cc-dialog', _dialog2.default);\n\n_NodeModule.Vue.component('cc-table', _table2.default);\n\n_NodeModule.Vue.component('cc-query-plus', _queryInputGroup4.default);\n\n_NodeModule.Vue.component('cc-table-column', _tableColumn2.default);\n\n_NodeModule.Vue.component('cc-table-popover', _tableColumnPopover2.default);\n// import TableColumn from '@/component/element/table-column.vue';\n// Vue.component('cc-table-column', TableColumn);\n\n_NodeModule.Vue.component('cc-table-extend', _tableExtend2.default);\n\n_NodeModule.Vue.component('cc-table-other', _tableOther2.default);\n\n_NodeModule.Vue.component('cc-select-single', _selectSingle2.default);\n\n_NodeModule.Vue.component('cc-select-radio', _selectRadio2.default);\n\n_NodeModule.Vue.component('cc-select-multi', _selectMulti2.default);\n\n_NodeModule.Vue.component('cc-select-level', _selectLevel2.default);\n\n_NodeModule.Vue.component('cc-select-auto', _selectAuto2.default);\n\n_NodeModule.Vue.component('cc-select-area', _selectArea2.default);\n\n_NodeModule.Vue.component('cc-select-city', _selectCity2.default);\n\n_NodeModule.Vue.component('cc-checkbox', _checkbox2.default);\n\n_NodeModule.Vue.component('cc-auth', _auth2.default);\n\n_NodeModule.Vue.component('cc-comcode-dialog', _comcodeDialog2.default);\n\n_NodeModule.Vue.component('cc-comcode-dialog-multi', _comcodeDialogMulti2.default);\n\n_NodeModule.Vue.component('cc-packet-dialog', _packetDialog2.default);\n\n_NodeModule.Vue.component('uploadPic', _uploadPic2.default);\n\n_NodeModule.Vue.component('upload-image', _uploadImage2.default);\n\n_NodeModule.Vue.component('claim-flow-link', _claimFlowLink2.default);\n\n_NodeModule.Vue.component('auth-bind', _authBind2.default);\n\n_NodeModule.Vue.component('auth-button', _authButton2.default);\n\n_NodeModule.Vue.component('cc-input-multi', _inputMulti2.default);\n\n_NodeModule.Vue.component('cc-input-map', _inputMap2.default);\n\n_NodeModule.Vue.component('cc-input-json', _inputJson2.default);\n\n_NodeModule.Vue.component('cc-input-table', _inputTable2.default);\n\n_NodeModule.Vue.component('cc-input-table-field', _inputTableField2.default);\n\nexports = {\n    log: function log() {\n        console.log('[Component init] init success.');\n    }\n};\n})('app/config/global-cmpt.js'); exports; ","app/config/loadJs.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _UI = require(parentUrl,'../util/UI.js');\n\nvar _UI2 = _interopRequireDefault(_UI);\n\nvar _DataInit = require(parentUrl,'../data/DataInit.js');\n\nvar _DataInit2 = _interopRequireDefault(_DataInit);\n\nvar _Dict = require(parentUrl,'../data/Dict.js');\n\nvar _Dict2 = _interopRequireDefault(_Dict);\n\nvar _Api = require(parentUrl,'../Api.js');\n\nvar _Api2 = _interopRequireDefault(_Api);\n\nvar _styleConfig = require(parentUrl,'./style-config.js');\n\nvar _styleConfig2 = _interopRequireDefault(_styleConfig);\n\nrequire(parentUrl,'../util/drag.js');\n\nvar _routerManager = require(parentUrl,'../config/router-manager.js');\n\nvar _routerManager2 = _interopRequireDefault(_routerManager);\n\nvar _NumberUtil = require(parentUrl,'../util/NumberUtil.js');\n\nvar _NumberUtil2 = _interopRequireDefault(_NumberUtil);\n\nvar _StringUtil = require(parentUrl,'../util/StringUtil.js');\n\nvar _StringUtil2 = _interopRequireDefault(_StringUtil);\n\nvar _crypto = require(parentUrl,'../util/crypto.js');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _loginRule = require(parentUrl,'../validator/loginRule.js');\n\nvar _loginRule2 = _interopRequireDefault(_loginRule);\n\nvar _R = require(parentUrl,'../function/R.js');\n\nvar _R2 = _interopRequireDefault(_R);\n\nvar _V = require(parentUrl,'../function/V.js');\n\nvar _V2 = _interopRequireDefault(_V);\n\nvar _CrudService = require(parentUrl,'../service/CrudService.js');\n\nvar _CrudService2 = _interopRequireDefault(_CrudService);\n\nvar _Crud = require(parentUrl,'../service/Crud.js');\n\nvar _Crud2 = _interopRequireDefault(_Crud);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\n// 引入弹窗移动的JS\nwindow.RouterManager = _routerManager2.default; // 引入失败\n/**\r\n * 加载js组件\r\n */\n\nwindow.Api = _Api2.default;\nwindow.Dict = _Dict2.default;\nwindow.StyleConfig = _styleConfig2.default;\nwindow.DataInit = _DataInit2.default;\nwindow.NumberUtil = _NumberUtil2.default;\nwindow.StringUtil = _StringUtil2.default;\nwindow.Crypto = _crypto2.default;\nwindow.loginRule = _loginRule2.default;\nwindow.R = _R2.default;\nwindow.V = _V2.default;\nwindow.Crud = _Crud2.default;\nwindow.CrudService = _CrudService2.default;\n\nwindow.Json = {\n    toString: function toString(obj) {\n        var json = JSON.stringify(obj);\n        return Util.formatJson2(json);\n    }\n};\n\nexports = {\n    log: function log() {},\n    init: function init(vue) {\n        console.log(_UI2.default);\n        _UI2.default.initVue(vue);\n    }\n};\n})('app/config/loadJs.js'); exports; ","app/config/router-manager.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n    routerManager: null,\n    router: null,\n    setRouterManager: function setRouterManager(routerManager) {\n        this.routerManager = routerManager;\n        this.router = routerManager.router;\n    },\n    getPage: function getPage(module) {\n        return this.routerManager.getPage(module);\n    },\n    add: function add(path, module) {\n        return this.routerManager.add(path, module);\n    },\n\n    // 路由跳转\n    push: function push(path) {\n        return this.routerManager.push(path);\n    }\n};\n})('app/config/router-manager.js'); exports; ","app/config/router.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _routerManager = require(parentUrl,'./router-manager');\n\nvar _routerManager2 = _interopRequireDefault(_routerManager);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\nvar router = _routerManager2.default.router;\n\nexports = router;\n})('app/config/router.js'); exports; ","app/config/style-config.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// import '../../assets/style/theme/default.less';\n// import '../../assets/style/theme/sinosoft.less';\n\n/**\r\n * 全局风格配置\r\n */\nvar config = {\n\n    debug: false, // 默认打开调试模式\n    forceCloseDebug: true, // 强制关闭调试模式\n    componentDebug: {\n        'tag-group': true,\n        'page-init': true\n    },\n\n    /**\r\n     * 主题风格配置\r\n     * light: 浅色\r\n     * deep: 深色\r\n     */\n    mainStyle: 'deep', // light/deep\n\n    /**\r\n     * 消息警告样式\r\n     * message: 消息提示样式\r\n     * dialog: 提示样式\r\n     */\n    messageType: 'dialog', // message/dialog\n\n    /**\r\n     * 弹框样式\r\n     * big: 大弹框 width: 620px;\r\n     * small: 小弹框 witch: 310px;\r\n     */\n    messageBoxClass: 'big', // big/small\n\n    /**\r\n     * 按钮大小\r\n     */\n    buttonSize: 'small', // mini/small/middle/big\n\n    /**\r\n     * 页面内间距\r\n     */\n    pagePadding: '15px 25px 25px 25px',\n\n    /**\r\n     * 菜单模式\r\n     * auto: 自动\r\n     * big: 保持最宽\r\n     * small: 保持最窄\r\n     */\n    menuMode: 'big',\n\n    /**\r\n     * 表格模式\r\n     * auto: 自适应\r\n     * fix: 固定\r\n     */\n    tableMode: 'fix',\n\n    /**\r\n     * 获取主题样式\r\n     */\n    theme: function theme() {\n        var theme = void 0;\n        if (this.mainStyle == 'light') {\n            theme = 'ds';\n        } else {\n            theme = 'ss';\n        }\n        return theme;\n    }\n};\n\nif (config.mainStyle == 'default') {\n    config.buttonSize = 'mini';\n}\n\nexports = config;\n})('app/config/style-config.js'); exports; ","app/core/router-builder.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _NodeModule = require(parentUrl,'../NodeModule.js');\n\nvar build = function build() {\n\n    var router = new _NodeModule.Router();\n\n    var self = {\n        routes: [],\n        routeMap: {},\n        router: router,\n        getPage: function getPage(module) {\n            return routeMap['/' + module];\n        },\n        add: function add(path, module) {\n            // console.log('path:' + path + ' module:' + module);\n            router.addRoutes([{\n                path: path,\n                component: this.getPage(module)\n            }]);\n        },\n\n        // 路由跳转\n        push: function push(path) {\n            router.push(path);\n        },\n        pushRoute: function pushRoute(path, component) {\n            // routes.push({ path: path, component: component });\n            // routeMap[path] = component;\n            router.addRoutes([{\n                path: path,\n                component: component\n            }]);\n        }\n    };\n    return self;\n};\n\nexports = {\n\n    build: build\n\n};\n})('app/core/router-builder.js'); exports; ","app/core/ServiceOpt.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n\n    /**\r\n     * // 获取地址\r\n     * @param {String} type datagrid/add/edit/delete\r\n     * @param {Object} opt: {\r\n     *      url: {\r\n     *          datagrid: String,\r\n     *          add: String,\r\n     *          edit: String,\r\n     *          delete: String\r\n     *      }\r\n     * }\r\n     * @returns \r\n     */\n    url: function url(type, opt) {\n        if (opt == null) return null;\n        if (opt.url == null) return null;\n        if (opt.url[type] == null) {\n            return null;\n        } else {\n            return Constants.root + opt.url[type];\n        }\n    }\n};\n})('app/core/ServiceOpt.js'); exports; ","app/data/Constants.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// 上下文路径\nvar root = '/api/'; // 使用相对路径\n\nif (location.href.indexOf('http://localhost') == -1 && location.href.indexOf('http://10.20.88') == -1 && location.href.indexOf('http://192.168') == -1) {\n  // 不是本地环境\n  if (window.UserType == 'auction') {\n    root = '/jianbo/api2.0/';\n  } else {\n    root = '/residualcar/handle/api2.0/';\n  }\n}\n\n// 测试环境jianbo转发\n// if(location.href.indexOf('jianbo.com') != -1) {\n//   // https://jianbo.com/jianbo/jianbo/#/\n//   root = '/jianbo/residualcar/handle/api2.0/';\n// }\n\n// 嵌入在容器时上下文为 /\nif (location.href.indexOf(\":9114\") != -1) {\n  root = '/';\n}\n\nvar Constants = {\n  root: root,\n  server: '../../',\n  colorIndex: 0,\n  colorList: ['#66CCCC', '#666699', '#FF99CC', '#99CC66', '#FF9900', '#FFCC00'],\n  getColor: function getColor(index) {\n    var i = Number(index) % this.colorList.length;\n    return this.colorList[i];\n  },\n  getColorAuto: function getColorAuto() {\n    var i = this.colorIndex % this.colorList.length;\n    this.colorIndex++;\n    return this.colorList[i];\n  }\n};\nwindow.Constants = Constants;\n\nwindow.ElementColor = {\n  green: '#67C23A',\n  blue: '#409EFF',\n  orange: '#E6A23C',\n  red: '#F56C6C',\n  grey: '#909399'\n};\n\nexports = Constants;\n})('app/data/Constants.js'); exports; ","app/data/DataInit.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Api = require(parentUrl,'../Api.js');\n\nvar _Api2 = _interopRequireDefault(_Api);\n\nvar _Core = require(parentUrl,'../util/Core.js');\n\nvar _Core2 = _interopRequireDefault(_Core);\n\nvar _Counter = require(parentUrl,'../util/Counter.js');\n\nvar _Counter2 = _interopRequireDefault(_Counter);\n\nvar _Dict = require(parentUrl,'./Dict.js');\n\nvar _Dict2 = _interopRequireDefault(_Dict);\n\nvar _Store = require(parentUrl,'./Store.js');\n\nvar _Store2 = _interopRequireDefault(_Store);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\n// 数据初始化模块\nvar DataInit = {\n    initStatus: false,\n    data: {\n        userMenu: null,\n        userInfo: null\n    },\n\n    waitInitAll: function waitInitAll(_call) {\n        var _this = this;\n\n        var timer = setInterval(function () {\n            if (_this.initStatus == true) {\n                _call();\n                clearInterval(timer);\n            }\n        }, 100);\n    },\n\n\n    // 初始化所有方法\n    initAll: function initAll(_success, _failure) {\n        var _this2 = this;\n\n        if (this.initStatus) {\n            _success();\n        }\n\n        var methodNames = [];\n        for (var key in this.initMethods) {\n            methodNames.push(key);\n        }\n\n        var methodSize = methodNames.length;\n        console.log('初始化数据数量', methodSize);\n        var counter = _Counter2.default.build(methodSize);\n\n        var loopExecute = function loopExecute(methodNames) {\n            var name = methodNames.shift();\n            var method = _this2.initMethods[name];\n\n            method(function () {\n                console.log('执行成功:' + name);\n                counter.call(); // 执行成功计数\n                if (methodNames.length > 0) {\n                    loopExecute(methodNames);\n                }\n            }, function () {\n                _failure();\n            });\n        };\n\n        loopExecute(methodNames);\n\n        // 等待计数器校验完成\n        counter.finish(function () {\n            console.log('初始化所有数据完成');\n            _this2.initStatus = true;\n            _success();\n        });\n    },\n\n\n    getUserData: function getUserData() {\n        return this.data.userInfo.userData;\n    },\n    checkLogin: function checkLogin(result) {\n        if (result == false || result.status == \"failure\") {\n            if (result.msg == '用户未登录') {\n                // location.href = '../login.html';\n            }\n        }\n    },\n    getUserMenu: function getUserMenu() {\n        return this.data.userMenu;\n    },\n\n    getUserAuth: function getUserAuth() {\n        return this.getUserData().authUrl;\n    },\n    getUrlMap: function getUrlMap() {\n        var menu = this.data.userMenu;\n        var map = {};\n        for (var key in menu) {\n            var parent = menu[key];\n            var childs = parent.children;\n            for (var key in childs) {\n                var child = childs[key];\n                map[child.url] = child.text;\n            }\n        }\n        return map;\n    },\n    getMenuGroup: function getMenuGroup() {\n        var menu = this.data.userMenu;\n        var menuGroup = [];\n        for (var key in menu) {\n            var parent = menu[key];\n            var group = {\n                label: parent.text,\n                options: []\n            };\n            menuGroup.push(group);\n            var childs = parent.children;\n            for (var key in childs) {\n                var child = childs[key];\n                var op = {\n                    value: child.url,\n                    label: child.text\n                };\n                group.options.push(op);\n            }\n        }\n        console.log('menuGroup', menuGroup);\n        return menuGroup;\n    },\n\n    freshUserData: function freshUserData() {\n        console.log('刷新用户数据');\n        this.initMethods.initUserData(function () {\n            console.log('刷新用户数据成功');\n        });\n        this.initMethods.initMenuData(function () {\n            console.log('刷新用户菜单成功');\n        });\n    },\n    freshDict: function freshDict() {\n        console.log('刷新字典数据');\n        this.initMethods.initDictData(function () {\n            console.log('刷新字典数据成功');\n        });\n    },\n\n    // 初始化方法\n    initMethods: {\n        // 初始化用户数据\n        initUserData: function initUserData(_success, _failure) {\n            _Api2.default.postUserInfo(function (result) {\n                if (result.status == 'success') {\n                    var userInfo = result.data;\n                    DataInit.data.userInfo = userInfo;\n                    if (_success != null) {\n                        _success();\n                    }\n                    console.log('初始化用户数据完成', userInfo);\n                } else {\n                    console.log('初始化用户数据失败');\n                    if (_failure != null) {\n                        _failure();\n                    }\n                }\n            });\n        },\n        // 初始化常量数据\n        initDictData: function initDictData(_success) {\n            var url = Constants.root + 'sysData/dict';\n            _Core2.default.post(url, {}, function (result) {\n                if (result.status == 'failure') {\n                    console.log('初始化字典数据失败', result);\n                    if (_failure != null) {\n                        _failure();\n                    }\n                } else {\n                    // console.log('初始化字典数据', result);\n                    var map = result.data;\n                    for (var key in map) {\n                        var info = map[key];\n                        if (key == 'enum') {\n                            for (var enumKey in info) {\n                                _Dict2.default.set(enumKey, info[enumKey]);\n                                console.log(\"初始化枚举字典：\" + enumKey, info[enumKey]);\n                            }\n                        } else {\n                            _Dict2.default.set(key, info);\n                            console.log(\"初始化字典：\" + key, info);\n                        }\n                    }\n                    if (_success != null) {\n                        _success();\n                    }\n                    console.log('初始化字典数据完成');\n                }\n            });\n        },\n        // 初始化菜单数据\n        initMenuData: function initMenuData(_success, _failure) {\n            // var url = Constants.root + 'authMenu/ctrlTree';\n            var url = Constants.root + 'faas/lowcode/menu';\n            _Core2.default.post(url, {}, function (response) {\n                var result = response.data;\n                if (response.status == 'failure') {\n                    console.log('初始化菜单数据失败', result);\n                    if (_failure != null) {\n                        _failure();\n                    }\n                } else {\n                    DataInit.checkLogin(response);\n                    DataInit.data.userMenu = result;\n                    _Store2.default.commit('setUserMenu', result);\n                    console.log('初始化菜单数据', result);\n                    if (_success != null) {\n                        _success();\n                    }\n                    console.log('初始化菜单数据完成');\n                }\n            });\n        }\n        // 初始化常量数据\n    }\n};\n\nwindow.DataInit = DataInit;\n\nexports = DataInit;\n})('app/data/DataInit.js'); exports; ","app/data/Dict.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Util = require(parentUrl,'../util/Util.js');\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\nvar data = {\n    status: '待获取', // 从接口获取\n    state: {\n        'success': '成功',\n        'failure': '失败',\n        'exception': '异常'\n    },\n    project: {\n        'upay': '低代码平台',\n        'upay-papay': '微信代扣服务',\n        'sino-platform': '公共平台',\n        'sino-gateway': '网关服务',\n        'sino-console': '控制台服务'\n    },\n    cacheType: {\n        'role_auth': '角色权限'\n    },\n    workStatus: {\n        '1': '待实现',\n        '2': '进行中',\n        '3': '已完成',\n        \"5\": \"测试中\",\n        \"6\": \"测试通过\",\n        '4': '已上线',\n        '7': '已废弃'\n    }\n}; /**\r\n    * 字典获取\r\n   */\n\nexports = {\n    /**\r\n     * 获取步骤代码\r\n     * @param {String} name \r\n     * @returns \r\n     */\n    step: function step(name) {\n        var value = data.step[name];\n        if (value == null) {\n            alert('该步骤不存在：' + name);\n        }\n        return value;\n    },\n\n\n    /**\r\n     * 获取字典\r\n     * @param {String} type \r\n     */\n    get: function get(type) {\n        return data[type];\n    },\n\n\n    /**\r\n     * 获取dict值\r\n     * @param {String} name \r\n     */\n    dict: function dict(name) {\n        return data.dict[name];\n    },\n\n\n    /**\r\n     * 设置字典\r\n     * @param {String} type \r\n     * @param {Object} info 字典详细\r\n     */\n    set: function set(type, info) {\n        data[type] = info;\n    },\n\n\n    /**\r\n     * 获取字典，部分数据\r\n     * @param {String} type \r\n     * @param {Array} arr 获取项\r\n     */\n    part: function part(type, arr) {\n        var map = this.get(type);\n        var map2 = {};\n        for (var key in map) {\n            if (_Util2.default.inArray(key, arr)) {\n                map2[key] = map[key];\n            }\n        }\n        return map2;\n    },\n\n\n    /**\r\n     * 获取字典列表格式\r\n     * 例如： { aaa: 'AAA'} => [{value:'aaa',label:'AAA'}]\r\n     * @param {Stirng} type \r\n     * @param {String} valueField \r\n     * @param {String} labelField \r\n     */\n    getList: function getList(type, valueField, labelField) {\n        valueField = valueField || 'value';\n        labelField = labelField || 'label';\n        var map = this.get(type);\n        // TODO 增加map类型校验\n        var list = [];\n\n        for (var key in map) {\n            var value = map[key];\n            var obj = {};\n\n            obj[valueField] = key;\n            obj[labelField] = value;\n\n            list.push(obj);\n        }\n        return list;\n    }\n};\n\n// var typeMap = dict.get('checkAccountType');\n// console.log(typeMap);\n\n// var typeList = dict.getList('checkAccountType');\n// console.log(typeList);\n})('app/data/Dict.js'); exports; ","app/data/Store.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _NodeModule = require(parentUrl,'../NodeModule.js');\n\nvar Store = new _NodeModule.Vuex.Store({\n\tstate: {\n\t\tcount: 0,\n\t\tusername: '待获取',\n\t\tlogin: false,\n\t\ttagName: '',\n\t\tpageWidth: 0,\n\t\tuserInfo: null,\n\t\tauthUrl: null,\n\t\tuserMenu: null,\n\t\tloading: false,\n\n\t\t// 事件计数\n\t\teventClickIcon: 0\n\t},\n\tgetters: {\n\t\tusername: function username(state) {\n\t\t\treturn state.username;\n\t\t},\n\t\tpageWidth: function pageWidth(state) {\n\t\t\treturn state.pageWidth;\n\t\t},\n\t\tloading: function loading(state) {\n\t\t\treturn state.loading;\n\t\t},\n\t\tuserInfo: function userInfo(state) {\n\t\t\treturn state.userInfo;\n\t\t},\n\t\tauthUrl: function authUrl(state) {\n\t\t\treturn state.authUrl;\n\t\t},\n\t\tuserMenu: function userMenu(state) {\n\t\t\treturn state.userMenu;\n\t\t}\n\t},\n\tmutations: {\n\t\topenLoading: function openLoading(state) {\n\t\t\tstate.loading = true;\n\t\t},\n\t\tcloseLoading: function closeLoading(state) {\n\t\t\tstate.loading = false;\n\t\t},\n\t\tsetPageWidth: function setPageWidth(state, value) {\n\t\t\tstate.pageWidth = value;\n\t\t},\n\t\tsetUsername: function setUsername(state, value) {\n\t\t\tstate.username = value;\n\t\t},\n\t\tsetLogin: function setLogin(state, value) {\n\t\t\tstate.login = value;\n\t\t},\n\t\tsetTagName: function setTagName(state, value) {\n\t\t\tstate.tagName = value;\n\t\t},\n\t\teventClickIcon: function eventClickIcon(state) {\n\t\t\tstate.eventClickIcon++;\n\t\t},\n\t\tsetUserInfo: function setUserInfo(state, userInfo) {\n\t\t\tstate.userInfo = userInfo;\n\t\t},\n\t\tsetAuthUrl: function setAuthUrl(state, authUrl) {\n\t\t\tstate.authUrl = authUrl;\n\t\t},\n\t\tsetUserMenu: function setUserMenu(state, userMenu) {\n\t\t\tstate.userMenu = userMenu;\n\t\t},\n\t\tincrement: function increment(state) {\n\t\t\tstate.count++;\n\t\t}\n\t}\n});\n// Vue.use(Vuex);\nconsole.log('[Vue init] init vuex success.');\n// console.log(Store.state);\n\n\nwindow.addEventListener(\"resize\", function () {\n\tStore.commit('setPageWidth', Core.getPageWidth());\n});\n\nwindow.Store = Store;\n\nexports = Store;\n})('app/data/Store.js'); exports; ","app/function/R.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports = function (_succ, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n    if (_succ != null) {\n        try {\n            _succ(p1, p2, p3, p4, p5, p6, p7, p8, p9);\n        } catch (e) {\n            console.error('is not a function ' + _succ);\n        }\n    }\n};\n})('app/function/R.js'); exports; ","app/function/V.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports = function (obj, field) {\n    if (obj == null) {\n        return null;\n    } else {\n        return obj[field];\n    }\n};\n})('app/function/V.js'); exports; ","app/mock/Mock.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * Mock模块\r\n */\nexports = {\n\n    /**\r\n     * mock的地址\r\n     */\n    mock: [\n        // '/user/userInfo',\n        // '/menu/ctrlTree',\n    ],\n\n    /**\r\n     * 不需要mock的地址\r\n     */\n    unmock: [],\n\n    /**\r\n     * 判断地址是否需要走 mock 地址\r\n     * 先通过 unmock 进行判断，再通过 mock 进行判断\r\n     * @param {string} url \r\n     */\n    isMock: function isMock(url) {\n        for (var i = 0; i < this.unmock.length; i++) {\n            var unMockUrl = this.unmock[i];\n            if (url.indexOf(unMockUrl) != -1) {\n                return false;\n            }\n        }\n        for (var _i = 0; _i < this.mock.length; _i++) {\n            var mockUrl = this.mock[_i];\n            if (url.indexOf(mockUrl) != -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n})('app/mock/Mock.js'); exports; ","app/NodeModule.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CryptoJS = exports.ElementUI = exports.Router = exports.Vuex = exports.Vue = undefined;\n\nvar _vue = require(parentUrl,'vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _vuex = require(parentUrl,'vuex');\n\nvar _vuex2 = _interopRequireDefault(_vuex);\n\nvar _vueRouter = require(parentUrl,'vue-router');\n\nvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\nvar _elementUi = require(parentUrl,'element-ui');\n\nvar _elementUi2 = _interopRequireDefault(_elementUi);\n\nvar _cryptoJs = require(parentUrl,'crypto-js');\n\nvar _cryptoJs2 = _interopRequireDefault(_cryptoJs);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\nconsole.log('Vuex', _vuex2.default); // 引入Node模块会报错\nexports.Vue = _vue2.default;\nexports.Vuex = _vuex2.default;\nexports.Router = _vueRouter2.default;\nexports.ElementUI = _elementUi2.default;\nexports.CryptoJS = _cryptoJs2.default;\n})('app/NodeModule.js'); exports; ","app/service/Crud.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// TODO 实现crud.js\nvar get = function get(dao, table) {\n    if (table == null) {\n        table = dao;\n        dao = 'dao';\n    }\n\n    var util = {\n        param: function param(requestParam) {\n            var base = {\n                dao: dao,\n                table: table\n            };\n            if (requestParam != null) {\n                for (var key in requestParam) {\n                    base[key] = requestParam[key];\n                }\n            }\n            return base;\n        },\n        request: function request(url, param, _call) {\n            param = this.param(param);\n            $.post(url, param, function (result) {\n                console.log('crud request result', result);\n                _call(result.data);\n            }, 'json');\n        }\n    };\n\n    var crud = {\n        // 分页查询接口\n        pagin: function pagin(param, _call) {\n            var url = Constants.root + 'crud_v2/datagrid';\n            util.request(url, param, _call);\n        },\n\n        // 全部查询接口\n        queryAll: function queryAll(_call) {\n            var url = Constants.root + 'crud_v2/list';\n            util.request(url, {}, _call);\n        },\n\n        // 列表查询接口\n        list: function list(param, _call) {\n            var url = Constants.root + 'crud_v2/list';\n            util.request(url, param, _call);\n        },\n\n        // 编辑接口\n        edit: function edit(param, _call) {\n            var url = Constants.root + 'crud_v2/edit';\n            util.request(url, param, _call);\n        },\n\n        // 批量编辑接口\n        editBatch: function editBatch(update, cnd, _call) {\n            var url = Constants.root + 'crud_v2/editBatch';\n            var param = {};\n            param.update = JSON.stringify(update);\n            param.cnd = JSON.stringify(cnd);\n            util.request(url, param, _call);\n        },\n\n        // 删除接口\n        delete: function _delete(param, _call) {\n            var url = Constants.root + 'crud_v2/delete';\n            util.request(url, param, _call);\n        },\n\n        // 删除接口\n        clear: function clear(param, _call) {\n            var url = Constants.root + 'crud_v2/clear';\n            util.request(url, param, _call);\n        },\n\n        // 新增接口\n        add: function add(param, _call) {\n            var url = Constants.root + 'crud_v2/add';\n            util.request(url, param, _call);\n        },\n\n        // 字段枚举接口\n        enum: function _enum(field, _call) {\n            var url = Constants.root + 'crud_v2/fieldEnum';\n            var param = {\n                field: field\n            };\n            util.request(url, param, _call);\n        },\n\n        // 字段映射接口\n        fieldMap: function fieldMap(table, _call) {\n            var url = Constants.root + 'crud_v2/fieldAllMap';\n            var param = {\n                table: table\n            };\n            util.request(url, param, _call);\n        }\n    };\n    return crud;\n};\n\nexports = {\n    get: get,\n\n    httpThird: get('dao', 'http_third'),\n    httpUnit: get('dao', 'http_unit'),\n    sysView: get('sys_view'),\n    processEntity: get('h2mem-PUBLIC', 'process_entity')\n};\n})('app/service/Crud.js'); exports; ","app/service/CrudService.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Api = require(parentUrl,'../Api.js');\n\nvar _Api2 = _interopRequireDefault(_Api);\n\nvar _Convert = require(parentUrl,'../util/Convert.js');\n\nvar _Convert2 = _interopRequireDefault(_Convert);\n\nvar _Core = require(parentUrl,'../util/Core.js');\n\nvar _Core2 = _interopRequireDefault(_Core);\n\nvar _ServiceOpt = require(parentUrl,'../core/ServiceOpt.js');\n\nvar _ServiceOpt2 = _interopRequireDefault(_ServiceOpt);\n\nvar _Counter = require(parentUrl,'../util/Counter.js');\n\nvar _Counter2 = _interopRequireDefault(_Counter);\n\nvar _UI = require(parentUrl,'../util/UI.js');\n\nvar _UI2 = _interopRequireDefault(_UI);\n\nvar _Util = require(parentUrl,'../util/Util.js');\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _Formatter = require(parentUrl,'../util/Formatter.js');\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Crud = require(parentUrl,'./Crud.js');\n\nvar _Crud2 = _interopRequireDefault(_Crud);\n\nvar _BindTable = require(parentUrl,'./util/BindTable.js');\n\nvar _BindTable2 = _interopRequireDefault(_BindTable);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\nvar initPage = function initPage(page) {\n    // 查找page分页组件\n\n    if (page.pagin == null) {\n        page.pagin = {\n            total: 0,\n            page: 1,\n            rows: 15\n        };\n        if (page.config.pagin == false) {\n            page.pagin = {\n                total: 0,\n                page: -1,\n                rows: -1\n            };\n        }\n    }\n\n    if (page.getQueryParam == null) {\n        page.getQueryParam = function () {\n            return page.service.getQueryParam();\n        };\n    }\n\n    if (page.size == null) {\n        page.size = 'small';\n    }\n\n    if (page.moduleAuth == null) {\n        page.moduleAuth = [];\n    }\n\n    if (page.onQuery == null) {\n        page.onQuery = function () {\n            // console.log('onQuery');\n            page.service.onQuery();\n        };\n    }\n\n    if (page.onAdd == null) {\n        page.onAdd = function () {\n            // console.log('onAdd');\n            page.service.onAdd();\n        };\n    }\n\n    if (page.onEdit == null) {\n        page.onEdit = function () {\n            // console.log('onEdit');\n            page.service.onEdit();\n        };\n    }\n\n    if (page.onDelete == null) {\n\n        page.onDelete = function () {\n            // console.log('onDelete');\n            page.service.onDelete();\n        };\n    }\n\n    if (page.onPaginChange == null) {\n        page.onPaginChange = function () {\n            // console.log('onPaginChange');\n            page.service.onPaginChange();\n        };\n    }\n\n    if (page.onAddConfirm == null) {\n        page.onAddConfirm = function (_call, showMsg) {\n            page.service.onAddConfirm(_call, showMsg);\n        };\n    }\n\n    if (page.onDeleteConfirm == null) {\n        page.onDeleteConfirm = function (_call, showMsg) {\n            page.service.onDeleteConfirm(_call, showMsg);\n        };\n    }\n\n    if (page.onEditConfirm == null) {\n        page.onEditConfirm = function (_call, showMsg) {\n            page.service.onEditConfirm(_call, showMsg);\n        };\n    }\n\n    if (page.onSortChange == null) {\n        page.onSortChange = function (sortConfig) {\n            page.service.onSortChange(sortConfig);\n        };\n    }\n\n    if (page.onPacket == null) {\n        page.onPacket = function (data) {\n            if (page.$refs.packetDialog != null) {\n                if (data != null && _Util2.default.isObject(data)) {\n                    console.log('open custom data', data);\n                    page.$refs.packetDialog.open(data);\n                } else {\n                    console.log('page.currentRow', page.currentRow);\n                    page.$refs.packetDialog.open(page.currentRow);\n                }\n            } else {\n                console.error('未定义<cc-packet-dialog ref=\"packetDialog\"></cc-packet-dialog>');\n            }\n        };\n    }\n\n    if (page.onTest == null) {\n        page.onTest = function () {\n            page.service.onTest();\n        };\n    }\n\n    page.fieldClick = function (field) {\n        if (field == 'comCode' || field == 'comName') {\n            // 需要权限才能打开该弹框\n            page.$refs.comcodeDialog.open();\n        }\n    };\n\n    page.Dict = Dict;\n    page.Formatter = _Formatter2.default;\n\n    page.D = function (key) {\n        return Dict.get(key);\n    };\n\n    if (page.queryParam == null) page.queryParam = {};\n    if (page.form == null) page.form = {};\n\n    // 字段长度方法\n    var width = function width(column) {\n        var name = column.name;\n        var width = 90;\n        var maxWidth = 250;\n\n        if (page.widthConfig != null) {\n            if (page.widthConfig[name] != null) {\n                return page.widthConfig[name];\n            }\n        }\n\n        // 根据表格数据计算合适长度\n        if (page.rows == null) {\n            return 100;\n        }\n        for (var i = 0; i < page.rows.length; i++) {\n            var row = page.rows[i];\n            var value = row[name];\n            if (value == null) {\n                continue;\n            }\n            var valueWidth = value.length * 9;\n            if (width < valueWidth) {\n                width = valueWidth;\n            }\n        }\n        if (width > maxWidth) {\n            width = maxWidth;\n        }\n        // column.valueDemo;\n        // console.log('showWidth', width);\n        return width;\n    };\n\n    page.width = function (column) {\n        var value = width(column);\n        if (value == null) {\n            return value;\n        }\n        return value + '';\n    };\n\n    page.post = function (url, param, _call, type, opts) {\n        var _this = this;\n\n        page.loading = true;\n        _Core2.default.post(url, param, function (result) {\n            _this.loading = false;\n            _call(result);\n        }, type, opts);\n    };\n\n    // 增删改查对象\n    page.crud = _Crud2.default.get(page.dao, page.table);\n};\n\nvar pageStart = function pageStart() {\n    if (window.App != null) {\n        App.initPage = false;\n    }\n};\n\nvar pageLoad = function pageLoad() {\n    if (window.App != null) {\n        App.initPage = true;\n    }\n};\n\n/**\r\n * 获取业务对象\r\n * @param {Object} page vue实例\r\n * @param {Object} opt: {\r\n *      url: {\r\n *          datagrid: String,\r\n *          add: String,\r\n *          edit: String,\r\n *          delete: String\r\n *      }\r\n * }\r\n * @returns service\r\n */\nvar _getService = function _getService(page, opt) {\n    if (opt == null) {\n        opt = {};\n    }\n    var config = page.config;\n\n    // console.log(\"config\", config);\n    // var defaultConfig = Util.clone(config);\n    pageStart();\n    var service = {\n        opt: opt,\n        lastQueryParam: null,\n        sortConfig: null, // 排序配置\n        config: config,\n        page: page,\n        module: page.module,\n\n        columnInfo: null,\n        tableDesc: null,\n\n        self: function self() {\n            return this.page();\n        },\n\n\n        /**\r\n         * 构建增删改查url\r\n         * @param {String} type 类型，可选值 [datagrid/add/edit/delete]\r\n         * @returns url\r\n         */\n        buildUrl: function buildUrl(type) {\n            var url = _ServiceOpt2.default.url(type, this.opt);\n            if (url != null) {\n                return url;\n            }\n            return Constants.root + this.module + \"/\" + type;\n        },\n        loadTableInfo: function loadTableInfo(_call) {\n            var _this2 = this;\n\n            var param = {\n                daoName: page.dao,\n                tableName: page.table,\n                module: page.module\n            };\n            if (param.tableName == null) {\n                _UI2.default.error('tableName不存在');\n                return;\n            }\n\n            if (page.module == 'crud_v2') {\n                var url = 'table_v2/getModelInfo';\n                _Core2.default.post(url, param, function (result) {\n                    console.log('columnInfo result', result);\n                    _this2.columnInfo = result.columnInfo;\n                    if (page.hideField != null) {\n                        page.columnInfo = _this2.hideField(result.columnInfo, page.hideField);\n                    } else {\n                        page.columnInfo = result.columnInfo;\n                    }\n\n                    _this2.tableDesc = result;\n                    _this2.initIdName();\n                    _this2.initEditField();\n\n                    _call();\n                });\n            } else {\n                var url = 'table_v2/getTableInfo';\n                _Core2.default.post(url, param, function (result) {\n                    console.log('columnInfo result', result);\n                    _this2.columnInfo = result.columnInfo;\n                    if (page.hideField != null) {\n                        page.columnInfo = _this2.hideField(result.columnInfo, page.hideField);\n                    } else {\n                        page.columnInfo = result.columnInfo;\n                    }\n                    _this2.tableDesc = result;\n                    _this2.initIdName();\n                    _this2.initEditField();\n\n                    _call();\n                });\n            }\n        },\n        hideField: function hideField(columnInfo, _hideField) {\n            var list = [];\n            for (var i in columnInfo) {\n                var info = columnInfo[i];\n                if (!_Util2.default.inArray(info.name, _hideField)) {\n                    list.push(info);\n                }\n            }\n            return list;\n        },\n        loadModelFieldMap: function loadModelFieldMap(_call) {\n            var fieldMap = page.fieldMap;\n            var pageCrud = page.crud;\n            pageCrud.fieldMap(page.table, function (result) {\n                console.log('loadModelFieldMap result', result);\n\n                for (var key in result) {\n                    var map = result[key];\n                    fieldMap[key] = map;\n                }\n\n                _call();\n            });\n        },\n\n        /**\r\n         * 格式一：\r\n         * loadData: {\r\n         *     fieldMap: ['project', 'third', 'dict.body_type']\r\n         * },\r\n         * 格式二：\r\n         * loadData: {\r\n         *     fieldMap: {\r\n         *         'project': 'cicd_project.name'\r\n         *     }\r\n         * },\r\n         * \r\n         * 加载字段映射\r\n         * @param {Function} _call \r\n         * @returns \r\n         */\n        loadFieldMap: function loadFieldMap(_call) {\n            var pageCrud = page.crud;\n\n            if (page.loadData == null) {\n                _call();\n                return;\n            }\n\n            var loadFields = page.loadData.fieldMap;\n            if (loadFields == null) {\n                _call();\n                return;\n            }\n\n            var size = _Util2.default.size(loadFields);\n\n            var counter = _Counter2.default.build(size);\n\n            counter.finish(function () {\n                // console.log('loadFieldMap', page.fieldMap);\n                _call();\n            });\n\n            var fieldMap = page.fieldMap;\n            // console.log('loadField', loadFields);\n            // console.log('loadField.length', size);\n\n            var load = function load(fieldMap, code, map) {\n                fieldMap[code] = map;\n                counter.call();\n            };\n\n            for (var i in loadFields) {\n                var field = loadFields[i];\n                var key = i;\n                // 判断key是不是数字\n                var isNumber = _Util2.default.isNumberStr(key);\n\n                (function (localField, key) {\n\n                    var fieldName = function fieldName(name) {\n                        if (!isNumber) {\n                            if (key.indexOf('.') != -1) {\n                                console.warn('key存在符号.');\n                            }\n                            return key;\n                        } else {\n                            return name;\n                        }\n                    };\n\n                    // console.log('load localField', localField);\n                    // console.log('field', field);\n\n                    // 查询字典\n                    if (localField.indexOf('dict.') == 0) {\n                        var code = localField.replace('dict.', '');\n                        _Api2.default.dict(code, function (values) {\n                            var map = _Convert2.default.listToMap(values);\n                            load(fieldMap, fieldName(code), map);\n                        });\n\n                        // 根据key查询\n                    } else if (key.indexOf('.') != -1) {\n                        var arr = key.split(\".\");\n                        var module = arr[0];\n                        var name = arr[1];\n\n                        var crud = _Crud2.default.get(page.dao, module);\n                        // 发起请求\n                        crud.enum(name, function (values) {\n                            var map = _Convert2.default.listToMap(values);\n                            // console.log(localField, map);\n                            load(fieldMap, fieldName(localField), map);\n                        });\n\n                        // 查询其它模块的\n                    } else if (localField.indexOf('.') != -1) {\n                        var arr = localField.split(\".\");\n                        var module = arr[0];\n                        var name = arr[1];\n\n                        var crud = _Crud2.default.get(page.dao, module);\n                        // 发起请求\n                        crud.enum(name, function (values) {\n                            var map = _Convert2.default.listToMap(values);\n                            // console.log(localField, map);\n                            load(fieldMap, fieldName(localField), map);\n                        });\n\n                        // 查询当前模块的\n                    } else {\n\n                        pageCrud.enum(localField, function (values) {\n                            var map = _Convert2.default.listToMap(values);\n                            // 这里不能用field，需要转成局部域localField\n                            // fieldMap[localField] = map;\n                            load(fieldMap, fieldName(localField), map);\n                        });\n                    }\n                })(field, key);\n            }\n        },\n        initIdName: function initIdName() {\n            page.config.idName = this.tableDesc.priKey;\n        },\n        initEditField: function initEditField() {\n            if (page.editField != null && page.editField.length > 0) {\n                return;\n            }\n            var fields = [];\n            for (var i in this.columnInfo) {\n                var column = this.columnInfo[i];\n                var name = column.name;\n                if (name == 'id' || name == 'create_date' || name == 'modify_date' || name == 'createDate' || name == 'modifyDate') {\n                    continue;\n                }\n                var field = {\n                    name: column.comment,\n                    field: column.name\n                };\n                if (page.fieldMap[name] != null) {\n                    field.map = page.fieldMap[name];\n                }\n                fields.push(field);\n            }\n            page.editField = fields;\n        },\n\n\n        onTest: function onTest() {\n            _UI2.default.debug(page.currentRow);\n        },\n\n        loadLiteData: function loadLiteData(_call) {\n            pageLoad();\n            this.page.loading = false;\n            this.page.init = true; // 提前完成初始化\n            _call();\n        },\n\n        queryTableOrNot: function queryTableOrNot(isLoadTable, _call) {\n            if (isLoadTable == false) {\n                _call();\n            } else {\n                this.queryTable(function (data) {\n                    _call(data);\n                });\n            }\n        },\n\n        loadData: function loadData(_call, isLoadTable) {\n            var _this3 = this;\n\n            // 之前写法有问题！！！\n            if (isLoadTable == null) {\n                isLoadTable = true;\n            }\n\n            // 查询表数据\n            // this.queryTableOrNot(isLoadTable, (data) => {\n\n            //     var counter = Counter.auto('loadData');\n\n            //     // 查询表扩展数据\n            //     if(page.table !== false) {\n            //         this.loadTableInfo(counter.callAuto('loadTableInfo'));\n            //         this.loadModelFieldMap(counter.callAuto('loadModelFieldMap'));\n            //     } else {\n            //         console.info('page.table is false');    \n            //     }\n\n            //     // 查询字段映射\n            //     this.loadFieldMap(counter.callAuto('loadFieldMap'));\n\n            //     // 查询完成\n            //     counter.finish(() => {\n            //         var fieldMap = this.page.fieldMap;\n            //         this.page.fieldMap = Util.cloneMap(fieldMap);\n            //         // console.log('load page data ' + page.table + ' finish', page.fieldMap);\n\n            //         // 加载页面\n            //         this.page.loading = false;\n            //         this.page.init = true; // 提前完成初始化\n\n            //         // 绑定数据\n            //         if(isLoadTable != false) {\n            //             this.bindTable(data);\n            //         }\n\n            //         this.page.loading = false; // 完成页面加载\n            //         pageLoad();\n\n            //         _call(); // 回调\n            //     });\n            // });\n            var counter = _Counter2.default.auto('loadData');\n\n            // 查询表扩展数据\n            if (page.table !== false) {\n                this.loadTableInfo(counter.callAuto('loadTableInfo'));\n                this.loadModelFieldMap(counter.callAuto('loadModelFieldMap'));\n            } else {\n                console.info('page.table is false');\n            }\n\n            // 查询字段映射\n            this.loadFieldMap(counter.callAuto('loadFieldMap'));\n            // 查询完成\n            counter.finish(function () {\n\n                console.log('this.queryParam1', JSON.stringify(_this3.page.queryParam));\n\n                _this3.queryTableOrNot(isLoadTable, function (data) {\n\n                    var fieldMap = _this3.page.fieldMap;\n                    _this3.page.fieldMap = _Util2.default.cloneMap(fieldMap);\n                    // console.log('load page data ' + page.table + ' finish', page.fieldMap);\n\n                    // 加载页面\n                    _this3.page.loading = false;\n                    _this3.page.init = true; // 提前完成初始化\n\n                    // 绑定数据\n                    if (isLoadTable != false) {\n                        _this3.bindTable(data);\n                    }\n\n                    _this3.page.loading = false; // 完成页面加载\n                    pageLoad();\n\n                    _call(); // 回调\n                });\n            });\n        },\n        getQueryParam: function getQueryParam() {\n            var pagin = page.pagin;\n            var param = page.queryParam; // 查询参数\n            var pageSort = page.config.sortConfig;\n            var sort = this.sortConfig;\n            var queryParam = {\n                page: pagin.page,\n                rows: pagin.rows\n            };\n            for (var key in param) {\n                if (param[key] != \"\") {\n                    queryParam[key] = param[key];\n                }\n            }\n\n            if (page.config.pagin == false) {\n                queryParam.page = -1;\n            }\n\n            if (!this.loadSort(queryParam, sort)) {\n                this.loadSort(queryParam, pageSort);\n            }\n\n            console.log('this.tableDesc', this.tableDesc);\n            if (queryParam.table == null) {\n                queryParam.table = page.table;\n            }\n            if (queryParam.dao == null) {\n                queryParam.dao = page.dao;\n            }\n            if (page.relay != null) {\n                queryParam.relay = JSON.stringify(page.relay);\n            }\n            return queryParam;\n        },\n        loadSort: function loadSort(param, sort) {\n            if (sort != null) {\n                if (sort.sortOrder != null && sort.sortField != null) {\n                    param.sortField = sort.sortField;\n                    param.sortOrder = sort.sortOrder;\n                    if (sort.sortMulti != null) {\n                        param.sortMulti = JSON.stringify(sort.sortMulti);\n                    }\n\n                    return true;\n                }\n            }\n            return false;\n        },\n        onSortChange: function onSortChange(sortConfig) {\n            // page.config.sortConfig = sortConfig;\n            this.sortConfig = sortConfig;\n            page.onQuery();\n        },\n        // 仅查询\n        queryTable: function queryTable(_success) {\n            // 在条件发送改变之后，点击查询时，会自动回到第一页\n            var currentQueryParam = JSON.stringify(page.queryParam);\n            // console.log('上一次的条件', this.lastQueryParam);\n            // console.log('这一次的条件', currentQueryParam);\n            if (this.lastQueryParam != null) {\n                if (this.lastQueryParam != currentQueryParam) {\n                    page.pagin.page = 1; // 条件变更回到第一页\n                }\n            }\n            // 保存条件，下一次使用\n            this.lastQueryParam = currentQueryParam;\n            // console.log('save this.lastQueryParam', this.lastQueryParam);\n\n            var queryParam = page.getQueryParam();\n\n            var url = this.buildUrl(\"datagrid\");\n\n            // TODO 清除空格\n            _Util2.default.trimMapField(queryParam);\n            console.log(\"查询主表格条件\", queryParam);\n\n            _Core2.default.post(url, queryParam, function (data) {\n\n                if (_success != null) {\n                    _success(data);\n                }\n            }, 'json');\n        },\n        // 仅绑定\n        bindTable: function bindTable(result) {\n            var data = result.data;\n            console.log(\"查询主表格数据\", data);\n            var pagin = page.pagin;\n            pagin.total = data.total;\n            console.log('pagin.total', pagin.total);\n\n            page.pagin = _Util2.default.cloneMap(pagin);\n\n            page.datagrid = data;\n\n            // 绑定到 page.rows\n            if (page.bindRows != null) {\n                // 自定义绑定\n                page.bindRows(data);\n            } else {\n                if (page.config.convertTree != null) {\n                    _BindTable2.default.bind(page, data);\n                } else {\n                    page.rows = data.rows;\n                }\n            }\n        },\n        // 查询表格并绑定\n        loadTable: function loadTable(_success) {\n            var _this4 = this;\n\n            this.queryTable(function (data) {\n                _this4.bindTable(data);\n                if (_success != null) {\n                    _success();\n                }\n            });\n        },\n        onQuery: function onQuery() {\n            console.log('onQuery');\n            page.loading = true;\n            this.loadTable(function () {\n                page.loading = false;\n            });\n        },\n        onAdd: function onAdd() {\n            var dialog = page.$refs.editDialog;\n            // page.form = {}; // 导致双向绑定解除？\n            page.form = _Util2.default.cloneBase(page.currentRow);\n            var idField = page.config.idName;\n            delete page.form[idField];\n            dialog.open('新增');\n        },\n        isSelect: function isSelect() {\n            // console.log('isSelect', page.currentRow);\n            if (page.currentRow == null) {\n                _UI2.default.warning(\"请选择一条记录\");\n                return false;\n            }\n            return true;\n        },\n        getRow: function getRow(_call) {\n            if (page.currentRow == null) {\n                _UI2.default.warning(\"请选择一条记录\");\n                return null;\n            }\n            _call(page.currentRow);\n        },\n        onEdit: function onEdit() {\n            if (this.isSelect()) {\n                var dialog = page.$refs.editDialog;\n                page.form = _Util2.default.cloneBase(page.currentRow);\n                dialog.open('编辑');\n            }\n        },\n        onDelete: function onDelete() {\n            var _this5 = this;\n\n            if (this.isSelect()) {\n                _UI2.default.deleteConfirm(function () {\n                    _this5.page.onDeleteConfirm();\n                });\n            }\n        },\n        loadParam: function loadParam(param) {\n            param._ds = page.queryParam._ds;\n            if (param.table == null) {\n                param.table = page.table;\n            }\n            if (param.dao == null) {\n                param.dao = page.dao;\n            }\n        },\n        onAddConfirm: function onAddConfirm() {\n            console.log('on add confirm');\n            var url = this.buildUrl('add');\n            var param = page.form;\n            param.opts_text = '正在新增...';\n\n            this.loadParam(param);\n\n            _UI2.default.post(url, param, function (result) {\n                page.onQuery();\n            });\n        },\n        getId: function getId(row) {\n            console.log('config', this.config);\n            if (row == null) {\n                row = this.page.currentRow;\n            }\n            if (row == null) {\n                console.error(\"获取当前列失败\", row);\n            }\n            var id = row[this.config.idName];\n            // console.log('getId', id, row, this.config.idName);\n            if (id == null) {\n                console.error(\"获取ID失败\", id);\n            }\n            return id;\n        },\n        onEditConfirm: function onEditConfirm(_call, showMsg) {\n            console.log('on edit confirm', showMsg, _call);\n            var url = this.buildUrl('edit');\n            var param = page.form;\n            console.log('edit', param);\n            param[this.config.idName] = this.getId();\n            param.opts_text = '正在编辑...';\n\n            this.loadParam(param);\n\n            _UI2.default.post(url, param, function (result) {\n\n                if (result.status == 'success' || result.code == 200) {\n                    if (_call != null) {\n                        _call(result);\n                    }\n                    page.onQuery();\n                    if (showMsg != false) {\n                        // 增加修改成功提示\n                        _UI2.default.success(result.msg);\n                    }\n                }\n            });\n        },\n        onDeleteConfirm: function onDeleteConfirm(_call, showMsg) {\n            var page = this.page;\n            _call = _call || function () {};\n            console.log('on delete confirm');\n            var url = this.buildUrl('delete');\n            var id = this.getId();\n            var opts_text = '正在删除...';\n            // if(param == null) {\n            // }\n            var param = { id: id, opts_text: opts_text };\n            console.log('delete param', param);\n\n            this.loadParam(param);\n\n            _UI2.default.post(url, param, function (result) {\n                _call();\n                page.onQuery();\n\n                if (showMsg != false) {\n                    // 增加删除成功提示\n                    _UI2.default.success(result.msg);\n                }\n            });\n        },\n        onPaginChange: function onPaginChange() {\n            console.log('page.opPaginChange', page.pagin);\n            page.onQuery();\n        },\n        postSelect: function postSelect(url, _call) {\n            if (!this.isSelect()) {\n                return;\n            }\n            var param = {\n                id: page.currentRow.id\n            };\n\n            _UI2.default.post(url, param, function (result) {\n                _call(result);\n            });\n        }\n    };\n    initPage(page, service);\n\n    return service;\n};\n\nexports = {\n    getOpts: function getOpts(opts) {\n        if (opts == null) {\n            opts = {};\n        }\n        if (opts == false) {\n            opts = {\n                check: false\n            };\n        }\n        if (opts.check == null) {\n            opts.check = true;\n        }\n        return opts;\n    },\n\n    getService: function getService(page, config) {\n        if (page == null) {\n            console.error(\"页面 page 不能为空\");\n            return;\n        }\n        // initPage(page);\n        return _getService(page, config);\n    }\n};\n})('app/service/CrudService.js'); exports; ","app/service/CrudServiceOld.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n    loadData: function loadData(_call, isLoadTable) {\n        var _this = this;\n\n        console.log('当前模块', this.module);\n        // 并发获取数据\n        var counter = Counter.auto('loadData');\n\n        counter.finish(function () {\n\n            _this.page.loading = false;\n            _this.page.init = true; // 提前完成初始化\n            if (isLoadTable != false) {\n\n                _this.loadTable(function () {\n                    _call();\n                    _this.page.loading = false; // 完成页面加载\n                    pageLoad();\n                });\n            } else {\n                _call();\n                _this.page.loading = false; // 完成页面加载\n                pageLoad();\n            }\n        });\n\n        if (page.table !== false) {\n            this.loadTableInfo(counter.callAuto('loadTableInfo'));\n            this.loadModelFieldMap(counter.callAuto('loadModelFieldMap'));\n        }\n        this.loadFieldMap(counter.callAuto('loadFieldMap'));\n    }\n};\n})('app/service/CrudServiceOld.js'); exports; ","app/service/util/BindTable.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Tree = require(parentUrl,\"../../util/Tree.js\");\n\nvar _Tree2 = _interopRequireDefault(_Tree);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\nexports = {\n    bind: function bind(page, data) {\n        var rows = data.rows;\n        var config = page.config.convertTree;\n        var tree = _Tree2.default.convert(rows, config.id, config.parentId, config.rootId);\n        page.rows = tree;\n    }\n};\n})('app/service/util/BindTable.js'); exports; ","app/util/Convert.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n    listToMap: function listToMap(list) {\n        return this.valueMap(list);\n    },\n    pairListToMap: function pairListToMap(list, key, value) {\n        var map = {};\n        for (var index = 0; index < list.length; index++) {\n            var item = list[index];\n            map[item[key]] = item[value];\n        }\n        return map;\n    },\n    listFields: function listFields(list, field) {\n        var values = [];\n        for (var i in list) {\n            var value = list[i];\n            var fieldValue = value[field];\n            values.push(fieldValue);\n        }\n        return values;\n    },\n    valueMap: function valueMap(values) {\n        var map = {};\n        for (var i in values) {\n            var value = values[i];\n            map[value] = value;\n        }\n        return map;\n    }\n};\n})('app/util/Convert.js'); exports; ","app/util/Core.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Constants = require(parentUrl,'../data/Constants.js');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _crypto = require(parentUrl,'./crypto.js');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _Mock = require(parentUrl,'../mock/Mock.js');\n\nvar _Mock2 = _interopRequireDefault(_Mock);\n\nvar _StringUtil = require(parentUrl,'./StringUtil.js');\n\nvar _StringUtil2 = _interopRequireDefault(_StringUtil);\n\nvar _SessionUtil = require(parentUrl,'./SessionUtil.js');\n\nvar _SessionUtil2 = _interopRequireDefault(_SessionUtil);\n\nvar _Counter = require(parentUrl,'./Counter.js');\n\nvar _Counter2 = _interopRequireDefault(_Counter);\n\nvar _Dict = require(parentUrl,'../data/Dict.js');\n\nvar _Dict2 = _interopRequireDefault(_Dict);\n\nvar _ServiceOpt = require(parentUrl,'../core/ServiceOpt.js');\n\nvar _ServiceOpt2 = _interopRequireDefault(_ServiceOpt);\n\nvar _NodeModule = require(parentUrl,'../NodeModule.js');\n\nvar _Util = require(parentUrl,'./Util.js');\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\n// 带缓存的请求，不带转圈\n// TODO 增加校验\nvar postcCache = {};\n$.postc = function (url, param, _call, type) {\n    var paramJson = JSON.stringify(param);\n    var key = url + paramJson;\n    var cache = postcCache[key];\n    if (cache != null) {\n        // console.log('从缓存中获取');\n        _call(cache);\n        return;\n    }\n    if (type == null) {\n        type = 'json';\n    }\n    $.post(url, param, function (result) {\n        // 链接和参数一致则 保存到缓存\n        postcCache[key] = result;\n        _call(result);\n    }, type);\n};\n\nvar initPage = function initPage(page) {\n    if (page.pagin == null) {\n        page.pagin = {\n            total: 0,\n            page: 1,\n            rows: 10\n        };\n    };\n\n    if (page.bindTable == null) {\n        page.bindTable = function (data) {\n            page.service.bindTable(data);\n        };\n    }\n\n    if (page.onQuery == null) {\n        page.onQuery = function () {\n            // console.log('onQuery');\n            page.service.onQuery();\n        };\n    }\n\n    if (page.onAdd == null) {\n        page.onAdd = function () {\n            // console.log('onAdd');\n            page.service.onAdd();\n        };\n    }\n\n    if (page.onEdit == null) {\n        page.onEdit = function (row) {\n            // console.log('onEdit');\n            page.service.onEdit(row);\n        };\n    }\n\n    if (page.onDelete == null) {\n\n        page.onDelete = function (call, row) {\n            // console.log('onDelete');\n            page.service.onDelete(call, row);\n        };\n    }\n\n    if (page.onPaginChange == null) {\n        page.onPaginChange = function () {\n            // console.log('onPaginChange');\n            page.service.onPaginChange();\n        };\n    }\n\n    if (page.onAddConfirm == null) {\n        page.onAddConfirm = function (_call, showMsg) {\n            page.service.onAddConfirm(_call, showMsg);\n        };\n    }\n\n    if (page.onEditConfirm == null) {\n        page.onEditConfirm = function (_call, showMsg) {\n            page.service.onEditConfirm(_call, showMsg);\n        };\n    }\n\n    if (page.onDeleteConfirm == null) {\n        page.onDeleteConfirm = function (_call, showMsg) {\n            page.service.onDeleteConfirm(_call, showMsg);\n        };\n    }\n\n    if (page.onSortChange == null) {\n        page.onSortChange = function (sortConfig) {\n            page.service.onSortChange(sortConfig);\n        };\n    }\n\n    if (page.onTest == null) {\n        page.onTest = function () {\n            console.log(page.currentRow);\n        };\n    }\n\n    if (page.onPacket == null) {\n        page.onPacket = function () {\n            if (page.$refs.packetDialog != null) {\n                page.$refs.packetDialog.open(page.currentRow);\n            } else {\n                console.error('未定义<cc-packet-dialog ref=\"packetDialog\"></cc-packet-dialog>');\n            }\n        };\n    }\n\n    page.fieldClick = function (field) {\n        var fields = page.comcodeEdit;\n        for (var i in fields) {\n            var comcodeEdit = fields[i];\n            if (comcodeEdit == field) {\n                page.$refs.comcodeDialog.open();\n            }\n        }\n        if (field == 'comCode' || field == 'comName') {\n            // 需要权限才能打开该弹框\n            page.$refs.comcodeDialog.open();\n        }\n    };\n\n    page.Dict = _Dict2.default;\n\n    page.D = function (key) {\n        return _Dict2.default.get(key);\n    };\n\n    if (page.queryParam == null) page.queryParam = {};\n    if (page.form == null) page.form = {};\n\n    // 初始化权限属性\n};\n\nvar pageStart = function pageStart() {\n    if (window.App != null) {\n        App.initPage = false;\n    }\n};\n\nvar pageLoad = function pageLoad() {\n    if (window.App != null) {\n        App.initPage = true;\n    }\n};\n\n/**\r\n * 获取业务对象\r\n * @param {Object} page vue实例\r\n * @param {Object} opt: {\r\n *      url: {\r\n *          datagrid: String,\r\n *          add: String,\r\n *          edit: String,\r\n *          delete: String\r\n *      }\r\n * }\r\n * @returns service\r\n */\nvar _getService = function _getService(page, opt) {\n    var config = page.config;\n    // console.log(\"config\", config);\n    // var defaultConfig = Util.clone(config);\n    if (opt == null) {\n        opt = {};\n    }\n\n    pageStart();\n    var service = {\n        opt: opt,\n        lastQueryParam: null,\n        sortConfig: null, // 排序配置\n        config: config,\n        page: page,\n        module: page.module,\n\n        /**\r\n         * 通知子组件，操作计数\r\n         * @param {Integer} operation 操作名称\r\n         */\n        notify: function notify(operation) {\n            page[operation]++;\n        },\n\n        /**\r\n         * 构建增删改查url\r\n         * @param {String} type 类型，可选值 [datagrid/add/edit/delete]\r\n         * @returns url\r\n         */\n        buildUrl: function buildUrl(type) {\n            var url = _ServiceOpt2.default.url(type, this.opt);\n            console.log(type, this.opt, this.opt[type], url);\n            if (url != null) {\n                return url;\n            }\n            // if(type == 'datagrid') {\n            // \tif(this.page.datagridApi != null) {\n            // \t\treturn Constants.root + this.module + \"/\" + this.page.datagridApi;\n            // \t}\n            // }\n            return _Constants2.default.root + this.module + \"/\" + type;\n        },\n        loadData: function loadData(_call, isLoadTable) {\n            var _this2 = this;\n\n            console.log('当前模块', this.module);\n            this.loadAuthv2();\n            console.log('page.moduleAuth', page.moduleAuth);\n\n            var finish = function finish() {\n                _call();\n                _this2.page.init = true; // 完成初始化\n                _this2.page.loading = false; // 完成页面加载\n                pageLoad();\n            };\n\n            if (isLoadTable != false) {\n                this.loadTable(function () {\n                    finish();\n                });\n            } else {\n                finish();\n            }\n        },\n        getQueryParam: function getQueryParam() {\n            var pagin = page.pagin;\n            var param = page.queryParam;\n            var pageSort = page.config.sortConfig;\n            var sort = this.sortConfig;\n            var queryParam = {\n                page: pagin.page,\n                rows: pagin.rows\n            };\n\n            if (queryParam.rows == 0) {\n                queryParam.page = 0;\n            }\n\n            for (var key in param) {\n                if (param[key] != \"\") {\n                    queryParam[key] = param[key];\n                }\n            }\n\n            if (!this.loadSort(queryParam, sort)) {\n                this.loadSort(queryParam, pageSort);\n            }\n            return queryParam;\n        },\n        loadSort: function loadSort(param, sort) {\n            if (sort != null) {\n                if (sort.sortOrder != null && sort.sortField != null) {\n                    param.sortField = sort.sortField;\n                    param.sortOrder = sort.sortOrder;\n                    if (sort.sortMulti != null) {\n                        param.sortMulti = JSON.stringify(sort.sortMulti);\n                    }\n\n                    return true;\n                }\n            }\n            return false;\n        },\n        onSortChange: function onSortChange(sortConfig) {\n            // page.config.sortConfig = sortConfig;\n            this.sortConfig = sortConfig;\n            page.onQuery();\n        },\n        // 仅查询\n        queryTable: function queryTable(_success) {\n            // 在条件发送改变之后，点击查询时，会自动回到第一页\n            var onlyQueryParam = page.queryParam;\n            var currentQueryParam = JSON.stringify(onlyQueryParam);\n            // console.log('上一次的条件', this.lastQueryParam);\n            // console.log('这一次的条件', currentQueryParam);\n            if (this.lastQueryParam != null) {\n                if (this.lastQueryParam != currentQueryParam) {\n                    page.pagin.page = \"1\"; // 回到第一页\n                }\n            }\n            // 保存条件，下一次使用\n            this.lastQueryParam = currentQueryParam;\n\n            var queryParam = this.getQueryParam();\n\n            var url = this.buildUrl(\"datagrid\");\n\n            // TODO 清除空格\n            _Util2.default.trimMapField(queryParam);\n            console.log(\"查询主表格条件\", queryParam);\n            console.log('url', url);\n\n            Core.post(url, queryParam, function (data) {\n\n                if (_success != null) {\n                    _success(data);\n                }\n            }, 'json');\n        },\n        // 仅绑定\n        bindTable: function bindTable(data) {\n            console.log(\"查询主表格数据\", data);\n            var pagin = page.pagin;\n            pagin.total = data.total;\n            page.detail = data.detail;\n            page.datagrid = data;\n            console.log('this.opt', this.opt);\n\n            if (this.opt.rowKey == 'root') {\n                page.rows = data;\n            } else {\n                page.rows = data.rows;\n            }\n        },\n        // 查询表格并绑定\n        loadTable: function loadTable(_success) {\n            this.queryTable(function (data) {\n                page.bindTable(data);\n                if (_success != null) {\n                    _success();\n                }\n            });\n        },\n        loadAuthv2: function loadAuthv2() {\n            var buttonArr = ['add', 'delete', 'edit'];\n            var authArr = [];\n            var authMap = DataInit.getUserAuth();\n\n            for (var i in buttonArr) {\n                var button = buttonArr[i];\n                var key = this.module + '/' + button;\n                var hasAuth = authMap[key];\n                if (hasAuth) {\n                    authArr.push(button);\n                }\n                var Button = _StringUtil2.default.upFirst(button);\n                page['auth' + Button] = key;\n            }\n\n            page.moduleAuth = authArr;\n        },\n\n        loadAuth: function loadAuth(_success) {\n            var url = _Constants2.default.root + \"menu/moduleAuth\";\n            $.postc(url, {}, function (result) {\n                // console.log(result);\n                // var data = result.data;\n                // console.log('当前模块', page.module);\n                if (result.data == null) {\n                    // UI.warning(\"可能未登录\");\n                    _success();\n                    page.moduleAuth = [];\n                    return;\n                }\n                console.log('获取权限', result.data);\n                var auth = result.data[page.module];\n                if (auth == null) {\n                    auth = [];\n                }\n                page.moduleAuth = auth;\n                // console.log(\"当前模块权限：\", page.moduleAuth);\n\n                _success();\n            });\n        },\n        onQuery: function onQuery() {\n            // console.log('onQuery');\n            page.loading = true;\n            this.loadTable(function () {\n                page.loading = false;\n            });\n        },\n        onAdd: function onAdd() {\n            var dialog = page.$refs.editDialog;\n            page.form = {}; // 导致双向绑定解除？\n            // page.form = Util.cloneBase( page.currentRow );\n            dialog.open('新增');\n        },\n        isSelect: function isSelect() {\n            // console.log('isSelect', page.currentRow);\n            if (page.currentRow == null) {\n                UI.warning(\"请选择一条记录\");\n                return false;\n            }\n            return true;\n        },\n        getRow: function getRow(_call) {\n            if (page.currentRow == null) {\n                UI.warning(\"请选择一条记录\");\n                return null;\n            }\n            _call(page.currentRow);\n        },\n        bindRow: function bindRow(row) {\n            if (row != null) {\n                page.currentRow = row;\n            }\n        },\n        onEdit: function onEdit(row) {\n            console.log('onEdit', row);\n            this.bindRow(row);\n            if (this.isSelect()) {\n                var dialog = page.$refs.editDialog;\n                page.form = _Util2.default.cloneBase(page.currentRow);\n                console.log('page.currentRow', page.currentRow);\n                dialog.open('编辑');\n            }\n        },\n        onDelete: function onDelete(_call, row) {\n            var _this3 = this;\n\n            this.bindRow(row);\n            if (this.isSelect()) {\n                UI.deleteConfirm(function () {\n                    console.log('用户点击了删除');\n                    _this3.page.onDeleteConfirm(_call);\n                });\n            }\n        },\n        onAddConfirm: function onAddConfirm(_call, showMsg) {\n            // console.log('on add confirm');\n            var url = this.buildUrl('add');\n            var param = page.form;\n            param.opts_text = '正在新增...';\n            param._ds = page.queryParam._ds;\n            UI.post(url, param, function (result) {\n                if (result.status == 'success') {\n                    if (_call != null) {\n                        _call(result);\n                    }\n                    page.onQuery();\n                    if (showMsg != false) {\n                        // 增加添加成功提示\n                        UI.success(result.msg);\n                    }\n                }\n            });\n        },\n        getIdName: function getIdName() {\n            if (this.config.idName != null && this.config.idName != '') {\n                return this.config.idName;\n            } else {\n                return 'id';\n            }\n        },\n        getId: function getId(row) {\n            // console.log('config', this.config);\n            if (row == null) {\n                row = this.page.currentRow;\n            }\n            if (row == null) {\n                console.error(\"获取当前列失败\", row);\n            }\n            var id = row[this.getIdName()];\n            // console.log('getId', id, row, this.getIdName());\n            if (id == null) {\n                console.error(\"获取ID失败\", id);\n            }\n            return id;\n        },\n        onEditConfirm: function onEditConfirm(_call, showMsg) {\n            console.log('on edit confirm');\n            var url = this.buildUrl('edit');\n            var param = page.form;\n            // console.log('edit', param);\n            param[this.getIdName()] = this.getId();\n            param.opts_text = '正在编辑...';\n            param._ds = page.queryParam._ds;\n\n            UI.post(url, param, function (result) {\n                if (result.status == 'success') {\n                    if (_call != null) {\n                        _call(result);\n                    }\n                    page.onQuery();\n                    if (showMsg != false) {\n                        // 增加修改成功提示\n                        UI.success(result.msg);\n                    }\n                }\n            });\n        },\n        onDeleteConfirm: function onDeleteConfirm(_call, showMsg) {\n            var page = this.page;\n            // console.log('on delete confirm');\n            var url = this.buildUrl('delete');\n            var id = this.getId();\n            var opts_text = '正在删除...';\n            var param = { id: id, opts_text: opts_text };\n            // console.log( 'delete param', param);\n            param._ds = page.queryParam._ds;\n            UI.post(url, param, function (result) {\n                if (result.status == 'success') {\n                    if (_call != null) {\n                        _call(result);\n                    }\n                    page.onQuery();\n                    if (showMsg != false) {\n                        // 增加删除成功提示\n                        UI.success(result.msg);\n                    }\n                }\n            });\n        },\n        onPaginChange: function onPaginChange() {\n            console.log('opPaginChange');\n            page.onQuery();\n        }\n    };\n    initPage(page, service);\n\n    return service;\n};\n\nvar Core = {\n    debug: function debug(name) {\n        if (StyleConfig.forceCloseDebug == true) {\n            return false;\n        }\n        if (StyleConfig.componentDebug[name] == true) {\n            return true;\n        }\n        if (StyleConfig.debug) {\n            return true;\n        }\n        return false;\n    },\n    getOpts: function getOpts(opts) {\n        if (opts == null) {\n            opts = {};\n        }\n        if (opts == false) {\n            opts = {\n                check: false\n            };\n        }\n        if (opts.check == null) {\n            opts.check = true;\n        }\n        return opts;\n    },\n\n    // 对新的报文格式进行校验\n    postApi: function postApi(url, param, _call, type, opts) {\n        $.post(url, param, function (result) {\n            if (result.code != 200) {\n                if (opts.check) {\n                    if (result.dialog == true) {\n                        UI.warningDialog(result.message);\n                    } else {\n                        // 提示不了错误？\n                        UI.error(\"提示：\" + result.message);\n                    }\n                } else {\n                    console.log('参数不需要校验');\n                }\n            }\n            _call(result);\n        }, type);\n    },\n    /**\r\n     * v2 版本接口处理\r\n     */\n    handleV2: function handleV2(url, opts, result, _call) {\n        if (result.code != 200) {\n            if (opts.check) {\n                if (result.dialog == true) {\n                    UI.warningDialog(result.message);\n                } else {\n                    // UI.error(\"提示：\" + result.message);\n                    if (result.message.includes('登录已失效')) {\n                        UI.alert(result.message, function () {\n                            _SessionUtil2.default.setUser();\n                            var url = window.location.href.split('#');\n                            if (window.UserType == 'auction') {\n                                window.location.href = url[0] + '#/login';\n                            } else {\n                                window.location.href = url[0] + '#/login';\n                            }\n                        });\n                    } else {\n                        UI.error(\"提示：\" + result.message);\n                    }\n                }\n            } else {\n                console.log('参数不需要校验');\n            }\n        } else {\n            result.status = 'success';\n        }\n        _call(result);\n    },\n\n    /**\r\n     * v1 版本接口处理\r\n     */\n    handleV1: function handleV1(url, opts, result, _call) {\n        if (_Util2.default.isString(result)) {\n            _call(result);\n            return;\n        }\n\n        if (result.status == \"success\") {\n\n            // 成功的不提示\n            // app.$message({\n            //     message: result.msg,\n            //     type: 'success'\n            // });\n\n        } else if (result.status == \"failure\") {\n\n            if (opts.check) {\n                if (result.dialog == true) {\n                    UI.warningDialog(result.msg);\n                } else {\n                    if (result.msg.includes('登录已失效')) {\n                        UI.alert(result.message, function () {\n                            _SessionUtil2.default.setUser();\n                            var url = window.location.href.split('#');\n                            if (window.UserType == 'auction') {\n                                window.location.href = url[0] + '#/login';\n                            } else {\n                                window.location.href = url[0] + '#/login';\n                            }\n                        });\n                    } else {\n                        UI.error(\"提示：\" + result.msg);\n                    }\n                }\n            } else {\n                console.log('参数不需要校验');\n            }\n\n            console.error('请求' + url + '异常');\n            console.error('响应异常结果', result);\n            if (result.msg == '用户未登录') {\n                AppPlus.openLoginDialog();\n            }\n        } else {\n            console.info('响应其它结果', result);\n        }\n\n        _call(result);\n    },\n\n    /**\r\n     * 以json格式发起请求\r\n     */\n    postJson: function postJson(url, param, _call, type, opts) {\n        opts = this.getOpts(opts);\n        opts.requestType = 'json';\n        param = JSON.stringify(param);\n        this.post(url, param, _call, type, opts);\n    },\n\n    /**\r\n     * 以加密发起请求，默认为 aes 加密\r\n     */\n    postEncrypt: function postEncrypt(url, param, _call, type, opts) {\n        opts = this.getOpts(opts);\n        opts.requestType = 'json';\n        var data = _crypto2.default.encrypt(JSON.stringify(param));\n        var map = {\n            'dataSecret': data\n        };\n        var request = JSON.stringify(map);\n        this.post(url, request, _call, type, opts);\n    },\n\n    postToken: function postToken(url, param, _call, type, token) {\n\n        if (token == null) {\n            console.error('token 不能为空', url, token);\n            return;\n        }\n        var opts = {\n            token: token\n        };\n        this.post(url, param, _call, type, opts);\n    },\n\n    /**\r\n     * 带校验的接口请求 - 任何请求都走该校验\r\n     * 成功不提示，失败提示后台返回信息\r\n     * 无论是成功还是失败都会回调\r\n     * @param {String} url 请求地址\r\n     * @param {Object} param 请求参数\r\n     * @param {Function} _call 回调函数\r\n     * @param {String} type 响应类型\r\n     * @param {Object} opts 扩展参数\r\n     */\n    post: function post(url, param, _call, type, opts) {\n\n        // 开头 // 修复\n        if (url.substring(0, 2) === '//') {\n            url = '/' + url.substring(2);\n            console.info('url以//为开头，不合法', url);\n        }\n        if (url.substring(0, 1) !== '/') {\n            url = _Constants2.default.root + url;\n        }\n\n        if (_Util2.default.isFunction(param)) {\n            _call = param;\n            param = {};\n        }\n\n        type = type || 'json';\n        opts = this.getOpts(opts);\n        _call = _call || function () {};\n\n        // console.log('Core post opts', opts);\n        // console.log('Core post url', url);\n\n        // if(url == 'payment-upay-console/checkAccount/bankQuery') {\n        //     this.postApi(url, param, _call, type, opts);\n        //     return;\n        // }\n\n        // 判断是否为mock地址\n        var isMock = _Mock2.default.isMock(url);\n        if (isMock) {\n            // console.log('mock接口', url);\n            url = _StringUtil2.default.replaceAll(url, 'api', 'mock-api');\n        }\n\n        var _this = this;\n        var contentType = null;\n        if (opts.requestType === 'json') {\n            contentType = 'application/json';\n        }\n\n        var token = _SessionUtil2.default.getToken();\n        if (token == null) {\n            console.error('token is null');\n        }\n\n        if (opts.token != null) {\n            token = opts.token;\n        }\n\n        var options = {\n            url: url,\n            dataType: type,\n            headers: {\n                'Authorization': token\n            },\n            data: param,\n            type: \"post\",\n            success: function success(result) {\n                if (result == null) {\n                    UI.error('接口：' + url + \"返回结果为空\");\n                    _call();\n                    return;\n                }\n                if (result.code != null) {\n                    _this.handleV2(url, opts, result, _call);\n                } else {\n                    _this.handleV1(url, opts, result, _call);\n                }\n            },\n            error: function error(xhr, status, _error2) {\n                console.log('xhr', xhr);\n                var statusCode = xhr.status;\n                var statusText = xhr.statusText;\n                var msg = statusCode + ' ' + statusText;\n                console.error('request [' + url + '] status:' + msg);\n                UI.warning('服务端响应：' + msg);\n\n                // var errorResult = JSON.parse( xhr.responseText );\n                // if(errorResult.code != null) {\n                //     _this.handleV2(url, opts, errorResult, _call);\n                // } else {\n                //     _this.handleV1(url, opts, errorResult, _call);\n                // }\n            }\n        };\n\n        if (contentType !== null) {\n            options.contentType = contentType;\n        }\n        if (opts.timeout != null) {\n            options.timeout = opts.timeout;\n        }\n\n        console.log('请求【' + url + '】选项', options);\n\n        $.ajax(options);\n    },\n\n    /**\r\n     * 带校验的接口请求 - 任何请求都走该校验\r\n     * @param {String} url 请求地址\r\n     * @param {Object} param 请求参数\r\n     * @param {Function} _call 回调函数\r\n     * @param {String} type 响应类型\r\n     * @param {Object} opts 扩展参数\r\n     */\n    getApi: function getApi(url, param, _call, type, opts) {\n\n        // 开头 // 修复\n        if (url.substring(0, 2) === '//') {\n            url = '/' + url.substring(2);\n            console.info('url以//为开头，不合法', url);\n        }\n        if (url.substring(0, 1) !== '/') {\n            url = _Constants2.default.root + url;\n        }\n\n        if (_Util2.default.isFunction(param)) {\n            _call = param;\n            param = {};\n        }\n\n        type = type || 'json';\n        opts = this.getOpts(opts);\n        _call = _call || function () {};\n\n        // console.log('Core post opts', opts);\n        // console.log('Core post url', url);\n\n        // if(url == 'payment-upay-console/checkAccount/bankQuery') {\n        //     this.postApi(url, param, _call, type, opts);\n        //     return;\n        // }\n\n        // 判断是否为mock地址\n        var isMock = _Mock2.default.isMock(url);\n        if (isMock) {\n            // console.log('mock接口', url);\n            url = _StringUtil2.default.replaceAll(url, 'api', 'mock-api');\n        }\n\n        var _this = this;\n\n        $.ajax({\n            url: url,\n            dataType: type,\n            headers: {\n                'Authorization': _SessionUtil2.default.getToken()\n            },\n            data: param,\n            type: \"get\",\n            success: function success(result) {\n                if (result == null) {\n                    UI.error('接口：' + url + \"返回结果为空\");\n                    return;\n                }\n                if (result.code != null) {\n                    _this.handleV2(url, opts, result, _call);\n                } else {\n                    _this.handleV1(url, opts, result, _call);\n                }\n            },\n            error: function error(xhr, status, _error3) {\n                var statusCode = xhr.status;\n                var statusText = xhr.statusText;\n                var msg = statusCode + ' ' + statusText;\n                console.error('request [' + url + '] status:' + msg);\n                UI.warning('服务端响应：' + msg);\n            }\n        });\n\n        // 简易请求\n        // $.post(url, param, (result) => {\n        //     if(result.code != null) {\n        //         this.handleV2(url, opts, result, _call);\n        //     } else {\n        //         this.handleV1(url, opts, result, _call);\n        //     }\n        // }, type);\n    },\n\n    getImage: function getImage(url, _call) {\n        console.log('getImage', url);\n        (0, _NodeModule.axios)({\n            method: 'get',\n            url: url,\n            responseType: 'blob',\n            headers: {\n                'Authorization': _SessionUtil2.default.getToken()\n            }\n        }).then(function (result) {\n            _call(URL.createObjectURL(result.data));\n        });\n    },\n\n    download: function download(url, param, _success, _failure) {\n        var _this4 = this;\n\n        console.log('下载' + url + '资源');\n        (0, _NodeModule.axios)({\n            method: \"POST\",\n            url: url,\n            data: _NodeModule.qs.stringify(param),\n            headers: {\n                'Authorization': _SessionUtil2.default.getToken()\n            },\n            responseType: 'blob' //返回是个文件\n        }).then(function (response) {\n            console.log('response', response);\n            _this4.downloadFile(response, function () {\n                console.log('下载完成');\n                _success();\n            }); //then直接下载，方法在下边\n        }).catch(function (error, _t) {\n\n            // 获取失败响应\n            if (error.response.status != 200) {\n                error.response.data.text().then(function (text) {\n                    var obj = JSON.parse(text);\n                    var errorMsg = obj.msg;\n\n                    if (errorMsg != null) {\n                        UI.error('下载失败，原因：' + errorMsg);\n                    } else {\n                        UI.error('下载失败');\n                    }\n                });\n            } else {\n                console.log(error);\n                UI.error('下载失败');\n            }\n            _failure();\n        });\n    },\n\n    // 下载文件\n    downloadFile: function downloadFile(res, _call) {\n        var blob = new Blob([res.data], { type: \"application/vnd.ms-excel\" }); //type是文件类，详情可以参阅blob文件类型\n        // 创建新的URL并指向File对象或者Blob对象的地址\n        var blobURL = window.URL.createObjectURL(blob);\n        // 创建a标签，用于跳转至下载链接\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        var filename = decodeURI(res.headers['content-disposition'].split('=')[1]);\n        tempLink.setAttribute('download', filename);\n        // 兼容：某些浏览器不支持HTML5的download属性\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n        // 挂载a标签\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        // 释放blob URL地址\n        window.URL.revokeObjectURL(blobURL);\n        _call();\n    },\n\n    // 获取并发加载器\n    getMultiLoader: function getMultiLoader() {\n        var multiLoader = {\n            _succ: null,\n            loadSize: 0,\n            loaderArr: [],\n            loadAll: function loadAll() {\n                this.loadSize++;\n                if (this.loadSize >= this.loaderArr.length) {\n                    console.log('loadAll success');\n                    this._succ();\n                }\n            },\n            add: function add(_loaderArr) {\n                this.loaderArr = _loaderArr;\n            },\n            execute: function execute(_success) {\n                var _this5 = this;\n\n                this._succ = _success;\n                for (var i in this.loaderArr) {\n                    var _func = this.loaderArr[i];\n                    _func(function () {\n                        _this5.loadAll();\n                    });\n                }\n            }\n        };\n        return multiLoader;\n    },\n    inArray: function inArray(arr, data) {\n        for (var i in arr) {\n            if (arr[i] == data) {\n                return true;\n            }\n        }\n        return false;\n    },\n    getService: function getService(page, config) {\n        if (page == null) {\n            console.error(\"页面 page 不能为空\");\n            return;\n        }\n        // initPage(page);\n        return _getService(page, config);\n    },\n    checkResult: function checkResult(result) {\n        if (result == null) {\n            UI.warning(\"系统异常：result is null\");\n            return false;\n        }\n        if (result.status == \"failure\") {\n            // vue.$message({\n            //     message: result.msg,\n            //     type: 'error'\n            // });\n            UI.warning(result.msg);\n            return false;\n        }\n        return true;\n    },\n    getRoutePath: function getRoutePath() {\n        // location.href;\n    },\n    getDom: function getDom(select) {\n        if (select.indexOf('#') != -1) {\n            var id = select.substring(1);\n            return document.getElementById(id);\n        } else {\n            console.error(\"暂时只支持 byId\");\n        }\n    },\n    /**\r\n     * 等待组件渲染完成\r\n     * 不推荐使用，但是某些场景下使用可以降低复杂度\r\n     */\n    waitRef: function waitRef(refs, name, _call, _error, _key) {\n        var i = 0;\n        var timer = setInterval(function () {\n            i++;\n            if (i == 100) {\n                console.error('waitRef 超过一秒' + name);\n                clearInterval(timer);\n\n                if (_error != null) {\n                    _error();\n                }\n\n                return;\n            }\n            var ref = refs[name];\n            if (ref != null) {\n                _call(ref);\n                clearInterval(timer);\n            }\n        }, 10);\n    },\n    waitDom: function waitDom(select, _call) {\n        var i = 0;\n        var timer = setInterval(function () {\n            i++;\n            if (i == 100) {\n                console.error('waitDom 超过一秒');\n                clearInterval(timer);\n                return;\n            }\n            var dom = $(select)[0];\n            if (dom != null) {\n                // console.log('waitDom success');\n                _call(dom);\n                clearInterval(timer);\n            }\n        }, 10);\n    },\n    getBodyWidth: function getBodyWidth() {\n        return document.body.clientWidth;\n    },\n    getPageWidth: function getPageWidth() {\n        var width = 65;\n        if (App.asideWidth == null) {\n            return this.getBodyWidth();\n        }\n        if (App.asideWidth.indexOf('px') != -1) {\n            width = Number(App.asideWidth.replace('px', ''));\n        }\n        var bodyWith = this.getBodyWidth();\n        return bodyWith - width;\n    },\n    calcMaxWidth: function calcMaxWidth(width) {\n        if (width.indexOf('%') != -1) {\n            var rate = Number(width.replace('%', '')) / 100;\n            return document.body.clientWidth * rate + 'px';\n        } else if (width.indexOf('px') != -1) {\n            return width;\n        } else {\n            return width + 'px';\n        }\n    },\n    getHeadHeight: function getHeadHeight() {\n        return 80;\n    },\n    getTagHeight: function getTagHeight() {\n        return 40;\n    },\n    getClientHeight: function getClientHeight() {\n        return document.body.clientHeight;\n    },\n    calcMaxHeight: function calcMaxHeight(height, reduce) {\n        if (height == '' || height == null) {\n            if (reduce == null) {\n                reduce = 180;\n            }\n            return document.body.clientHeight - reduce + 'px';\n        } else if (height.indexOf('%') != -1) {\n            if (reduce == null) {\n                reduce = 0;\n            }\n            var rate = Number(height.replace('%', '')) / 100;\n            return document.body.clientHeight * rate - reduce + 'px';\n        } else if (height.indexOf('px') != -1) {\n            return height;\n        } else {\n            return height + 'px';\n        }\n    },\n    get: function get(key) {\n        return localStorage.getItem(key);\n    },\n    getObj: function getObj(key) {\n        var value = localStorage.getItem(key);\n        if (value != null && value != '' && value != 'undefined') {\n            return JSON.parse(value);\n        } else {\n            return value;\n        }\n    },\n    put: function put(key, value) {\n        if (_Util2.default.isObject(value) || _Util2.default.isArray(value)) {\n            return localStorage.setItem(key, JSON.stringify(value));\n        } else {\n            return localStorage.setItem(key, value);\n        }\n    },\n\n    /**\r\n     * 绑定\r\n     * @param {*} page \r\n     * @param {*} key \r\n     * @param {*} value 默认值\r\n     */\n    bind: function bind(watch, key, value) {\n\n        // 1. 构建监听函数\n        var oldWatch;\n        if (watch[key] != null) {\n            oldWatch = watch[key];\n        }\n\n        if (_Util2.default.isBaseType(value)) {\n            watch[key] = function (newValue, oldValue) {\n                Core.put(key, newValue);\n                if (oldWatch != null) {\n                    oldWatch(newValue, oldValue);\n                }\n            };\n        } else {\n            console.log('bind object ' + key);\n            watch[key] = {\n                handler: function handler(newValue, oldValue) {\n                    var json = JSON.stringify(newValue);\n                    Core.put(key, json);\n\n                    if (oldWatch != null) {\n                        oldWatch(newValue, oldValue);\n                    }\n                },\n\n                immediate: true,\n                deep: true\n            };\n        }\n\n        // 2. 第一次取值解析\n        if (Core.get(key) != null) {\n            var localValue = Core.get(key);\n\n            if (localValue.indexOf('{') != -1) {\n                return JSON.parse(localValue);\n            }\n\n            return localValue;\n        } else {\n            return value;\n        }\n    }\n};\n\nwindow.Core = Core;\n\nexports = Core;\n})('app/util/Core.js'); exports; ","app/util/Counter.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n    auto: function auto(title) {\n        return this.build(0, title, 'auto');\n    },\n    build: function build(size, title, mode) {\n\n        if (size == null) {\n            console.error('size 不能为空');\n            return;\n        }\n        if (title == null) {\n            title = '';\n        }\n        var id = new Date().format('yyyyMMddHHmmss') + Math.random();\n        // console.log('build ' + title + ' counter id ' + id);\n        var counter = {\n            id: id,\n            title: title,\n            mode: mode,\n            size: size,\n            executeSize: 0,\n            logCall: function logCall(info) {\n                if (info != null) {\n                    if (this.title != null) {\n                        // console.log(this.title + ' ' + info + ' 执行完成' + this.id);\n                    } else {\n                            // console.log(info + ' 执行完成' + this.id);\n                        }\n                }\n            },\n            logFinish: function logFinish() {\n                // console.log(this.title + '执行完成');\n            },\n            // 执行一个call\n            call: function call(subTitle) {\n                counter.logCall(subTitle);\n                counter.executeSize++;\n                if (counter.executeSize == counter.size) {\n                    if (counter.finishCall != null) {\n                        counter.logFinish();\n                        counter.finishCall();\n                    }\n                }\n            },\n            // 返回一个call\n            callAuto: function callAuto(subTitle) {\n                var _this = this;\n\n                if (this.mode != 'auto') {\n                    console.error('必须是auto模式才允许调用');\n                    return;\n                }\n                this.size++;\n                // console.log(this.title + ' build call ' + this.size + ' ' + subTitle + ' ' + this.id);\n                return function () {\n                    _this.call(subTitle);\n                };\n                // return this.call;\n            },\n            finishCall: null,\n            finish: function finish(finishCall) {\n                if (this.mode != 'auto') {\n                    if (this.size == 0) {\n                        finishCall();\n                        return;\n                    }\n                }\n\n                if (this.size == this.executeSize) {\n                    // console.log(this.title + 'finishCall ' + this.size + '->' + this.executeSize + ' id = ' + this.id);\n                    finishCall();\n                    return;\n                }\n\n                counter.finishCall = finishCall;\n            }\n        };\n        return counter;\n    }\n};\n})('app/util/Counter.js'); exports; ","app/util/Counter2.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * 数字工具类\n */\nvar NumberUtil = {\n    /**\n     * 数字转成汉字\n     * @params num === 要转换的数字\n     * @return 汉字\n     * */\n    toChinesNum: function toChinesNum(num) {\n        var changeNum = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];\n        var unit = ['', '十', '百', '千', '万'];\n        num = parseInt(num);\n        var getWan = function getWan(temp) {\n            var strArr = temp.toString().split('').reverse();\n            var newNum = '';\n            var newArr = [];\n            strArr.forEach(function (item, index) {\n                newArr.unshift(item === '0' ? changeNum[item] : changeNum[item] + unit[index]);\n            });\n            var numArr = [];\n            newArr.forEach(function (m, n) {\n                if (m !== '零') numArr.push(n);\n            });\n            if (newArr.length > 1) {\n                newArr.forEach(function (m, n) {\n                    if (newArr[newArr.length - 1] === '零') {\n                        if (n <= numArr[numArr.length - 1]) {\n                            newNum += m;\n                        }\n                    } else {\n                        newNum += m;\n                    }\n                });\n            } else {\n                newNum = newArr[0];\n            }\n\n            return newNum;\n        };\n        var overWan = Math.floor(num / 10000);\n        var noWan = num % 10000;\n        if (noWan.toString().length < 4) {\n            noWan = '0' + noWan;\n        }\n        return overWan ? getWan(overWan) + '万' + getWan(noWan) : getWan(num);\n    },\n\n\n    /**\n     * 四舍五入\n     */\n    round: function round(number, precision) {\n        if (isNaN(number)) {\n            number = 0;\n        }\n\n        if (number > 0) {\n            return parseInt(number * Math.pow(10, precision) + 0.5) / Math.pow(10, precision);\n        } else if (number < 0) {\n            return parseInt(number * Math.pow(10, precision) - 0.5) / Math.pow(10, precision);\n        } else {\n            return parseInt(number * Math.pow(10, precision)) / Math.pow(10, precision);\n        }\n    },\n\n\n    /**\n     * 截取N位小数（直接截取，不进行四舍五入）\n     */\n    fixed: function fixed(number, precision) {\n        if (isNaN(number) || number === \"\" || number == null) {\n            number = 0;\n        }\n        var result = number.toString();\n        if (result.indexOf(\".\") === -1) {\n            result = result + \".\";\n        }\n        var tempStr = \"\";\n        for (var i = 0; i < precision; i++) {\n            tempStr = tempStr + \"0\";\n        }\n        result = result + tempStr;\n        result = result.substring(0, precision + result.indexOf(\".\") + 1);\n        if (result.endsWith(\".\")) {\n            result = result.substring(0, result.length - 1);\n        }\n\n        return result;\n    },\n\n\n    /**\n     * 数字运算时，需要将空转换成默认的0\n     * @param str\n     * @returns {*}\n     */\n    brankToZero: function brankToZero(str) {\n        if (!str || str && typeof str === \"string\" && str.trim() === \"\") {\n            str = \"0\";\n        }\n        return str;\n    },\n\n\n    /**\n     * 取整\n     * @param  {[type]} number [保费]\n     * @param  {[type]} flag   [标志。-1表示向下取整；0表示四舍五入；1或者不含这参数表示向上取整]\n     * @return {[type]}        [description]\n     */\n    adjustValue: function adjustValue(number, flag) {\n        var OldValue = parseFloat(number);\n        var NewValue = 0;\n        if (flag === -1) {\n            NewValue = Math.floor(OldValue);\n        } else if (flag === 0) {\n            NewValue = Math.round(OldValue);\n        } else if (flag === undefined || flag === 1) {\n            NewValue = Math.ceil(OldValue);\n        }\n        return NewValue;\n    },\n    add: function add(a, b) {\n        var c, d, e;\n        try {\n            c = a.toString().split(\".\")[1].length;\n        } catch (f) {\n            c = 0;\n        }\n        try {\n            d = b.toString().split(\".\")[1].length;\n        } catch (f) {\n            d = 0;\n        }\n        e = Math.pow(10, Math.max(c, d));\n        return (this.mul(a, e) + this.mul(b, e)) / e;\n    },\n    mul: function mul(a, b) {\n        var c = 0;\n        var d, e;\n        try {\n            d = a.toString();\n        } catch (f) {\n            d = \"0\";\n        }\n        try {\n            e = b.toString();\n        } catch (f) {\n            e = \"0\";\n        }\n        try {\n            c += d.split(\".\")[1].length;\n        } catch (f) {}\n        try {\n            c += e.split(\".\")[1].length;\n        } catch (f) {}\n        return Number(d.replace(\".\", \"\")) * Number(e.replace(\".\", \"\")) / Math.pow(10, c);\n    },\n    sub: function sub(a, b) {\n        var c, d, e;\n        try {\n            c = a.toString().split(\".\")[1].length;\n        } catch (f) {\n            c = 0;\n        }\n        try {\n            d = b.toString().split(\".\")[1].length;\n        } catch (f) {\n            d = 0;\n        }\n        e = Math.pow(10, Math.max(c, d));\n        return (this.mul(a, e) - this.mul(b, e)) / e;\n    },\n    div: function div(a, b) {\n        var c, d;\n        var e = 0;\n        var f = 0;\n        try {\n            e = a.toString().split(\".\")[1].length;\n        } catch (g) {}\n        try {\n            f = b.toString().split(\".\")[1].length;\n        } catch (g) {}\n        c = Number(a.toString().replace(\".\", \"\"));\n        d = Number(b.toString().replace(\".\", \"\"));\n        return this.mul(c / d, Math.pow(10, f - e));\n    },\n\n\n    /**\n     * 校验输入浮点数整数位与小数位是否在规定范围内\n     * @param  {[type]} num         [description]\n     * @param  {[type]} intLength   [description]\n     * @param  {[type]} floatLength [description]\n     * @return {[type]}             [description]\n     */\n    checkFloat: function checkFloat(num, intLength, floatLength) {\n        if (num) {\n            var strIntLength = 0;\n            var strFloatLength = 0;\n            var str = num.toString();\n            try {\n                strIntLength = str.split(\".\")[0].length;\n                strFloatLength = str.split(\".\")[1].length;\n            } catch (e) {}\n            if (strIntLength > intLength || strFloatLength > floatLength) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n\n    /**\n     * 校验输入数字是否是整数\n     * @param  {[type]} strValue    [description]\n     * @return {[type]}             [description]\n     */\n    isInteger: function isInteger(strValue) {\n        if (strValue) {\n            var reg = /\\d+/g;\n            if (strValue == reg.exec(strValue)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /**\n     * 校验a>b\n     * @param  {[type]} a    [description]\n     * @param  {[type]} b    [description]\n     * @return {[type]}      [true：大于，false：小于等于]\n     */\n    greaterThan: function greaterThan(a, b) {\n        if (isNaN(a) || a === \"\" || a == null) {\n            a = 0;\n        }\n        if (isNaN(b) || b === \"\" || b == null) {\n            b = 0;\n        }\n        return a > b;\n    },\n\n\n    /**\n     * 校验a<b\n     * @param  {[type]} a    [description]\n     * @param  {[type]} b    [description]\n     * @return {[type]}      [true：小于，false：大于等于]\n     */\n    lessThan: function lessThan(a, b) {\n        if (isNaN(a) || a === \"\" || a == null) {\n            a = 0;\n        }\n        if (isNaN(b) || b === \"\" || b == null) {\n            b = 0;\n        }\n        return a < b;\n    }\n};\n\nexports = CounterX;\n})('app/util/Counter2.js'); exports; ","app/util/crypto.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _NodeModule = require(parentUrl,'../NodeModule.js');\n\nconsole.log('CryptoJS', _NodeModule.CryptoJS);\n\n//加密方法\n//npm i crypto-js\nfunction encrypt(word) {\n    var keyStr = \"08b68b91bb54ed41\";\n    var key = _NodeModule.CryptoJS.enc.Utf8.parse(keyStr);\n    var iv = _NodeModule.CryptoJS.enc.Utf8.parse(keyStr);\n\n    var srcs = _NodeModule.CryptoJS.enc.Utf8.parse(word);\n\n    var encrypted = _NodeModule.CryptoJS.AES.encrypt(srcs, key, {\n        mode: _NodeModule.CryptoJS.mode.CBC,\n        iv: iv,\n        padding: _NodeModule.CryptoJS.pad.Pkcs7\n    });\n\n    var encryptedHexStr = _NodeModule.CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\n    return encryptedHexStr;\n}\n\nexports = {\n    encrypt: encrypt\n};\n})('app/util/crypto.js'); exports; ","app/util/drag.js":"(function(parentUrl) {\n'use strict';\n\nvar _NodeModule = require(parentUrl,'../NodeModule.js');\n\n// v-dialogDrag: 弹窗拖拽\n_NodeModule.Vue.directive('dialogDrag', {\n  bind: function bind(el, binding, vnode, oldVnode) {\n\n    var dialogHeaderEl = el.querySelector('.el-dialog__header');\n    var dragDom = el.querySelector('.el-dialog');\n    dialogHeaderEl.style.cursor = 'move';\n    // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\n    var sty = dragDom.currentStyle || window.getComputedStyle(dragDom, null);\n    dialogHeaderEl.onmousedown = function (e) {\n\n      // 鼠标按下，计算当前元素距离可视区的距离\n      var disX = e.clientX - dialogHeaderEl.offsetLeft;\n      var disY = e.clientY - dialogHeaderEl.offsetTop;\n      // 获取到的值带px 正则匹配替换\n      var styL = void 0,\n          styT = void 0;\n      // 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px\n      if (sty.left.includes('%')) {\n\n        styL = +document.body.clientWidth * (+sty.left.replace(/\\%/g, '') / 100);\n        styT = +document.body.clientHeight * (+sty.top.replace(/\\%/g, '') / 100);\n      } else {\n\n        styL = +sty.left.replace(/\\px/g, '');\n        styT = +sty.top.replace(/\\px/g, '');\n      }\n      document.onmousemove = function (e) {\n\n        // 通过事件委托，计算移动的距离\n        var l = e.clientX - disX;\n        var t = e.clientY - disY;\n        // 移动当前元素\n        dragDom.style.left = l + styL + 'px';\n        dragDom.style.top = t + styT + 'px';\n        // 将此时的位置传出去\n        // binding.value({x:e.pageX,y:e.pageY})\n      };\n      document.onmouseup = function (e) {\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n      };\n    };\n  }\n});\nconsole.log('vue load drag.js');\n})('app/util/drag.js'); exports; ","app/util/Formatter.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n    date: function date(row, page, value) {\n        return new Date(value).format();\n    },\n    costTime: function costTime(startField, endField) {\n        return function (row) {\n            var start = row[startField];\n            var end = row[endField];\n            if (start != null && end != null) {\n                return end - start;\n            }\n            return null;\n        };\n    }\n};\n})('app/util/Formatter.js'); exports; ","app/util/md5.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*\n * JavaScript MD5 1.0.1\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n * \n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*jslint bitwise: true */\n/*global unescape, define */\n\n(function ($) {\n    'use strict';\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n\n    function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return msw << 16 | lsw & 0xFFFF;\n    }\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    function bit_rol(num, cnt) {\n        return num << cnt | num >>> 32 - cnt;\n    }\n\n    /*\n    * These functions implement the four basic operations the algorithm uses.\n    */\n    function md5_cmn(q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n    }\n    function md5_ff(a, b, c, d, x, s, t) {\n        return md5_cmn(b & c | ~b & d, a, b, x, s, t);\n    }\n    function md5_gg(a, b, c, d, x, s, t) {\n        return md5_cmn(b & d | c & ~d, a, b, x, s, t);\n    }\n    function md5_hh(a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n    function md5_ii(a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n    }\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    function binl_md5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << len % 32;\n        x[(len + 64 >>> 9 << 4) + 14] = len;\n\n        var i,\n            olda,\n            oldb,\n            oldc,\n            oldd,\n            a = 1732584193,\n            b = -271733879,\n            c = -1732584194,\n            d = 271733878;\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i], 7, -680876936);\n            d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n            b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n            d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n            c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n            d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n            a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n            d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n            c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n            b = md5_gg(b, c, d, a, x[i], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n            d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n            d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n            c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n            a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n            d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n            c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n            d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n            d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n            c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n            d = md5_hh(d, a, b, c, x[i], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n            a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n            b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n            a = md5_ii(a, b, c, d, x[i], 6, -198630844);\n            d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n            d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n            a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n            b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    }\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    function binl2rstr(input) {\n        var i,\n            output = '';\n        for (i = 0; i < input.length * 32; i += 8) {\n            output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xFF);\n        }\n        return output;\n    }\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    function rstr2binl(input) {\n        var i,\n            output = [];\n        output[(input.length >> 2) - 1] = undefined;\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0;\n        }\n        for (i = 0; i < input.length * 8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << i % 32;\n        }\n        return output;\n    }\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    function rstr_md5(s) {\n        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\n    }\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    function rstr_hmac_md5(key, data) {\n        var i,\n            bkey = rstr2binl(key),\n            ipad = [],\n            opad = [],\n            hash;\n        ipad[15] = opad[15] = undefined;\n        if (bkey.length > 16) {\n            bkey = binl_md5(bkey, key.length * 8);\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\n    }\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    function rstr2hex(input) {\n        var hex_tab = '0123456789abcdef',\n            output = '',\n            x,\n            i;\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    }\n\n    /*\n    * Encode a string as utf-8\n    */\n    function str2rstr_utf8(input) {\n        return unescape(encodeURIComponent(input));\n    }\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    function raw_md5(s) {\n        return rstr_md5(str2rstr_utf8(s));\n    }\n    function hex_md5(s) {\n        return rstr2hex(raw_md5(s));\n    }\n    function raw_hmac_md5(k, d) {\n        return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));\n    }\n    function hex_hmac_md5(k, d) {\n        return rstr2hex(raw_hmac_md5(k, d));\n    }\n\n    function md5(string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return hex_md5(string);\n            }\n            return raw_md5(string);\n        }\n        if (!raw) {\n            return hex_hmac_md5(key, string);\n        }\n        return raw_hmac_md5(key, string);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return md5;\n        });\n    } else {\n        // console.log(md5);\n        // console.log($);\n        var _$ = jQuery;\n        _$.md5 = md5;\n        window.md5 = md5;\n    }\n})(undefined);\n\nexports = $.md5;\n})('app/util/md5.js'); exports; ","app/util/NumberUtil.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * 数字工具类\r\n */\nvar NumberUtil = {\n    /**\r\n     * 数字转成汉字\r\n     * @params num === 要转换的数字\r\n     * @return 汉字\r\n     * */\n    toChinesNum: function toChinesNum(num) {\n        var changeNum = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];\n        var unit = ['', '十', '百', '千', '万'];\n        num = parseInt(num);\n        var getWan = function getWan(temp) {\n            var strArr = temp.toString().split('').reverse();\n            var newNum = '';\n            var newArr = [];\n            strArr.forEach(function (item, index) {\n                newArr.unshift(item === '0' ? changeNum[item] : changeNum[item] + unit[index]);\n            });\n            var numArr = [];\n            newArr.forEach(function (m, n) {\n                if (m !== '零') numArr.push(n);\n            });\n            if (newArr.length > 1) {\n                newArr.forEach(function (m, n) {\n                    if (newArr[newArr.length - 1] === '零') {\n                        if (n <= numArr[numArr.length - 1]) {\n                            newNum += m;\n                        }\n                    } else {\n                        newNum += m;\n                    }\n                });\n            } else {\n                newNum = newArr[0];\n            }\n\n            return newNum;\n        };\n        var overWan = Math.floor(num / 10000);\n        var noWan = num % 10000;\n        if (noWan.toString().length < 4) {\n            noWan = '0' + noWan;\n        }\n        return overWan ? getWan(overWan) + '万' + getWan(noWan) : getWan(num);\n    },\n\n\n    /**\r\n     * 四舍五入\r\n     */\n    round: function round(number, precision) {\n        if (isNaN(number)) {\n            number = 0;\n        }\n\n        if (number > 0) {\n            return parseInt(number * Math.pow(10, precision) + 0.5) / Math.pow(10, precision);\n        } else if (number < 0) {\n            return parseInt(number * Math.pow(10, precision) - 0.5) / Math.pow(10, precision);\n        } else {\n            return parseInt(number * Math.pow(10, precision)) / Math.pow(10, precision);\n        }\n    },\n\n\n    /**\r\n     * 截取N位小数（直接截取，不进行四舍五入）\r\n     */\n    fixed: function fixed(number, precision) {\n        if (isNaN(number) || number === \"\" || number == null) {\n            number = 0;\n        }\n        var result = number.toString();\n        if (result.indexOf(\".\") === -1) {\n            result = result + \".\";\n        }\n        var tempStr = \"\";\n        for (var i = 0; i < precision; i++) {\n            tempStr = tempStr + \"0\";\n        }\n        result = result + tempStr;\n        result = result.substring(0, precision + result.indexOf(\".\") + 1);\n        if (result.endsWith(\".\")) {\n            result = result.substring(0, result.length - 1);\n        }\n\n        return result;\n    },\n\n\n    /**\r\n     * 数字运算时，需要将空转换成默认的0\r\n     * @param str\r\n     * @returns {*}\r\n     */\n    brankToZero: function brankToZero(str) {\n        if (!str || str && typeof str === \"string\" && str.trim() === \"\") {\n            str = \"0\";\n        }\n        return str;\n    },\n\n\n    /**\r\n     * 取整\r\n     * @param  {[type]} number [保费]\r\n     * @param  {[type]} flag   [标志。-1表示向下取整；0表示四舍五入；1或者不含这参数表示向上取整]\r\n     * @return {[type]}        [description]\r\n     */\n    adjustValue: function adjustValue(number, flag) {\n        var OldValue = parseFloat(number);\n        var NewValue = 0;\n        if (flag === -1) {\n            NewValue = Math.floor(OldValue);\n        } else if (flag === 0) {\n            NewValue = Math.round(OldValue);\n        } else if (flag === undefined || flag === 1) {\n            NewValue = Math.ceil(OldValue);\n        }\n        return NewValue;\n    },\n    add: function add(a, b) {\n        var c, d, e;\n        try {\n            c = a.toString().split(\".\")[1].length;\n        } catch (f) {\n            c = 0;\n        }\n        try {\n            d = b.toString().split(\".\")[1].length;\n        } catch (f) {\n            d = 0;\n        }\n        e = Math.pow(10, Math.max(c, d));\n        return (this.mul(a, e) + this.mul(b, e)) / e;\n    },\n    mul: function mul(a, b) {\n        var c = 0;\n        var d, e;\n        try {\n            d = a.toString();\n        } catch (f) {\n            d = \"0\";\n        }\n        try {\n            e = b.toString();\n        } catch (f) {\n            e = \"0\";\n        }\n        try {\n            c += d.split(\".\")[1].length;\n        } catch (f) {}\n        try {\n            c += e.split(\".\")[1].length;\n        } catch (f) {}\n        return Number(d.replace(\".\", \"\")) * Number(e.replace(\".\", \"\")) / Math.pow(10, c);\n    },\n    sub: function sub(a, b) {\n        var c, d, e;\n        try {\n            c = a.toString().split(\".\")[1].length;\n        } catch (f) {\n            c = 0;\n        }\n        try {\n            d = b.toString().split(\".\")[1].length;\n        } catch (f) {\n            d = 0;\n        }\n        e = Math.pow(10, Math.max(c, d));\n        return (this.mul(a, e) - this.mul(b, e)) / e;\n    },\n    div: function div(a, b) {\n        var c, d;\n        var e = 0;\n        var f = 0;\n        try {\n            e = a.toString().split(\".\")[1].length;\n        } catch (g) {}\n        try {\n            f = b.toString().split(\".\")[1].length;\n        } catch (g) {}\n        c = Number(a.toString().replace(\".\", \"\"));\n        d = Number(b.toString().replace(\".\", \"\"));\n        return this.mul(c / d, Math.pow(10, f - e));\n    },\n\n\n    /**\r\n     * 校验输入浮点数整数位与小数位是否在规定范围内\r\n     * @param  {[type]} num         [description]\r\n     * @param  {[type]} intLength   [description]\r\n     * @param  {[type]} floatLength [description]\r\n     * @return {[type]}             [description]\r\n     */\n    checkFloat: function checkFloat(num, intLength, floatLength) {\n        if (num) {\n            var strIntLength = 0;\n            var strFloatLength = 0;\n            var str = num.toString();\n            try {\n                strIntLength = str.split(\".\")[0].length;\n                strFloatLength = str.split(\".\")[1].length;\n            } catch (e) {}\n            if (strIntLength > intLength || strFloatLength > floatLength) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n\n    /**\r\n     * 校验输入数字是否是整数\r\n     * @param  {[type]} strValue    [description]\r\n     * @return {[type]}             [description]\r\n     */\n    isInteger: function isInteger(strValue) {\n        if (strValue) {\n            var reg = /\\d+/g;\n            if (strValue == reg.exec(strValue)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /**\r\n     * 校验a>b\r\n     * @param  {[type]} a    [description]\r\n     * @param  {[type]} b    [description]\r\n     * @return {[type]}      [true：大于，false：小于等于]\r\n     */\n    greaterThan: function greaterThan(a, b) {\n        if (isNaN(a) || a === \"\" || a == null) {\n            a = 0;\n        }\n        if (isNaN(b) || b === \"\" || b == null) {\n            b = 0;\n        }\n        return a > b;\n    },\n\n\n    /**\r\n     * 校验a<b\r\n     * @param  {[type]} a    [description]\r\n     * @param  {[type]} b    [description]\r\n     * @return {[type]}      [true：小于，false：大于等于]\r\n     */\n    lessThan: function lessThan(a, b) {\n        if (isNaN(a) || a === \"\" || a == null) {\n            a = 0;\n        }\n        if (isNaN(b) || b === \"\" || b == null) {\n            b = 0;\n        }\n        return a < b;\n    }\n};\n\nexports = NumberUtil;\n})('app/util/NumberUtil.js'); exports; ","app/util/OneEchart.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar color = ['#81C784', '#64B5F6', '#EF5350', '#9575CD', '#FB8C00', '#7986CB', '#4DB6AC', '#AED581', '#BCAAA4', '#FBC02D', '#FFA000', '#78909C', '#deb887', '#ff7f50', '#5f9ea0', '#a52a2a', '#d2691e', '#008b8b', '#b8860b', '#8fbc8f', '#008000', '#ff69b4', '#4b0082'];\n\nvar buildColorPicker = function buildColorPicker() {\n    var instance = {\n        id: new Date().getTime(),\n        colorMap: {},\n        index: 0,\n        // 颜色分配\n        select: function select(key) {\n            if (this.index >= color.length) {\n                this.index = 0;\n            }\n            var c = color[this.index];\n            this.colorMap[key] = c;\n            this.index++;\n            return c;\n        },\n        // 获取颜色\n        get: function get(key) {\n            // 从已分配的颜色集合中读取颜色\n            if (this.colorMap[key] != null) {\n                return this.colorMap[key];\n            } else {\n                return this.select(key);\n            }\n        }\n    };\n    return instance;\n};\n\n// oneEchart 实例\nvar buildInstance = function buildInstance(config) {\n    var instance = {\n        config: config,\n        option: config.option,\n        select: null,\n        chart: null,\n        dataIndex: null,\n        // 自定义事件\n        on: function on(event, _call) {\n            var _this = this;\n\n            if (event == 'overX') {\n                this.chart.on('updateAxisPointer', function (event) {\n                    if (event.dataIndex != null) {\n                        if (!_this.overXFlag) {\n                            _call(event.dataIndex);\n                            _this.dataIndex = event.dataIndex;\n                        }\n                        if (_this.dataIndex != event.dataIndex) {\n                            _call(event.dataIndex);\n                            _this.dataIndex = event.dataIndex;\n                        }\n                        _this.overXFlag = true;\n                    }\n                });\n            }\n            if (event == 'outX') {\n                this.chart.on('hideTip', function (event) {\n                    if (_this.overXFlag) {\n                        _this.overXFlag = false;\n                        _call();\n                    }\n                });\n            }\n        },\n        // 销毁echarts实例\n        delete: function _delete() {\n            // 删除\n            if (this.chart != null) {\n                // window.echarts.init(dom);\n                this.chart.dispose();\n            }\n        },\n        // 初始化OneEchart实例\n        init: function init() {\n            var _this2 = this;\n\n            // console.log('init from config', config);\n            this.select = config.select;\n\n            window.addEventListener(\"resize\", function () {\n                if (_this2.chart != null) {\n                    _this2.chart.resize();\n                }\n            });\n            // 绘制图表。\n            // var dom = $(this.select)[0];\n            var dom = Core.getDom(this.select);\n            if (dom == null) {\n                console.error(\"[获取dom失败]\");\n                return;\n            } else {\n                // console.log(\"[创建echart dom成功]\");\n            }\n            var chart = window.echarts.init(dom);\n            if (config.option.color == null) {\n                config.option.color = color;\n            }\n            chart.setOption(config.option);\n            this.chart = chart;\n        },\n        // 获取series\n        getSeries: function getSeries() {\n            return this.option.series;\n        },\n        // 获取series的一列数据\n        getSeriesRow: function getSeriesRow() {\n            var series = this.getSeries();\n            var list = [];\n            for (var k in series) {\n                var unit = series[k];\n                for (var i in unit.data) {\n                    var value = unit.data[i];\n                }\n            }\n        },\n        render: function render() {},\n        push: function push(obj) {\n            this.render();\n        }\n    };\n    instance.init();\n    instance.render();\n    return instance;\n};\n\nvar Echart = {\n    colorPicker: buildColorPicker(), // 始终单例\n    colorPickerMap: {},\n    /**\r\n     * 构建饼图\r\n     * @param {String} select \r\n     * @param {Array} data \r\n     */\n    build: function build(config) {\n        return buildInstance(config);\n    },\n    getColorPicker: function getColorPicker(group) {\n        if (this.colorPickerMap[group] == null) {\n            this.colorPickerMap[group] = buildColorPicker();\n        }\n        return this.colorPickerMap[group];\n    },\n\n    buildLineColor: function buildLineColor(line, group) {\n        // console.log('line', line);\n        return this.buildColor(line.name, group);\n    },\n    buildPieColor: function buildPieColor(pie, group) {\n        // console.log('pie', pie);\n        return this.buildColor(pie.name, group);\n    },\n    buildColor: function buildColor(name, group) {\n        // console.log('group', group);\n        var picker = this.getColorPicker(group);\n        var color = picker.get(name);\n        // console.log('color', color);\n        return color;\n    }\n};\n\nwindow.OneEchart = Echart;\n\nexports = Echart;\n})('app/util/OneEchart.js'); exports; ","app/util/path.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports = function (path) {\n    var depth = urlDepth(location.href);\n    var relativeUrl = buildBaseUrl(depth);\n    return relativeUrl + path;\n};\n\nvar containsSize = function containsSize(str, char) {\n    var pos;\n    var arr = [];\n    pos = str.indexOf(char);\n    while (pos > -1) {\n        arr.push(pos);\n        pos = str.indexOf(char, pos + 1);\n    }\n    return arr.length;\n};\n\nvar urlDepth = function urlDepth(url) {\n    url = url.replace(\"http://\", \"\");\n    var size = containsSize(url, \"/\");\n    return size;\n};\n\nvar buildBaseUrl = function buildBaseUrl(depth) {\n    var url = \"\";\n    var size = depth - 2;\n    for (var i = 0; i < size; i++) {\n        url += \"../\";\n    }\n    return url;\n};\n\n;\n})('app/util/path.js'); exports; ","app/util/SessionUtil.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n\n    getUser: function getUser() {\n        if (window.UserType == 'auction') {\n            return Core.getObj('auctionUser');\n        }\n        return Core.getObj('user');\n    },\n    getToken: function getToken() {\n        var user = this.getUser();\n        if (user == null) {\n            return null;\n        }\n        return user.token;\n    },\n    getItem: function getItem(name) {\n        var _value = sessionStorage.getItem(name);\n        if (_value && _value !== 'undefined') {\n            return _value;\n        }\n    },\n    getCookie: function getCookie(name) {\n        var reg = new RegExp('(^| )' + name + '=([^;]*)(;|$)');\n        var arr = document.cookie.match(reg);\n        if (arr) {\n            return unescape(arr[2]);\n        } else {\n            return null;\n        }\n    },\n    setUser: function setUser(_user) {\n        console.log('login', _user);\n        if (window.UserType == 'auction') {\n            Core.put('auctionUser', _user);\n        } else {\n            Core.put('user', _user);\n        }\n    },\n    setCookie: function setCookie(name, value, hour) {\n        var exp = new Date();\n        exp.setTime(exp.getTime() + hour * 60 * 60 * 1000);\n        document.cookie = name + '=' + escape(value) + ';expires=' + exp.toGMTString() + \";\" + \"path=/\";\n    }\n};\n})('app/util/SessionUtil.js'); exports; ","app/util/StringUtil.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports = {\n\tupFirst: function upFirst(str) {\n\t\tvar newStr = str.slice(0, 1).toUpperCase() + str.slice(1);\n\t\treturn newStr;\n\t},\n\tnotNull: function notNull(str) {\n\t\tif (str == null) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn str;\n\t},\n\n\t// 替代全部\n\treplaceAll: function replaceAll(data, str, target) {\n\t\tvar exp = new RegExp(str, \"gm\");\n\t\tdata = data.replace(exp, target);\n\t\treturn data;\n\t},\n\n\tmatchSize: function matchSize(s, target) {\n\t\t//   var exp = eval(\"/\"+ target +\"/ig\")\n\t\tvar exp = new RegExp(target, \"ig\");\n\t\treturn s.match(exp).length;\n\t},\n\tcontainerSize: function containerSize(str, target) {\n\t\treturn str.split(target).length - 1;\n\t},\n\t//字符串的首字母大写\n\ttoUpperCaseFirstChar: function toUpperCaseFirstChar(s) {\n\t\treturn s.substring(0, 1).toUpperCase() + s.substring(1, s.length);\n\t},\n\ttoLowerCaseFirstChar: function toLowerCaseFirstChar(s) {\n\t\treturn s.substring(0, 1).toLowerCase() + s.substring(1, s.length);\n\t},\n\t/**\r\n * 命名转换：下划线命名法转骆驼命名法\r\n * UnderScoreCase2CamelCase\r\n */\n\tU2CamelCase: function U2CamelCase(naming) {\n\t\tvar words = naming.split('_');\n\t\tvar wordStr = \"\";\n\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\tvar word = words[i];\n\t\t\t// 所有字母小写\n\t\t\tword = word.toLowerCase();\n\t\t\t// 首字母大写\n\t\t\tword = this.toUpperCaseFirstChar(word);\n\t\t\tif (i == 0) {\n\t\t\t\t// 第一个字母小写\n\t\t\t\tword = this.toLowerCaseFirstChar(word);\n\t\t\t}\n\t\t\twordStr += word;\n\t\t}\n\t\treturn wordStr;\n\t}\n};\n})('app/util/StringUtil.js'); exports; ","app/util/Test.js":"(function(parentUrl) {\n'use strict';\n\n(function () {\n\n    var Test = {\n        testEchart: function testEchart() {\n\n            console.log(echarts);\n            // 绘制图表。\n            echarts.init(document.getElementById('testEchart')).setOption({\n                series: {\n                    type: 'pie',\n                    data: [{ name: '蓝色', value: 1212 }, { name: '黑色', value: 2323 }, { name: '红色', value: 1919 }]\n                }\n            });\n        },\n        testEchartByJquery: function testEchartByJquery() {\n\n            console.log(echarts);\n            // 绘制图表。\n            var element = $(\"#testEchart\")[0];\n            echarts.init(element).setOption({\n                series: {\n                    type: 'pie',\n                    data: [{ name: '蓝色', value: 1212 }, { name: '黑色', value: 2323 }, { name: '红色', value: 1919 }]\n                }\n            });\n        }\n    };\n\n    window.Test = Test;\n})();\n})('app/util/Test.js'); exports; ","app/util/TestImport.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * 导出测试对象\n */\nvar TestImport = {\n  info: \"导出测试对象\"\n};\n\nexports = TestImport;\n})('app/util/TestImport.js'); exports; ","app/util/ThreadRunner.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports = {\n    build: function build() {\n        var builder = {\n            funcList: [],\n            _finish: null,\n            _count: null,\n            // public\n            addPool: function addPool(_func) {\n                // console.log('addPool', _func);\n                this.funcList.push(_func);\n            },\n            setCount: function setCount(_count) {\n                this._count = _count;\n            },\n\n            // public\n            execute: function execute(_finish) {\n                this._finish = _finish;\n                if (this.funcList.length > 0) {\n                    this.executeFun();\n                } else {\n                    this._finish();\n                }\n            },\n\n            // private\n            executeFun: function executeFun(i) {\n                var _this = this;\n\n                if (i == null) {\n                    i = 0;\n                }\n                var _func = this.funcList[i];\n                if (_func == null) {\n                    this._finish();\n                    return;\n                }\n                _func(function () {\n                    if (_this._count != null) {\n                        _this._count();\n                    }\n                    _this.executeFun(i + 1);\n                });\n            }\n        };\n        return builder;\n    }\n};\n})('app/util/ThreadRunner.js'); exports; ","app/util/Tree.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * Tree.js [创建树形对象，用于无限级分类]\r\n */\n\n/**\r\n * [convert 数组转换成树形对象]\r\n * @param  data           [线性数组]\r\n * @param  idField        [id名称]\r\n * @param  parentField    [父id名称]\r\n * @param  root           [唯一根节点，如果存在]\r\n * @return                [树形对象]\r\n *\r\n * data 格式\r\n * [{\r\n * \t  \"id\": 1,\r\n * \t  \"name\": \"C\",\r\n * \t  \"size\": \"\",\r\n * \t  \"date\": \"02/19/2010\",\r\n * \t  \"parentId\": null\r\n * },{},{}...]\r\n */\nexports = {\n    checkId: function checkId(list) {\n        var map = {};\n        for (var i in list) {\n            var item = list[i];\n            if (map[item.id] == true) {\n                console.error('存在相同ID:' + item.id);\n            }\n            map[item.id] = true;\n        }\n    },\n    convertByGroup: function convertByGroup(list) {\n        this.checkId(list);\n        var splitGroups = function splitGroups(groupsStr) {\n            var groups = groupsStr.split('>');\n            var result = [];\n            for (var i in groups) {\n                var group = groups[i].trim();\n                result.push(group);\n            }\n            return result;\n        };\n        var nodes = {};\n\n        var demo = {\n            '测试': {\n                id: 'a',\n                parent: null\n            },\n            '移动组': {\n                id: 'b',\n                parent: 'a'\n            },\n            \"mobitest@10.13.1.235\": {\n                parent: 'b',\n                \"id\": 1,\n                \"name\": \"mobitest@10.13.1.235\",\n                \"ip\": \"10.13.1.235\",\n                \"port\": 22,\n                \"username\": \"mobitest\",\n                \"password\": \"7L#x5WZe1L\",\n                \"groups\": \"测试 > 移动组 > 235\"\n            }\n        };\n\n        var id = 0;\n        var buildId = function buildId() {\n            id++;\n            return 'auto' + id;\n        };\n\n        var parentId = function parentId(lastGroup) {\n            if (lastGroup == null) {\n                return null;\n            } else {\n                return nodes[lastGroup].id;\n            }\n        };\n\n        var buildIndex = function buildIndex(lastGroup, id) {\n            if (lastGroup == null) {\n                return id;\n            } else {\n                return nodes[lastGroup].id + '-' + id;\n            }\n        };\n\n        // demo 能转 tree 吗？ 答案：不太能\n\n        // 返回最后一个group的ID\n        var addGroup = function addGroup(groups) {\n            var upGroups = [];\n            var lastGroup = null;\n            for (var i in groups) {\n                var group = groups[i];\n                if (nodes[group] == null) {\n                    var _id = buildId();\n                    nodes[group] = {\n                        id: _id,\n                        index: buildIndex(lastGroup, _id),\n                        title: group,\n                        type: 'group',\n                        parent: parentId(lastGroup)\n                    };\n                }\n                lastGroup = group;\n                upGroups.push(group);\n            }\n            console.log('lastGroupId', nodes[lastGroup]);\n            return nodes[lastGroup];\n        };\n\n        var addItem = function addItem(item, group) {\n            item.index = group.index + '-' + item.id;\n            item.parent = group.id;\n            item.title = item.name;\n            item.type = 'item';\n            var key = item.name;\n            nodes[key] = item;\n        };\n\n        for (var i in list) {\n            var item = list[i];\n            var groupsStr = item.groups;\n            // console.log('item.groups', groupsStr);\n\n            var groups = splitGroups(groupsStr);\n            // console.log('groups', groups);\n\n            var group = addGroup(groups);\n            addItem(item, group);\n        }\n\n        var nodeList = [];\n        for (var key in nodes) {\n            nodeList.push(nodes[key]);\n        }\n        return nodeList;\n    },\n    parse: function parse(tree, idField, parentField) {\n\n        tree = JSON.parse(JSON.stringify(tree));\n\n        idField = idField ? idField : \"id\";\n        parentField = parentField ? parentField : \"parentId\";\n        var deleteChildren = function deleteChildren(item) {\n            var item2 = {};\n            for (var key in item) {\n                if (key != 'children') {\n                    item2[key] = item[key];\n                }\n            }\n            return item2;\n        };\n        var parseTree = function parseTree(tree, list, level, parent) {\n            for (var i in tree) {\n                var item = tree[i];\n                item.level = level;\n                if (parent == null) {\n                    item.index = item[idField];\n                    item[parentField] = '0';\n                } else {\n                    item.index = parent.index + '-' + item[idField];\n                    item[parentField] = parent[idField];\n                }\n\n                if (item.children != null) {\n                    parseTree(item.children, list, level + 1, item);\n                }\n\n                var pureItem = deleteChildren(item);\n                list.push(pureItem);\n            }\n        };\n\n        var list = [];\n        parseTree(tree, list, 0);\n        // console.log('parseTree', list);\n        return list;\n    },\n    convert: function convert(data, idField, parentField, rootId) {\n        var idf = idField ? idField : \"id\";\n        var pf = parentField ? parentField : \"parentId\";\n        // console.log('convertTree', idf, pf);\n        // 所有id到节点的映射\n        var nodeIdMap = {};\n        // 创建一个树\n        var rootNodes = new Array();\n        var otherNodes = new Array();\n\n        // 数据准备\n        for (var i = 0; i < data.length; i++) {\n            var node = data[i];\n            var id = node[idf]; // 获取id\n            nodeIdMap[id] = node;\n        }\n\n        // 根节点判断\n        for (var i = 0; i < data.length; i++) {\n            var node = data[i];\n            var id = node[idf];\n            var parentId = node[pf];\n            // 获取该节点的父节点\n            var parentNode = nodeIdMap[parentId];\n\n            if (id == rootId) {\n                // 根节点\n                rootNodes.push(node);\n                continue;\n            }\n\n            if (parentNode == null) {\n                // 根节点\n                rootNodes.push(node);\n            } else {\n                if (id == parentId) {\n                    rootNodes.push(node);\n                } else {\n                    // 子节点\n                    otherNodes.push(node);\n                }\n            }\n        }\n\n        // console.log(rootNodes);\n        // return rootNodes;\n\n        // 子节点判断\n        for (var i = 0; i < otherNodes.length; i++) {\n            var node = otherNodes[i];\n            var id = node[idf];\n            var parentId = node[pf];\n            // 获取该节点的父节点\n            var parentNode = nodeIdMap[parentId];\n            if (parentNode == null) {\n                console.warn('怎么会没有父节点');\n                rootNodes.push(node);\n                continue;\n            }\n            if (parentNode == node) {\n                console.warn('父节点怎么能是它自己');\n                rootNodes.push(node);\n                continue;\n            }\n            // 父节点添加数组节点\n            if (parentNode.children == undefined) {\n                parentNode.children = new Array();\n            }\n            // 父节点添加子节点\n            parentNode.children.push(node);\n        };\n\n        return rootNodes;\n    }\n};\n\nconsole.log('load tree.js', window.Tree);\n})('app/util/Tree.js'); exports; ","app/util/TreeWrap.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar treeToList = function treeToList(tree, idField, parentField) {\n\n    idField = idField ? idField : \"id\";\n    parentField = parentField ? parentField : \"parentId\";\n\n    var parseTree = function parseTree(tree, list, level, parent) {\n        for (var i in tree) {\n            var item = tree[i];\n            item.level = level;\n            if (parent == null) {\n                item[parentField] = '0';\n            } else {\n                item[parentField] = parent[idField];\n            }\n\n            if (item.children != null) {\n                parseTree(item.children, list, level + 1, item);\n            }\n\n            list.push(item);\n        }\n    };\n\n    var list = [];\n    parseTree(tree, list, 0);\n    // console.log('parseTree', list);\n    return list;\n};\n\nvar TreeWrap = function TreeWrap(tree) {\n    var self = {\n        tree: tree,\n        list: null,\n        loadTree: function loadTree() {\n            this.list = treeToList(this.tree);\n        },\n        findNode: function findNode(nodeId) {\n            for (var i in this.list) {\n                var item = this.list[i];\n                if (item.id == nodeId) {\n                    return item;\n                }\n            }\n            return null;\n        },\n        addSon: function addSon(node, children) {\n            node.children = children;\n            this.loadTree();\n        },\n        newChildren: function newChildren(items) {\n            var arr = [];\n            for (var i in items) {\n                var item = items[i];\n                if (item.children != null) {\n                    item.children = this.newChildren(item.children);\n                }\n                arr.push(item);\n            }\n            return arr;\n        },\n        rootMenu: function rootMenu() {\n            var newTree = [];\n            for (var i in this.tree) {\n                var item = this.tree[i];\n                if (item.children != null) {\n                    item.children = this.newChildren(item.children);\n                }\n                newTree[i] = item;\n            }\n            this.tree = newTree;\n            return newTree;\n        }\n    };\n\n    self.loadTree(tree);\n    return self;\n};\n\nexports = TreeWrap;\n})('app/util/TreeWrap.js'); exports; ","app/util/UI.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * UI 对象\r\n */\n\nvar vue;\nvar loading;\nvar loadingCount = 0; // 同时加载数量\n\nvar UI = {\n    initVue: function initVue(vueApp) {\n        if (vue == null) {\n            vue = vueApp;\n            console.log('初始化 vue 完成');\n        }\n    },\n    getVue: function getVue() {\n        return vue;\n    },\n    message: function message(msg, type) {\n        type = type || 'success';\n        vue.$message({\n            message: msg,\n            type: type,\n            duration: 2500,\n            showClose: true\n        });\n    },\n    success: function success(msg) {\n        if (msg == null || msg == '') {\n            msg = '操作成功';\n        }\n        this.message(msg);\n    },\n    warning: function warning(msg) {\n        this.message(msg, 'warning');\n    },\n    showResult: function showResult(result) {\n        if (result.status == 'success') {\n            this.success(result.msg);\n        }\n    },\n    error: function error(msg) {\n        // this.message(msg, 'error');\n        vue.$confirm(msg, '提示', {\n            showCancelButton: false,\n            confirmButtonText: '关 闭',\n            type: 'warning'\n        }).then(function () {});\n    },\n    debug: function debug(msg, _call) {\n        // this.message(msg, 'error');\n        setTimeout(function () {\n\n            vue.$confirm(msg, '调试', {\n                showCancelButton: false,\n                confirmButtonText: '下一步',\n                type: 'warning'\n            }).then(function () {\n                if (_call != null) {\n                    _call();\n                }\n            });\n        }, 1000);\n    },\n    deleteConfirm: function deleteConfirm(_confirm) {\n        vue.$confirm('此操作将永久删除该项, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n        }).then(function () {\n            _confirm();\n        });\n    },\n    confirmDialog: function confirmDialog(msg, _confirm, _cancel) {\n        vue.$confirm(msg, '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n        }).then(function () {\n            _confirm();\n        }).catch(function () {\n            if (_cancel != null) {\n                _cancel();\n            }\n        });\n    },\n\n    alert: function alert(msg, _call) {\n        vue.$confirm(msg, '提示', {\n            showCancelButton: false,\n            confirmButtonText: '关 闭',\n            type: 'success'\n        }).then(function () {\n            if (_call != null) {\n                _call();\n            }\n        });\n    },\n    warningDialog: function warningDialog(msg) {\n        vue.$confirm(msg, '提示', {\n            showCancelButton: false,\n            confirmButtonText: '关 闭',\n            type: 'warning'\n        }).then(function () {});\n    },\n    closeLoading: function closeLoading() {\n        loadingCount--;\n        if (loadingCount == 0) {\n            setTimeout(function () {\n                loading.close();\n            }, 100);\n        }\n    },\n    openLoading: function openLoading(text) {\n        text = text || \"正在执行...\";\n        if (loadingCount != 0) {\n            $(\".el-loading-text\").html(text);\n        }\n        loadingCount++;\n        loading = vue.$loading({\n            lock: true,\n            text: text,\n            // spinner: 'el-icon-loading',\n            background: 'rgba(0, 0, 0, 0.01)'\n        });\n    },\n    // FIXME 缓存未生效\n    postc: function postc(url, param, _call, isDebug) {\n        this.post(url, param, _call, isDebug, true);\n    },\n    // 加密请求\n    postEncrypt: function postEncrypt(url, param, _call, isDebug) {\n        this.post(url, param, _call, isDebug, true);\n    },\n    // 带转圈的请求\n    post: function post(url, param, _call, isDebug, isEncrypt) {\n        isDebug = false;\n        if (param == null) {\n            param = {};\n        }\n        var text = param.opts_text;\n        if (text == null) {\n            text = '正在加载中...';\n        }\n        var opts = {\n            check: param.opts_check\n        };\n        delete param.opts_text;\n        delete param.opts_check;\n        UI.openLoading(text);\n\n        // var post = $.post;\n        // if(isCache) {\n        //     // console.log(\"带缓存的请求\");\n        //     post = $.postc;\n        // }\n\n        if (isEncrypt == true) {\n            Core.postEncrypt(url, param, function (result) {\n                if (isDebug) {\n                    console.log(\"[ Request Start ]\");\n                    console.log(\"url\", url);\n                    console.log(\"param\", JSON.stringify(param));\n                    console.log(\"result\", result);\n                    console.log(\"[ Request End ]\");\n                }\n\n                _call(result);\n                UI.closeLoading();\n            }, 'json', opts);\n        } else {\n            Core.post(url, param, function (result) {\n                if (isDebug) {\n                    console.log(\"[ Request Start ]\");\n                    console.log(\"url\", url);\n                    console.log(\"param\", JSON.stringify(param));\n                    console.log(\"result\", result);\n                    console.log(\"[ Request End ]\");\n                }\n\n                _call(result);\n                UI.closeLoading();\n            }, 'json', opts);\n        }\n    }\n};\n\nwindow.UI = UI;\n\nexports = UI;\n})('app/util/UI.js'); exports; ","app/util/Util.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * 用法 date.format(\"yy-MM-dd HH:mm:ss\");\r\n * @param {type} fmt\r\n * @returns {unresolved}\r\n */\nDate.prototype.format = function (fmt) {\n    // 默认值\n    if (fmt == null) {\n        fmt = \"yyyy-MM-dd HH:mm:ss\";\n    }\n    var o = {\n        \"M+\": this.getMonth() + 1, // 月份\n        \"d+\": this.getDate(), // 日\n        \"h+\": this.getHours() % 12 == 0 ? 12 : this.getHours() % 12, // 小时\n        \"H+\": this.getHours(), // 小时\n        \"m+\": this.getMinutes(), // 分\n        \"s+\": this.getSeconds(), // 秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), // 季度\n        \"S\": this.getMilliseconds()\n        // 毫秒\n    };\n    var week = {\n        \"0\": \"/u65e5\",\n        \"1\": \"/u4e00\",\n        \"2\": \"/u4e8c\",\n        \"3\": \"/u4e09\",\n        \"4\": \"/u56db\",\n        \"5\": \"/u4e94\",\n        \"6\": \"/u516d\"\n    };\n    if (/(y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    if (/(E+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? \"/u661f/u671f\" : \"/u5468\" : \"\") + week[this.getDay() + \"\"]);\n    }\n    for (var k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n        }\n    }\n    return fmt;\n};\n\n//格式化代码函数,已经用原生方式写好了不需要改动,直接引用就好\nString.prototype.removeLineEnd = function () {\n    return this.replace(/(<.+?\\s+?)(?:\\n\\s*?(.+?=\".*?\"))/g, '$1 $2');\n};\n\nfunction formatXml(text) {\n    //去掉多余的空格\n    text = '\\n' + text.replace(/(<\\w+)(\\s.*?>)/g, function ($0, name, props) {\n        return name + ' ' + props.replace(/\\s+(\\w+=)/g, \" $1\");\n    }).replace(/>\\s*?</g, \">\\n<\");\n\n    //把注释编码\n    text = text.replace(/\\n/g, '\\r').replace(/<!--(.+?)-->/g, function ($0, text) {\n        var ret = '<!--' + escape(text) + '-->';\n        //alert(ret);\n        return ret;\n    }).replace(/\\r/g, '\\n');\n\n    //调整格式\n    var rgx = /\\n(<(([^\\?]).+?)(?:\\s|\\s*?>|\\s*?(\\/)>)(?:.*?(?:(?:(\\/)>)|(?:<(\\/)\\2>)))?)/mg;\n    var nodeStack = [];\n    var output = text.replace(rgx, function ($0, all, name, isBegin, isCloseFull1, isCloseFull2, isFull1, isFull2) {\n        var isClosed = isCloseFull1 == '/' || isCloseFull2 == '/' || isFull1 == '/' || isFull2 == '/';\n        //alert([all,isClosed].join('='));\n        var prefix = '';\n        if (isBegin == '!') {\n            prefix = getPrefix(nodeStack.length);\n        } else {\n            if (isBegin != '/') {\n                prefix = getPrefix(nodeStack.length);\n                if (!isClosed) {\n                    nodeStack.push(name);\n                }\n            } else {\n                nodeStack.pop();\n                prefix = getPrefix(nodeStack.length);\n            }\n        }\n        var ret = '\\n' + prefix + all;\n        return ret;\n    });\n\n    var prefixSpace = -1;\n    var outputText = output.substring(1);\n    //alert(outputText);\n\n    //把注释还原并解码，调格式\n    outputText = outputText.replace(/\\n/g, '\\r').replace(/(\\s*)<!--(.+?)-->/g, function ($0, prefix, text) {\n        //alert(['[',prefix,']=',prefix.length].join(''));\n        if (prefix.charAt(0) == '\\r') prefix = prefix.substring(1);\n        text = unescape(text).replace(/\\r/g, '\\n');\n        var ret = '\\n' + prefix + '<!--' + text.replace(/^\\s*/mg, prefix) + '-->';\n        //alert(ret);\n        return ret;\n    });\n\n    return outputText.replace(/\\s+$/g, '').replace(/\\r/g, '\\r\\n');\n}\n\nfunction getPrefix(prefixIndex) {\n    var span = '    ';\n    var output = [];\n    for (var i = 0; i < prefixIndex; ++i) {\n        output.push(span);\n    }\n\n    return output.join('');\n}\n\nvar formatJson = function formatJson(json, options) {\n    var reg = null,\n        formatted = '',\n        pad = 0,\n        PADDING = '    ';\n    options = options || {};\n    options.newlineAfterColonIfBeforeBraceOrBracket = options.newlineAfterColonIfBeforeBraceOrBracket === true ? true : false;\n    options.spaceAfterColon = options.spaceAfterColon === false ? false : true;\n    if (typeof json !== 'string') {\n        json = JSON.stringify(json);\n    } else {\n        json = JSON.parse(json);\n        json = JSON.stringify(json);\n    }\n    reg = /([\\{\\}])/g;\n    json = json.replace(reg, '\\r\\n$1\\r\\n');\n    reg = /([\\[\\]])/g;\n    json = json.replace(reg, '\\r\\n$1\\r\\n');\n    reg = /(\\,)/g;\n    json = json.replace(reg, '$1\\r\\n');\n    reg = /(\\r\\n\\r\\n)/g;\n    json = json.replace(reg, '\\r\\n');\n    reg = /\\r\\n\\,/g;\n    json = json.replace(reg, ',');\n    if (!options.newlineAfterColonIfBeforeBraceOrBracket) {\n        reg = /\\:\\r\\n\\{/g;\n        json = json.replace(reg, ':{');\n        reg = /\\:\\r\\n\\[/g;\n        json = json.replace(reg, ':[');\n    }\n    if (options.spaceAfterColon) {\n        reg = /\\:/g;\n        json = json.replace(reg, ':');\n    }\n    json.split('\\r\\n').forEach(function (node, index) {\n        var i = 0,\n            indent = 0,\n            padding = '';\n        if (node.match(/\\{$/) || node.match(/\\[$/)) {\n            indent = 1;\n        } else if (node.match(/\\}/) || node.match(/\\]/)) {\n            if (pad !== 0) {\n                pad -= 1;\n            }\n        } else {\n            indent = 0;\n        }\n        for (i = 0; i < pad; i++) {\n            padding += PADDING;\n        }\n        if (node == \"\") {\n            formatted += padding + node + '\\r\\n';\n        }\n        pad += indent;\n    });\n    return formatted;\n};\n\nvar formatJson2 = function formatJson2(txt, compress) {\n    compress = compress || false;\n    var indentChar = '    ';\n    if (/^\\s*$/.test(txt)) {\n        console.log('数据为空,无法格式化! ');\n        return;\n    }\n    try {\n        var data = eval('(' + txt + ')');\n    } catch (e) {\n        console.log('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');\n        return;\n    }\n    var draw = [],\n        last = false,\n        This = this,\n        line = compress ? '' : '\\n',\n        nodeCount = 0,\n        maxDepth = 0;\n\n    var notify = function notify(name, value, isLast, indent, formObj) {\n        nodeCount++; /*节点计数*/\n        for (var i = 0, tab = ''; i < indent; i++) {\n            tab += indentChar;\n        } /* 缩进HTML */\n        tab = compress ? '' : tab; /*压缩模式忽略缩进*/\n        maxDepth = ++indent; /*缩进递增并记录*/\n        if (value && value.constructor == Array) {\n            /*处理数组*/\n            draw.push(tab + (formObj ? '\"' + name + '\":' : '') + '[' + line); /*缩进'[' 然后换行*/\n            for (var i = 0; i < value.length; i++) {\n                notify(i, value[i], i == value.length - 1, indent, false);\n            }draw.push(tab + ']' + (isLast ? line : ',' + line)); /*缩进']'换行,若非尾元素则添加逗号*/\n        } else if (value && (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) == 'object') {\n            /*处理对象*/\n            draw.push(tab + (formObj ? '\"' + name + '\":' : '') + '{' + line); /*缩进'{' 然后换行*/\n            var len = 0,\n                i = 0;\n            for (var key in value) {\n                len++;\n            }for (var key in value) {\n                notify(key, value[key], ++i == len, indent, true);\n            }draw.push(tab + '}' + (isLast ? line : ',' + line)); /*缩进'}'换行,若非尾元素则添加逗号*/\n        } else {\n            if (typeof value == 'string') value = '\"' + value + '\"';\n            draw.push(tab + (formObj ? '\"' + name + '\":' : '') + value + (isLast ? '' : ',') + line);\n        }\n    };\n    var isLast = true,\n        indent = 0;\n    notify('', data, isLast, indent, false);\n    return draw.join('');\n};\n\n(function () {\n    //引用示例部分\n    //(1)创建xml格式或者从后台拿到对应的xml格式\n    var originalXml = '<?xml version=\"1.0\"?> <note> <to>Tove</to> <from>Jani</from> <heading>Reminder</heading> <body>Dont forget me this weekend!</body> </note>';\n    //(2)调用formatXml函数,将xml格式进行格式化\n    var resultXml = formatXml(originalXml);\n    console.log(resultXml);\n});\n\nvar baseTypes = ['[object String]', '[object Number]', '[object Boolean]', '[object Undefined]', '[object Null]', '[object Date]'];\n\nvar Util = {\n    size: function size(obj) {\n        if (this.isArray(obj)) {\n            return obj.length;\n        } else {\n            var i = 0;\n            for (var _ in obj) {\n                i++;\n            }\n            return i;\n        }\n    },\n    getType: function getType(obj) {\n        return Object.prototype.toString.call(obj);\n    },\n    // 判断是否基础类型\n    isBaseType: function isBaseType(obj) {\n        var type = this.getType(obj);\n        for (var i in baseTypes) {\n            var bType = baseTypes[i];\n            if (type == bType) {\n                return true;\n            }\n        }\n        return false;\n    },\n    isString: function isString(obj) {\n        return this.getType(obj) == '[object String]';\n    },\n    isArray: function isArray(obj) {\n        return this.getType(obj) == '[object Array]';\n    },\n    isObject: function isObject(obj) {\n        return this.getType(obj) == '[object Object]';\n    },\n    isFunction: function isFunction(obj) {\n        return this.getType(obj) == '[object Function]';\n    },\n    isNumberStr: function isNumberStr(obj) {\n        return !isNaN(new Number(obj));\n    },\n    /**\r\n     * 判断数组是否相等\r\n     * @param {Array} array1 \r\n     * @param {Array} array2 \r\n     */\n    isArrayEqual: function isArrayEqual(array1, array2) {\n        if (array1.length == array2.length) {\n            for (var i in array1) {\n                if (array1[i] != array2[i]) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    },\n    inArray: function inArray(target, array) {\n        for (var i in array) {\n            var obj = array[i];\n            if (target == obj) {\n                return true;\n            }\n        }\n        return false;\n    },\n    toMap: function toMap(arr) {\n        var map = {};\n        for (var i in arr) {\n            var value = arr[i];\n            map[value] = value;\n        }\n        return map;\n    },\n    // 数组分割 每个数组size个元素（不是分割成 size 个数组）\n    splitArray: function splitArray(arr, size) {\n        var result = [];\n        var len = arr.length;\n        for (var i = 0; i < len; i += size) {\n            result.push(arr.slice(i, i + size));\n        }\n        return result;\n    },\n    // 转map\n    toStrMap: function toStrMap(obj) {\n        var map = {};\n        for (var key in obj) {\n            var value = obj[key];\n            if (!this.isBaseType(value)) {\n                value = JSON.stringify(value, 4);\n            }\n            map[key] = value;\n        }\n        return map;\n    },\n    // 克隆对象\n    clone: function clone(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    },\n    cloneMap: function cloneMap(obj) {\n        var map = {};\n        for (var key in obj) {\n            map[key] = obj[key];\n        }\n        return map;\n    },\n    // 仅克隆基础类型属性\n    cloneBase: function cloneBase(obj) {\n        var newObj = {};\n        for (var key in obj) {\n            var value = obj[key];\n            if (this.isBaseType(value)) {\n                newObj[key] = value;\n            }\n        }\n        return newObj;\n    },\n    // 仅克隆基础类型属性\n    cloneBaseOld: function cloneBaseOld(obj) {\n        var cloneObj = this.clone(obj);\n        var newObj = {};\n        for (var key in cloneObj) {\n            var value = cloneObj[key];\n            if (this.isBaseType(value)) {\n                newObj[key] = value;\n            }\n        }\n        return newObj;\n    },\n    isBlank: function isBlank(str) {\n        if (str == null || str == '' || str == undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n    isTextBlank: function isTextBlank(str) {\n        if (str == null || str == '') {\n            return true;\n        } else {\n            if (str.trim() == '') {\n                return true;\n            }\n            return false;\n        }\n    },\n    isNotBlank: function isNotBlank(str) {\n        return !this.isBlank(str);\n    },\n    clearBlank: function clearBlank(param) {\n        for (var key in param) {\n            if (this.isBlank(param[key])) {\n                delete param[key];\n            }\n        }\n    },\n    deleteIndex: function deleteIndex(arr, index) {\n        arr.splice(index, 1);\n    },\n    arrayDelete: function arrayDelete(arr, val) {\n        var index = arr.indexOf(val);\n        if (index > -1) {\n            arr.splice(index, 1);\n        }\n    },\n    swapArray: function swapArray(arr, i1, i2) {\n        // console.log(arr);\n        var arr2 = [];\n        for (var i in arr) {\n            if (i == i1) {\n                arr2.push(arr[i2]);\n            } else if (i == i2) {\n                arr2.push(arr[i1]);\n            } else {\n                arr2.push(arr[i]);\n            }\n        }\n        // console.log(arr2);\n        return arr2;\n    },\n    /**\r\n     * [parse 根据字符串返回Date 类型]\r\n     * yyyy--MM--dd HH:mm:ss\r\n     * 2012--01--12 14:14:59\r\n     */\n    dateParse: function dateParse(fmt, str) {\n        var map = {\n            year: \"y\",\n            day: \"d\",\n            month: \"M\",\n            hour: \"H\",\n            minute: \"m\",\n            second: \"s\"\n        };\n\n        // 获取值\n        var getMapValure = function getMapValure(type) {\n            var start = fmt.indexOf(type);\n            if (start == -1) {\n                return 0;\n            }\n            var end = fmt.lastIndexOf(type);\n            return str.substring(start, end + 1);\n        };\n\n        var year = getMapValure(map.year);\n        var month = getMapValure(map.month);\n        var day = getMapValure(map.day);\n        var hour = getMapValure(map.hour);\n        var minute = getMapValure(map.minute);\n        var second = getMapValure(map.second);\n\n        return new Date(year, month - 1, day, hour, minute, second);\n    },\n    // 除去两边空白 \n    trim: function trim(str) {\n        if (this.isString(str)) {\n            return str.replace(/(^\\s+)|(\\s+$)/g, \"\");\n        } else {\n            return str;\n        }\n    },\n    trimMapField: function trimMapField(map) {\n        for (var key in map) {\n            var value = map[key];\n            value = this.trim(value);\n            map[key] = value;\n        }\n    },\n    getStrCount: function getStrCount(scrstr, armstr) {\n        //scrstr 源字符串 armstr 特殊字符\n        var count = 0;\n        while (scrstr.indexOf(armstr) != -1) {\n            scrstr = scrstr.replace(armstr, \"\");\n            count++;\n        }\n        return count;\n    },\n\n    formatXml: formatXml,\n    formatJson: formatJson,\n    formatJson2: formatJson2,\n    formatXmlOrJson: function formatXmlOrJson(str) {\n        var jsonSize = this.getStrCount(str, '{');\n        var xmlSize = this.getStrCount(str, '<');\n        if (jsonSize > xmlSize) {\n            return formatJson2(str);\n        } else {\n            return formatXml(str);\n        }\n    },\n\n    changeColor: function changeColor(col, amt) {\n\n        var usePound = false;\n\n        if (col[0] == \"#\") {\n            col = col.slice(1);\n            usePound = true;\n        }\n\n        var num = parseInt(col, 16);\n\n        var r = (num >> 16) + amt;\n\n        if (r > 255) r = 255;else if (r < 0) r = 0;\n\n        var b = (num >> 8 & 0x00FF) + amt;\n\n        if (b > 255) b = 255;else if (b < 0) b = 0;\n\n        var g = (num & 0x0000FF) + amt;\n\n        if (g > 255) g = 255;else if (g < 0) g = 0;\n\n        return (usePound ? \"#\" : \"\") + (g | b << 8 | r << 16).toString(16);\n    },\n    // 分转元\n    centToYuan: function centToYuan(cent) {\n        return cent / 100;\n    },\n    // 分转万元\n    centToWan: function centToWan(cent, size) {},\n    // 左对齐\n    splitStrByLen: function splitStrByLen(str, len) {\n        var strArr = [];\n        var totalLen = str.length;\n        for (var i = 0; i < totalLen / len; i++) {\n            var a = str.slice(len * i, len * (i + 1));\n            strArr.push(a);\n        }\n        return strArr;\n    },\n    // 右对齐\n    splitStrByLenRight: function splitStrByLenRight(str, len) {\n        var totalLen = str.length;\n        var firstLen = totalLen % len;\n        var firstStr;\n        if (firstLen > 0) {\n            firstStr = str.slice(0, firstLen);\n        }\n\n        str = str.slice(firstLen);\n        var strArr = this.splitStrByLen(str, len);\n        if (firstStr != null) {\n            strArr.unshift(firstStr);\n        }\n        return strArr;\n    },\n    // 三位分节法 TODO 支持小数\n    numberThreePart: function numberThreePart(num) {\n        var arr = this.splitStrByLenRight(num, 3);\n        return arr.join(\",\");\n    },\n    isIE: function isIE() {\n        if (!!window.ActiveXObject || \"ActiveXObject\" in window) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n    // 判断是否昨天\n    isAfterDay: function isAfterDay() {},\n    pairToMap: function pairToMap(arr) {\n        var map = {};\n        for (var i in arr) {\n            var pair = arr[i];\n            var key = pair.key;\n            var value = pair.value;\n            if (key != null && key != '') {\n                map[key] = value;\n            }\n        }\n        return map;\n    },\n    urlParse: function urlParse(url) {\n\n        return null;\n    },\n    /**\r\n     * changeURLStatic 修改地址栏 URL参数 不跳转\r\n     * @param name\r\n     * @param value\r\n     */\n    changeURLStatic: function changeURLStatic(name, value) {\n        var url = this.changeURLParam(location.href, name, value); // 修改 URL 参数\n        history.replaceState(null, null, url); // 替换地址栏\n    },\n\n    /**\r\n     * changeURLParam 修改 URL 参数\r\n     * @param url\r\n     * @param name\r\n     * @param value\r\n     * @returns {string}\r\n     */\n    changeURLParam: function changeURLParam(url, name, value) {\n        if (typeof value === 'string') {\n            value = value.toString().replace(/(^\\s*)|(\\s*$)/, \"\"); // 移除首尾空格\n        }\n        var url2 = void 0;\n        if (!value) {\n            // remove\n            var reg = eval('/(([\\?|&])' + name + '=[^&]*)(&)?/i');\n            var res = url.match(reg);\n            if (res) {\n                if (res[2] && res[2] === '?') {\n                    // before has ?\n                    if (res[3]) {\n                        // after has &\n                        url2 = url.replace(reg, '?');\n                    } else {\n                        url2 = url.replace(reg, '');\n                    }\n                } else {\n                    url2 = url.replace(reg, '$3');\n                }\n            }\n        } else {\n            var _reg = eval('/([\\?|&]' + name + '=)[^&]*/i');\n            if (url.match(_reg)) {\n                // edit\n                url2 = url.replace(_reg, '$1' + value);\n            } else {\n                // add\n                var _reg2 = /([?](\\w+=?)?)[^&]*/i;\n                var _res = url.match(_reg2);\n                url2 = url;\n                if (_res) {\n                    if (_res[0] !== '?') {\n                        url2 += '&';\n                    }\n                } else {\n                    url2 += '?';\n                }\n                url2 += name + '=' + value;\n            }\n        }\n        return url2;\n    },\n\n\n    /**\r\n     * 用法 date.format('yy-MM-dd HH:mm:ss');\r\n     * @param {type} fmt\r\n     * @returns {unresolved}\r\n     */\n    dateFormat: function dateFormat(date, fmt) {\n        // 默认值\n        if (fmt == null) {\n            fmt = 'yyyy-MM-dd HH:mm:ss';\n        }\n        var o = {\n            'M+': date.getMonth() + 1, // 月份\n            'd+': date.getDate(), // 日\n            'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12, // 小时\n            'H+': date.getHours(), // 小时\n            'm+': date.getMinutes(), // 分\n            's+': date.getSeconds(), // 秒\n            'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\n            'S': date.getMilliseconds() // 毫秒\n        };\n        var week = {\n            '0': '/u65e5',\n            '1': '/u4e00',\n            '2': '/u4e8c',\n            '3': '/u4e09',\n            '4': '/u56db',\n            '5': '/u4e94',\n            '6': '/u516d'\n        };\n        if (/(y+)/.test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n        }\n        if (/(E+)/.test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? '/u661f/u671f' : '/u5468' : '') + week[date.getDay() + '']);\n        }\n        for (var k in o) {\n            if (new RegExp('(' + k + ')').test(fmt)) {\n                fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\n            }\n        }\n        return fmt;\n    },\n\n    /**\r\n     * 获取指定时间的n天后的时间戳\r\n     * @param {number} n 天数\r\n     * @returns {Number} 返回值为时间毫秒值\r\n     */\n    toNextTimes: function toNextTimes(time, n) {\n        var timestamp = +time + n * 86400000;\n        return new Date(timestamp);\n    },\n    UUID: function UUID() {\n        var time = function time() {\n            var time = new Date().valueOf();\n            return parseInt(time / 1000);\n        };\n        return 'uuid_' + time() + '_' + Math.ceil(Math.random() * 10000);\n    }\n};\n\n// 全局监听器\nwindow.GlobalEvent = {\n    listeners: {},\n    // 事件推送\n    $emit: function $emit(eventId, data) {\n        var _call = this.listeners[eventId];\n        if (_call != null) {\n            _call(data);\n        }\n    },\n\n    // 监听器注册\n    addEventListener: function addEventListener(eventId, _call) {\n        this.listeners[eventId] = _call;\n    }\n};\n\nwindow.GlobalIframe = {\n    iframe: {},\n    $reg: function $reg(iframeId, iframe) {\n        this.iframe[iframeId] = iframe;\n        console.log('reg', iframeId, iframe);\n    },\n    get: function get(iframeId) {\n        return this.iframe[iframeId];\n    }\n};\n\nwindow.Util = Util;\n\nexports = Util;\n})('app/util/Util.js'); exports; ","app/util/watermark.js":"(function(parentUrl) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _Core = require(parentUrl,\"../util/Core.js\");\n\nvar _Core2 = _interopRequireDefault(_Core);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\nvar wm_js = document.scripts;\nvar wm_js_path = wm_js[wm_js.length - 1].src;\nif (wm_js_path && wm_js_path.indexOf(\"partner\") < 0) {\n\twm_js_path = null;\n}\n\nfunction createWMXmlHttpRequest() {\n\tif (window.ActiveXObject) {\n\n\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP\");\n\t} else {\n\t\treturn new XMLHttpRequest();\n\t}\n}\n\nfunction getWMPartnerCode() {\n\tvar src = wm_js_path ? wm_js_path : getWMCurrentScript();\n\tconsole.log(src);\n\tif (src != \"\") {\n\t\tvar s = src.split('/');\n\t\ts = s[s.length - 1].split('?');\n\t\treturn s[0].replace(\"partner\", \"\");\n\t}\n\treturn \"\";\n}\n\nfunction getWMCurrentScript() {\n\tvar doc = document;\n\tvar a = {};\n\tvar expose = +new Date();\n\tvar rExtractUri = /((?:http|https|file):\\/\\/.*?\\/[^:]+)(?::\\d+)?:\\d+/;\n\tvar isLtIE8 = ('' + doc.querySelector).indexOf('[native code]') === -1;\n\t// FF,Chrome\n\tif (doc.currentScript) {\n\t\treturn doc.currentScript.src;\n\t}\n\n\tvar stack;\n\ttry {\n\t\ta.b();\n\t} catch (e) {\n\t\tstack = e.fileName || e.sourceURL || e.stack || e.stacktrace;\n\t}\n\t// console.log(\"stack=\"+stack)\n\t//火狐\n\tif (navigator.userAgent.indexOf(\"Firefox\") > 0) {\n\t\treturn stack;\n\t}\n\t// IE10\n\tif (stack) {\n\t\ttry {\n\t\t\tvar absPath = rExtractUri.exec(stack)[1];\n\t\t\tif (absPath) {\n\t\t\t\treturn absPath;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn stack;\n\t\t}\n\t}\n\n\t// IE5-9\n\tfor (var scripts = doc.scripts, i = scripts.length - 1, script; script = scripts[i--];) {\n\t\tif (script.className !== expose && script.readyState === 'interactive') {\n\t\t\tscript.className = expose;\n\t\t\t// if less than ie 8, must get abs path by getAttribute(src, 4)\n\t\t\treturn isLtIE8 ? script.getAttribute('src', 4) : script.src;\n\t\t}\n\t}\n\treturn stack;\n}\n\nfunction isNullWM(a) {\n\treturn a == \"\" || a == null || a == undefined;\n}\n\ninitWM();\nfunction initWM() {\n\t// var url = urlHostWm + \"/js/initLog\";\n\t// var hrefUrl = window.location.href;\n\t// var browser = navigator.userAgent;\n\t// var terminalType = \"PC\";\n\t// if (/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\n\t// \tterminalType = \"MOBILE\"\n\t// }\n\n\t// var partnerCode = getWMPartnerCode();\n\n\t// var sendData = {\n\t// \t\"partnerCode\": partnerCode,\n\t// \t\"hrefUrl\": hrefUrl,\n\t// \t\"browser\": browser,\n\t// \t\"terminalType\": terminalType\n\t// };\n\t// var xmlHttpRequest = createWMXmlHttpRequest();\n\n\t// xmlHttpRequest.open(\"POST\", url, true);\n\t// xmlHttpRequest.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n\t// xmlHttpRequest.send(JSON.stringify(sendData));\n}\n\nfunction __createWM(userAccount, userName, department, phone) {\n\n\tvar url = Constants.root + \"/authData/waterMarkConfig\";\n\tvar hrefUrl = window.location.href;\n\tvar ua = navigator.userAgent;\n\n\tvar terminalType = \"PC\";\n\tif (/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\n\t\tterminalType = \"MOBILE\";\n\t}\n\n\tvar partnerCode = getWMPartnerCode();\n\n\t_Core2.default.post(url, function (res) {\n\n\t\tvar result = res.data;\n\n\t\tif (result.width == null || result.width == \"\") {\n\t\t\tresult.width = getTextWidth(result.content, result.fontSize + \" \" + result.font) + 5;\n\t\t}\n\n\t\twatermark.init({\n\t\t\twatermark_id: 'wm_div_id_' + userAccount,\n\t\t\twatermark_prefix: 'mask_div_id_' + userAccount,\n\t\t\twatermark_txt: result.content,\n\t\t\twatermark_font: result.font,\n\t\t\twatermark_color: result.colour,\n\t\t\twatermark_angle: result.rotationAngle,\n\t\t\twatermark_width: result.width,\n\t\t\twatermark_height: result.height,\n\t\t\twatermark_alpha: result.alpha,\n\t\t\twatermark_fontsize: result.fontSize\n\t\t});\n\t});\n\n\t// 屏蔽无用代码\n\t// var xmlHttpRequest = createWMXmlHttpRequest();\n\n\t// xmlHttpRequest.open(\"POST\", url, true);\n\t// xmlHttpRequest.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n\n\t// xmlHttpRequest.onreadystatechange = function() {\n\n\t// \tif (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200) {\n\t// \t\tvar result = JSON.parse(xmlHttpRequest.responseText);\n\n\t// \t\tif (result != null && result != \"\") {\n\t// \t\t\tif(result.width==null||result.width==\"\"){\n\t// \t\t\t   result.width = getTextWidth(result.content, result.fontSize +\" \" +result.font)+5;\n\t// \t\t\t}\n\n\t// \t\t\twatermark.init({\n\t// \t\t\t\twatermark_id: 'wm_div_id_' + userAccount,\n\t// \t\t\t\twatermark_prefix: 'mask_div_id_' + userAccount,\n\t// \t\t\t\twatermark_txt: result.content,\n\t// \t\t\t\twatermark_font: result.font,\n\t// \t\t\t\twatermark_color: result.colour,\n\t// \t\t\t\twatermark_angle: result.rotationAngle,\n\t// \t\t\t\twatermark_width: result.width,\n\t// \t\t\t\twatermark_height: result.height,\n\t// \t\t\t\twatermark_alpha: result.alpha,\n\t// \t\t\t\twatermark_fontsize: result.fontSize\n\t// \t\t\t});\n\t// \t\t}\n\t// \t}\n\n\t// }\n\n\t// var sendData = {\n\t// \t\"partnerCode\": partnerCode,\n\t// \t\"userAccount\": userAccount,\n\t// \t\"userName\": userName,\n\t// \t\"browser\": ua,\n\t// \t\"terminalType\": terminalType,\n\t// \t\"hrefUrl\": hrefUrl,\n\t// \t\"dataType\": \"login\",\n\t// \t\"department\": department,\n\t// \t\"phone\": phone\n\t// };\n\n\t// if (isNullWM(userAccount)) {\n\t// \tlet oldUserAccount = JSON.parse(myStorage.getItem(\"_WM_userAccount\"));\n\t// \tif(oldUserAccount){\n\t// \t   sendData = oldUserAccount;\n\t// \t}\n\t// \tsendData[\"browser\"] = ua;\n\t//     sendData[\"terminalType\"] = terminalType;\n\t//     sendData[\"hrefUrl\"] = hrefUrl;\n\t//     sendData[\"dataType\"] = \"login\";\n\t// }\n\n\t// xmlHttpRequest.send(JSON.stringify(sendData));\n\t// myStorage.setItem(\"_WM_userAccount\", JSON.stringify(sendData));\n}\n\nfunction getTextWidth(text, font) {\n\tvar canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n\tvar context = canvas.getContext(\"2d\");\n\tcontext.font = font;\n\tvar metrics = context.measureText(text);\n\treturn metrics.width;\n}\n\nwindow.myStorage = new function () {\n\n\tvar storage;\n\n\tif (window.localStorage) {\n\t\tstorage = localStorage;\n\t} else {\n\t\tstorage = window.customCookieStorage;\n\t}\n\n\tthis.setItem = function (key, value) {\n\t\tstorage.setItem(key, value);\n\t};\n\n\tthis.getItem = function (name) {\n\t\treturn storage.getItem(name);\n\t};\n\n\tthis.removeItem = function (key) {\n\t\tstorage.removeItem(key);\n\t};\n\n\tthis.clear = function () {\n\t\tstorage.clear();\n\t};\n}();\n\nwindow.customCookieStorage = new function () {\n\tvar maxage = 60 * 60 * 24 * 1000;\n\tvar path = '/';\n\n\tvar cookie = getCookie();\n\n\tfunction getCookie() {\n\t\tvar cookie = {};\n\t\tvar all = document.cookie;\n\t\tif (all === \"\") return cookie;\n\t\tvar list = all.split(\"; \");\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tvar cookies = list[i];\n\t\t\tvar p = cookies.indexOf(\"=\");\n\t\t\tvar name = cookies.substring(0, p);\n\t\t\tvar value = cookies.substring(p + 1);\n\t\t\ttry {\n\t\t\t\tvalue = decodeURIComponent(value);\n\t\t\t\tcookie[name] = value;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('decode url error:' + value);\n\t\t\t}\n\t\t}\n\t\treturn cookie;\n\t}\n\n\tvar keys = [];\n\tfor (var key in cookie) {\n\t\tkeys.push(key);\n\t}this.length = keys.length;\n\n\tthis.key = function (n) {\n\t\tif (n < 0 || n >= keys.length) return null;\n\t\treturn keys[n];\n\t};\n\n\tthis.setItem = function (key, value) {\n\t\tif (!(key in cookie)) {\n\t\t\tkeys.push(key);\n\t\t\tthis.length++;\n\t\t}\n\n\t\tcookie[key] = value;\n\t\tvar cookies = key + \"=\" + encodeURIComponent(value);\n\t\tif (maxage) cookies += \"; max-age=\" + maxage;\n\t\tif (path) cookies += \"; path=\" + path;\n\n\t\tdocument.cookie = cookies;\n\t};\n\n\tthis.getItem = function (name) {\n\t\treturn cookie[name] || null;\n\t};\n\n\tthis.removeItem = function (key) {\n\t\tif (!(key in cookie)) return;\n\n\t\tdelete cookie[key];\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tif (keys[i] === key) {\n\t\t\t\tkeys.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.length--;\n\n\t\tdocument.cookie = key + \"=; max-age=0\";\n\t};\n\n\tthis.clear = function () {\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tdocument.cookie = keys[i] + \"; max-age=0\";\n\t\t}cookie = {};\n\t\tkeys = [];\n\t\tthis.length = 0;\n\t};\n}();\n\n/*Just return a value to define the module export.*/\nvar watermark = {};\n\nvar defaultSettings = {\n\twatermark_id: 'wm_div_id', //水印总体的id\n\twatermark_prefix: 'mask_div_id', //小水印的id前缀\n\twatermark_txt: \"测试水印\", //水印的内容\n\twatermark_x: 20, //水印起始位置x轴坐标\n\twatermark_y: 20, //水印起始位置Y轴坐标\n\twatermark_rows: 0, //水印行数\n\twatermark_cols: 0, //水印列数\n\twatermark_x_space: 50, //水印x轴间隔\n\twatermark_y_space: 50, //水印y轴间隔\n\twatermark_font: '微软雅黑', //水印字体\n\twatermark_color: 'black', //水印字体颜色\n\twatermark_fontsize: '18px', //水印字体大小\n\twatermark_alpha: 0.15, //水印透明度，要求设置在大于等于0.005\n\twatermark_width: 100, //水印宽度\n\twatermark_height: 100, //水印长度\n\twatermark_angle: 15, //水印倾斜度数\n\twatermark_parent_width: 0, //水印的总体宽度（默认值：body的scrollWidth和clientWidth的较大值）\n\twatermark_parent_height: 0, //水印的总体高度（默认值：body的scrollHeight和clientHeight的较大值）\n\twatermark_parent_node: null, //水印插件挂载的父元素element,不输入则默认挂在body上\n\tmonitor: true //monitor 是否监控， true: 不可删除水印; false: 可删水印。\n};\n\nvar settingsToDefaultSetting = function settingsToDefaultSetting(settings) {\n\tdefaultSettings.watermark_id = settings.watermark_id || defaultSettings.watermark_id;\n\tdefaultSettings.watermark_prefix = settings.watermark_prefix || defaultSettings.watermark_prefix;\n\tdefaultSettings.watermark_txt = settings.watermark_txt || defaultSettings.watermark_txt;\n\tdefaultSettings.watermark_x = settings.watermark_x || defaultSettings.watermark_x;\n\tdefaultSettings.watermark_y = settings.watermark_y || defaultSettings.watermark_y;\n\tdefaultSettings.watermark_rows = settings.watermark_rows || defaultSettings.watermark_rows;\n\tdefaultSettings.watermark_cols = settings.watermark_cols || defaultSettings.watermark_cols;\n\tdefaultSettings.watermark_x_space = settings.watermark_x_space || defaultSettings.watermark_x_space;\n\tdefaultSettings.watermark_y_space = settings.watermark_y_space || defaultSettings.watermark_y_space;\n\tdefaultSettings.watermark_font = settings.watermark_font || defaultSettings.watermark_font;\n\tdefaultSettings.watermark_color = settings.watermark_color || defaultSettings.watermark_color;\n\tdefaultSettings.watermark_fontsize = settings.watermark_fontsize || defaultSettings.watermark_fontsize;\n\tdefaultSettings.watermark_alpha = parseFloat(settings.watermark_alpha || defaultSettings.watermark_alpha);\n\tdefaultSettings.watermark_width = parseInt(settings.watermark_width || defaultSettings.watermark_width);\n\tdefaultSettings.watermark_height = parseInt(settings.watermark_height || defaultSettings.watermark_height);\n\tdefaultSettings.watermark_angle = settings.watermark_angle || defaultSettings.watermark_angle;\n\tdefaultSettings.watermark_parent_width = settings.watermark_parent_width || defaultSettings.watermark_parent_width;\n\tdefaultSettings.watermark_parent_height = settings.watermark_parent_height || defaultSettings.watermark_parent_height;\n\tdefaultSettings.watermark_parent_node = settings.watermark_parent_node || defaultSettings.watermark_parent_node;\n\tdefaultSettings.monitor = settings.monitor || defaultSettings.monitor;\n};\n\n/*加载水印*/\nvar loadMark;\nloadMark = function loadMark(settings) {\n\t/*采用配置项替换默认值，作用类似jquery.extend*/\n\tif (arguments.length === 1 && _typeof(arguments[0]) === \"object\") {\n\t\t// var src = arguments[0] || {};\n\t\tvar src = {};\n\t\tfor (key in src) {\n\t\t\tif (src[key] && defaultSettings[key] && src[key] === defaultSettings[key]) continue;\n\t\t\t/*veronic: resolution of watermark_angle=0 not in force*/\n\t\t\telse if (src[key] || src[key] === 0) defaultSettings[key] = src[key];\n\t\t}\n\t}\n\n\tsettingsToDefaultSetting(settings);\n\t// console.log(defaultSettings)\n\t/*如果元素存在则移除*/\n\tvar watermark_element = document.getElementById(defaultSettings.watermark_id);\n\twatermark_element && watermark_element.parentNode && watermark_element.parentNode.removeChild(watermark_element);\n\n\t/*如果设置水印挂载的父元素的id*/\n\tvar watermark_parent_element = document.getElementById(defaultSettings.watermark_parent_node);\n\tvar watermark_hook_element = watermark_parent_element ? watermark_parent_element : document.body;\n\n\t/*获取页面宽度*/\n\tvar page_width = Math.max(watermark_hook_element.scrollWidth, watermark_hook_element.clientWidth);\n\t/*获取页面最大长度*/\n\t//var page_height = Math.max(watermark_hook_element.scrollHeight, watermark_hook_element.clientHeight);\n\tvar page_height = window.innerHeight;\n\n\tvar setting = arguments[0] || {};\n\tvar parentEle = watermark_hook_element;\n\n\tvar page_offsetTop = 0;\n\tvar page_offsetLeft = 0;\n\tif (setting.watermark_parent_width || setting.watermark_parent_height) {\n\t\t/*指定父元素同时指定了宽或高*/\n\t\tif (parentEle) {\n\t\t\tpage_offsetTop = parentEle.offsetTop || 0;\n\t\t\tpage_offsetLeft = parentEle.offsetLeft || 0;\n\t\t\tdefaultSettings.watermark_x = defaultSettings.watermark_x + page_offsetLeft;\n\t\t\tdefaultSettings.watermark_y = defaultSettings.watermark_y + page_offsetTop;\n\t\t}\n\t} else {\n\t\tif (parentEle) {\n\t\t\tpage_offsetTop = parentEle.offsetTop || 0;\n\t\t\tpage_offsetLeft = parentEle.offsetLeft || 0;\n\t\t}\n\t}\n\n\t/*创建水印外壳div*/\n\tvar otdiv = document.getElementById(defaultSettings.watermark_id);\n\tvar shadowRoot = null;\n\n\tif (!otdiv) {\n\t\totdiv = document.createElement('div');\n\t\t/*创建shadow dom*/\n\t\totdiv.id = defaultSettings.watermark_id;\n\t\totdiv.setAttribute('style', 'pointer-events: none !important; display: block !important;position: fixed;top: 0;left: 0;width: 100%;height: 100%;overflow: hidden;z-index:9999;');\n\t\t/*判断浏览器是否支持attachShadow方法*/\n\t\tif (typeof otdiv.attachShadow === 'function') {\n\t\t\t/* createShadowRoot Deprecated. Not for use in new websites. Use attachShadow*/\n\t\t\tshadowRoot = otdiv.attachShadow({ mode: 'open' });\n\t\t} else {\n\t\t\tshadowRoot = otdiv;\n\t\t}\n\t\t/*将shadow dom随机插入body内的任意位置*/\n\t\tvar nodeList = watermark_hook_element.children;\n\t\tvar index = Math.floor(Math.random() * (nodeList.length - 1));\n\t\tif (nodeList[index]) {\n\t\t\twatermark_hook_element.insertBefore(otdiv, nodeList[index]);\n\t\t} else {\n\t\t\twatermark_hook_element.appendChild(otdiv);\n\t\t}\n\t} else if (otdiv.shadowRoot) {\n\t\tshadowRoot = otdiv.shadowRoot;\n\t}\n\t/*三种情况下会重新计算水印列数和x方向水印间隔：1、水印列数设置为0，2、水印宽度大于页面宽度，3、水印宽度小于于页面宽度*/\n\tdefaultSettings.watermark_cols = parseInt((page_width - defaultSettings.watermark_x) / (defaultSettings.watermark_width + defaultSettings.watermark_x_space) || 0);\n\tvar temp_watermark_x_space = parseInt((page_width - defaultSettings.watermark_x - defaultSettings.watermark_width * defaultSettings.watermark_cols) / defaultSettings.watermark_cols);\n\tdefaultSettings.watermark_x_space = temp_watermark_x_space ? defaultSettings.watermark_x_space : temp_watermark_x_space;\n\tvar allWatermarkWidth;\n\n\t/*三种情况下会重新计算水印行数和y方向水印间隔：1、水印行数设置为0，2、水印长度大于页面长度，3、水印长度小于于页面长度*/\n\t// console.log(page_height, 'a', defaultSettings.watermark_y, 'b', defaultSettings.watermark_height, 'c', defaultSettings.watermark_y_space, 'd');\n\tdefaultSettings.watermark_rows = parseInt((page_height - defaultSettings.watermark_y) / (defaultSettings.watermark_height + defaultSettings.watermark_y_space) || 0);\n\tvar temp_watermark_y_space = parseInt((page_height - defaultSettings.watermark_y - defaultSettings.watermark_height * defaultSettings.watermark_rows) / defaultSettings.watermark_rows);\n\tdefaultSettings.watermark_y_space = temp_watermark_y_space ? defaultSettings.watermark_y_space : temp_watermark_y_space;\n\tvar allWatermarkHeight;\n\n\tif (watermark_parent_element) {\n\t\tallWatermarkWidth = defaultSettings.watermark_x + defaultSettings.watermark_width * defaultSettings.watermark_cols + defaultSettings.watermark_x_space * (defaultSettings.watermark_cols - 1);\n\t\tallWatermarkHeight = defaultSettings.watermark_y + defaultSettings.watermark_height * defaultSettings.watermark_rows + defaultSettings.watermark_y_space * (defaultSettings.watermark_rows - 1);\n\t} else {\n\t\tallWatermarkWidth = page_offsetLeft + defaultSettings.watermark_x + defaultSettings.watermark_width * defaultSettings.watermark_cols + defaultSettings.watermark_x_space * (defaultSettings.watermark_cols - 1);\n\t\tallWatermarkHeight = page_offsetTop + defaultSettings.watermark_y + defaultSettings.watermark_height * defaultSettings.watermark_rows + defaultSettings.watermark_y_space * (defaultSettings.watermark_rows - 1);\n\t}\n\n\tvar x;\n\tvar y;\n\t//console.log(defaultSettings.watermark_cols, '12121221212')\n\t//console.log(defaultSettings.watermark_rows, '67676767767')\n\tfor (var i = 0; i < defaultSettings.watermark_rows; i++) {\n\t\tif (watermark_parent_element) {\n\t\t\ty = page_offsetTop + defaultSettings.watermark_y + (page_height - allWatermarkHeight) / 2 + (defaultSettings.watermark_y_space + defaultSettings.watermark_height + 200) * i;\n\t\t} else {\n\t\t\ty = defaultSettings.watermark_y + (page_height - allWatermarkHeight) / 2 + (defaultSettings.watermark_y_space + defaultSettings.watermark_height + 200) * i;\n\t\t}\n\t\tfor (var j = 0; j < defaultSettings.watermark_cols; j++) {\n\t\t\tif (watermark_parent_element) {\n\t\t\t\tx = page_offsetLeft + defaultSettings.watermark_x + (page_width - allWatermarkWidth) / 2 + (defaultSettings.watermark_width + defaultSettings.watermark_x_space + 200) * j;\n\t\t\t} else {\n\t\t\t\tx = defaultSettings.watermark_x + (page_width - allWatermarkWidth) / 2 + (defaultSettings.watermark_width + defaultSettings.watermark_x_space + 200) * j;\n\t\t\t}\n\n\t\t\tvar mask_div = document.createElement('div');\n\t\t\tvar oText = document.createTextNode(defaultSettings.watermark_txt);\n\t\t\tmask_div.appendChild(oText);\n\t\t\t/*设置水印相关属性start*/\n\t\t\tmask_div.id = defaultSettings.watermark_prefix + i + j;\n\t\t\t/*设置水印div倾斜显示*/\n\t\t\tmask_div.style.webkitTransform = \"rotate(\" + defaultSettings.watermark_angle + \"deg)\";\n\t\t\tmask_div.style.MozTransform = \"rotate(\" + defaultSettings.watermark_angle + \"deg)\";\n\t\t\tmask_div.style.msTransform = \"rotate(\" + defaultSettings.watermark_angle + \"deg)\";\n\t\t\tmask_div.style.OTransform = \"rotate(\" + defaultSettings.watermark_angle + \"deg)\";\n\t\t\tmask_div.style.transform = \"rotate(\" + defaultSettings.watermark_angle + \"deg)\";\n\t\t\tmask_div.style.visibility = \"\";\n\t\t\tmask_div.style.position = \"absolute\";\n\t\t\t/*选不中*/\n\t\t\tmask_div.style.left = x + 'px';\n\t\t\tmask_div.style.top = y + 'px';\n\t\t\tmask_div.style.overflow = \"hidden\";\n\t\t\tmask_div.style.zIndex = \"9999999\";\n\t\t\tmask_div.style.opacity = defaultSettings.watermark_alpha;\n\t\t\tmask_div.style.fontSize = defaultSettings.watermark_fontsize;\n\t\t\tmask_div.style.fontFamily = defaultSettings.watermark_font;\n\t\t\tmask_div.style.color = defaultSettings.watermark_color;\n\t\t\tmask_div.style.textAlign = \"center\";\n\t\t\tmask_div.style.width = defaultSettings.watermark_width + 'px';\n\t\t\tmask_div.style.height = defaultSettings.watermark_height + 'px';\n\t\t\tmask_div.style.display = \"block\";\n\t\t\tmask_div.style['-ms-user-select'] = \"none\";\n\t\t\t/*设置水印相关属性end*/\n\t\t\tshadowRoot.appendChild(mask_div);\n\t\t}\n\t}\n\n\twatermarkDom.observe(watermark_hook_element, option);\n\twatermarkDom.observe(document.getElementById(defaultSettings.watermark_id).shadowRoot, option);\n};\nvar globalSetting;\n/*初始化水印，添加load和resize事件*/\nwatermark.init = function (settings) {\n\tconsole.log(settings, 'settings');\n\tglobalSetting = settings;\n\tloadMark(settings);\n\twindow.addEventListener('onload', function () {\n\t\tloadMark(settings);\n\t});\n\twindow.addEventListener('resize', function () {\n\t\tloadMark(settings);\n\t});\n};\n\n/*手动加载水印*/\nwatermark.load = function (settings) {\n\t//console.log(settings, 'settings')\n\tglobalSetting = settings;\n\tloadMark(settings);\n};\n\n//监听dom是否被移除或者改变属性的回调函数\nvar callback = function callback(records) {\n\tif (globalSetting && records.length === 1 || records.length === 1 && records[0].removedNodes.length >= 1) {\n\t\tloadMark(globalSetting);\n\t}\n};\nvar MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\nvar watermarkDom = new MutationObserver(callback);\nvar option = {\n\t'childList': true,\n\t'attributes': true,\n\t'subtree': true\n};\n\nexports = {\n\tcreateWM: __createWM\n};\n})('app/util/watermark.js'); exports; ","app/util/webuploader.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Constants = require(parentUrl,'../data/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _SessionUtil = require(parentUrl,'../util/SessionUtil');\n\nvar _SessionUtil2 = _interopRequireDefault(_SessionUtil);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\nvar getUploader = function getUploader() {\n\n    var BASE_URL = '../webuploader';\n\n    var $ = jQuery,\n        // just in case. Make sure it's not an other libaray.\n\n    $wrap = $('#uploader'),\n        filelist = [],\n\n\n    // 图片容器\n    $queue = $('<ul class=\"filelist\"></ul>').appendTo($wrap.find('.queueList')),\n\n\n    // 状态栏，包括进度和控制按钮\n    $statusBar = $wrap.find('.statusBar'),\n\n\n    // 文件总体选择信息。\n    $info = $statusBar.find('.info'),\n\n\n    // 上传按钮\n    $upload = $wrap.find('.uploadBtn'),\n\n\n    // 没选择文件之前的内容。\n    $placeHolder = $wrap.find('.placeholder'),\n\n\n    // 总体进度条\n    $progress = $statusBar.find('.progress').hide(),\n\n\n    // 添加的文件数量\n    fileCount = 0,\n\n\n    // 添加的文件总大小\n    fileSize = 0,\n\n\n    // 优化retina, 在retina下这个值是2\n    ratio = window.devicePixelRatio || 1,\n\n\n    // 缩略图大小\n    thumbnailWidth = 110 * ratio,\n        thumbnailHeight = 110 * ratio,\n\n\n    // 可能有pedding, ready, uploading, confirm, done.\n    state = 'pedding',\n\n\n    // 所有文件的进度信息，key为file id\n    percentages = {},\n        supportTransition = function () {\n        var s = document.createElement('p').style,\n            r = 'transition' in s || 'WebkitTransition' in s || 'MozTransition' in s || 'msTransition' in s || 'OTransition' in s;\n        s = null;\n        return r;\n    }(),\n\n\n    // WebUploader实例\n    uploader;\n\n    if (window.WebUploader == null) {\n        alert('引入WebUploader失败');\n    }\n\n    if (!WebUploader.Uploader.support()) {\n        alert('Web Uploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器');\n        throw new Error('WebUploader does not support the browser you are using.');\n    }\n\n    var limitSize = Number(Dict.dict('upload_image_limit'));\n    // console.log('limitSize', limitSize);\n\n    // 实例化\n    uploader = WebUploader.create({\n        pick: {\n            id: '#filePicker',\n            label: '点击选择图片'\n        },\n        dnd: '#uploader .queueList',\n        paste: document.body,\n\n        accept: {\n            title: 'Images',\n            extensions: 'gif,jpg,jpeg,bmp,png',\n            mimeTypes: 'image/*'\n        },\n\n        // swf文件路径\n        swf: BASE_URL + '/Uploader.swf',\n\n        disableGlobalDnd: true,\n\n        chunked: true,\n        // server: 'https://jsonplaceholder.typicode.com/posts/',\n        server: _Constants2.default.root + '/workOrderPic/uploadPic',\n        fileNumLimit: 300, //上传文件总数，不大于300\n        fileSizeLimit: 30 * limitSize, // 5M * 30\n        fileSingleSizeLimit: limitSize // 5 M 单个文件大小 目前5M\n    });\n\n    // 添加“添加文件”的按钮，\n    uploader.addButton({\n        id: '#filePicker2',\n        label: '继续添加'\n    });\n\n    // 当有文件添加进来时执行，负责view的创建\n    function addFile(file) {\n        // 声明变量 start\n        var $li = $('<li id=\"' + file.id + '\">' + '<p class=\"title\">' + file.name + '</p>' + '<p class=\"imgWrap\"></p>' + '<p class=\"progress\"><span></span></p>' + '</li>'),\n            $btns = $('<div class=\"file-panel\">' + '<span class=\"cancel\">删除</span>' + '<span class=\"rotateRight\">向右旋转</span>' + '<span class=\"rotateLeft\">向左旋转</span></div>').appendTo($li),\n            $prgress = $li.find('p.progress span'),\n            $wrap = $li.find('p.imgWrap'),\n            $info = $('<p class=\"error\"></p>'),\n            showError = function showError(code) {\n            switch (code) {\n                case 'exceed_size':\n                    text = '文件大小超出';\n                    break;\n\n                case 'interrupt':\n                    text = '上传暂停';\n                    break;\n\n                default:\n                    text = '上传失败，请重试';\n                    break;\n            }\n\n            $info.text(text).appendTo($li);\n        };\n\n        // 声明变量 end\n\n        if (file.getStatus() === 'invalid') {\n            showError(file.statusText);\n        } else {\n            // @todo lazyload\n            $wrap.text('预览中');\n            uploader.makeThumb(file, function (error, src) {\n                if (error) {\n                    $wrap.text('不能预览');\n                    return;\n                }\n\n                var img = $('<img src=\"' + src + '\">');\n                $wrap.empty().append(img);\n            }, thumbnailWidth, thumbnailHeight);\n\n            percentages[file.id] = [file.size, 0];\n            file.rotation = 0;\n            filelist.push(file);\n        }\n\n        file.on('statuschange', function (cur, prev) {\n            if (prev === 'progress') {\n                $prgress.hide().width(0);\n            } else if (prev === 'queued') {\n                $li.off('mouseenter mouseleave');\n                $btns.remove();\n            }\n\n            // 成功\n            if (cur === 'error' || cur === 'invalid') {\n                console.log(file.statusText);\n                showError(file.statusText);\n                percentages[file.id][1] = 1;\n            } else if (cur === 'interrupt') {\n                showError('interrupt');\n            } else if (cur === 'queued') {\n                percentages[file.id][1] = 0;\n            } else if (cur === 'progress') {\n                $info.remove();\n                $prgress.css('display', 'block');\n            } else if (cur === 'complete') {\n                $li.append('<span class=\"success\"></span>');\n            }\n\n            $li.removeClass('state-' + prev).addClass('state-' + cur);\n        });\n\n        $li.on('mouseenter', function () {\n            $btns.stop().animate({ height: 30 });\n        });\n\n        $li.on('mouseleave', function () {\n            $btns.stop().animate({ height: 0 });\n        });\n\n        $btns.on('click', 'span', function () {\n            var index = $(this).index(),\n                deg;\n\n            switch (index) {\n                case 0:\n                    uploader.removeFile(file);\n                    return;\n\n                case 1:\n                    file.rotation += 90;\n                    break;\n\n                case 2:\n                    file.rotation -= 90;\n                    break;\n            }\n\n            if (supportTransition) {\n                deg = 'rotate(' + file.rotation + 'deg)';\n                $wrap.css({\n                    '-webkit-transform': deg,\n                    '-mos-transform': deg,\n                    '-o-transform': deg,\n                    'transform': deg\n                });\n            } else {\n                $wrap.css('filter', 'progid:DXImageTransform.Microsoft.BasicImage(rotation=' + ~~(file.rotation / 90 % 4 + 4) % 4 + ')');\n                // use jquery animate to rotation\n                // $({\n                //     rotation: rotation\n                // }).animate({\n                //     rotation: file.rotation\n                // }, {\n                //     easing: 'linear',\n                //     step: function( now ) {\n                //         now = now * Math.PI / 180;\n\n                //         var cos = Math.cos( now ),\n                //             sin = Math.sin( now );\n\n                //         $wrap.css( 'filter', \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + cos + \",M12=\" + (-sin) + \",M21=\" + sin + \",M22=\" + cos + \",SizingMethod='auto expand')\");\n                //     }\n                // });\n            }\n        });\n\n        $li.appendTo($queue);\n    }\n\n    // 负责view的销毁\n    function removeFile(file) {\n        var $li = $('#' + file.id);\n\n        delete percentages[file.id];\n        updateTotalProgress();\n        $li.off().find('.file-panel').off().end().remove();\n    }\n\n    function updateTotalProgress() {\n        var loaded = 0,\n            total = 0,\n            spans = $progress.children(),\n            percent;\n\n        $.each(percentages, function (k, v) {\n            total += v[0];\n            loaded += v[0] * v[1];\n        });\n\n        percent = total ? loaded / total : 0;\n\n        spans.eq(0).text(Math.round(percent * 100) + '%');\n        spans.eq(1).css('width', Math.round(percent * 100) + '%');\n        updateStatus();\n    }\n\n    function updateStatus() {\n        var text = '',\n            stats;\n\n        if (state === 'ready') {\n            text = '选中' + fileCount + '张图片，共' + WebUploader.formatSize(fileSize) + '。';\n        } else if (state === 'confirm') {\n            stats = uploader.getStats();\n            if (stats.uploadFailNum) {\n                text = '已成功上传' + stats.successNum + '张照片至XX相册，' + stats.uploadFailNum + '张照片上传失败，<a class=\"retry\" href=\"#\">重新上传</a>失败图片或<a class=\"ignore\" href=\"#\">忽略</a>';\n                //刷新显示小图片\n                reloadPicList();\n            }\n        } else {\n            stats = uploader.getStats();\n            text = '共' + fileCount + '张（' + WebUploader.formatSize(fileSize) + '），已上传' + stats.successNum + '张';\n\n            if (stats.uploadFailNum) {\n                text += '，失败' + stats.uploadFailNum + '张';\n            }\n        }\n\n        $info.html(text);\n    }\n\n    function setState(val) {\n        var file, stats;\n\n        if (val === state) {\n            return;\n        }\n\n        $upload.removeClass('state-' + state);\n        $upload.addClass('state-' + val);\n        state = val;\n\n        switch (state) {\n            case 'pedding':\n                $placeHolder.removeClass('element-invisible');\n                $queue.parent().removeClass('filled');\n                $queue.hide();\n                $statusBar.addClass('element-invisible');\n                uploader.refresh();\n                break;\n\n            case 'ready':\n                $placeHolder.addClass('element-invisible');\n                $('#filePicker2').removeClass('element-invisible');\n                $queue.parent().addClass('filled');\n                $queue.show();\n                $statusBar.removeClass('element-invisible');\n                uploader.refresh();\n                break;\n\n            case 'uploading':\n                $('#filePicker2').addClass('element-invisible');\n                $progress.show();\n                $upload.text('暂停上传');\n                break;\n\n            case 'paused':\n                $progress.show();\n                $upload.text('继续上传');\n                break;\n\n            case 'confirm':\n                $progress.hide();\n                $upload.text('开始上传').addClass('disabled');\n\n                stats = uploader.getStats();\n                if (stats.successNum && !stats.uploadFailNum) {\n                    setState('finish');\n                    return;\n                }\n                break;\n            case 'finish':\n                stats = uploader.getStats();\n                if (stats.successNum) {\n                    alert('上传成功');\n                } else {\n                    // 没有成功的图片，重设\n                    state = 'done';\n                    location.reload();\n                }\n                break;\n        }\n\n        updateStatus();\n    }\n\n    uploader.onUploadProgress = function (file, percentage) {\n        var $li = $('#' + file.id),\n            $percent = $li.find('.progress span');\n\n        $percent.css('width', percentage * 100 + '%');\n        percentages[file.id][1] = percentage;\n        updateTotalProgress();\n    };\n\n    uploader.on('uploadSuccess', function (file, response) {\n        console.log('上传成功', response);\n        // if(response.status == 'success'){\n        //     alert( '上传成功' )\n        // }\n    });\n\n    uploader.onFileQueued = function (file) {\n        fileCount++;\n        fileSize += file.size;\n\n        if (fileCount === 1) {\n            $placeHolder.addClass('element-invisible');\n            $statusBar.show();\n        }\n\n        addFile(file);\n        setState('ready');\n        updateTotalProgress();\n    };\n\n    uploader.onFileDequeued = function (file) {\n        fileCount--;\n        fileSize -= file.size;\n\n        if (!fileCount) {\n            setState('pedding');\n        }\n\n        removeFile(file);\n        updateTotalProgress();\n    };\n\n    uploader.on('all', function (type) {\n        var stats;\n        switch (type) {\n            case 'uploadFinished':\n                setState('confirm');\n                break;\n\n            case 'startUpload':\n                setState('uploading');\n                break;\n\n            case 'stopUpload':\n                setState('paused');\n                break;\n\n        }\n    });\n\n    uploader.onError = function (code) {\n        if ('F_EXCEED_SIZE' == code) {\n            var limitSize = Dict.dict('upload_image_limit_show');\n            alert('超出单个文件大小上限 ' + limitSize);\n        } else if ('Q_EXCEED_SIZE_LIMIT' == code) {\n            alert('超出所有文件大小上限');\n        } else if ('Q_EXCEED_NUM_LIMIT' == code) {\n            alert('超出文件数量上限');\n        } else if ('Q_TYPE_DENIED' == code) {\n            alert('当文件类型不正确');\n        } else if ('F_DUPLICATE' == code) {\n            alert('不允许提交重复文件');\n        } else {\n            alert('未知错误：' + code);\n        }\n    };\n\n    //上传分块之前设置请求头\n    uploader.on('uploadBeforeSend', function (obj, data, headers) {\n        $.extend(headers, {\n            'Authorization': _SessionUtil2.default.getToken()\n        });\n    });\n\n    $upload.on('click', function () {\n        if ($(this).hasClass('disabled')) {\n            return false;\n        }\n        //设置自定义参数\n        uploader.options.formData.workOrderId = $(\"#workOrderId\").val();\n        uploader.options.formData.picType = $(\"#picType\").val();\n        uploader.options.formData.picTypeCode = $(\"#picTypeCode\").val();\n        if (state === 'ready') {\n            uploader.upload();\n        } else if (state === 'paused') {\n            uploader.upload();\n        } else if (state === 'uploading') {\n            uploader.stop();\n        }\n    });\n\n    $info.on('click', '.retry', function () {\n        uploader.retry();\n    });\n\n    $info.on('click', '.ignore', function () {\n        alert('todo');\n    });\n\n    $upload.addClass('state-' + state);\n    updateTotalProgress();\n    //加载此案件的所有的小图片\n    function reloadPicList() {\n        location.reload();\n    }\n\n    var instance = {\n        setState: setState,\n        test: function test() {\n            var ids = [];\n            for (var i in filelist) {\n                var file = filelist[i];\n                ids.push(file.id);\n            }\n            alert(JSON.stringify(ids));\n        }\n    };\n    return instance;\n};\n\nexports = getUploader;\n})('app/util/webuploader.js'); exports; ","app/validator/loginRule.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports = function (page) {\n    var field = {\n        mobile: '手机号码',\n        mobileVerify: '验证码',\n        username: '用户账号',\n        password: '密码'\n    };\n    return _Regular2.default.buildRquired(field);\n};\n\nvar _Regular = require(parentUrl,'./Regular.js');\n\nvar _Regular2 = _interopRequireDefault(_Regular);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n})('app/validator/loginRule.js'); exports; ","app/validator/Regular.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar IdentifyNumberRegex = /(^\\d{6}(18|19|20)\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|[X])$)|(^\\d{8}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}$)/;\n\nexports = {\n  PostCode: /^[1-9][0-9]{5}$/, // 邮编\n  Email: /[\\w-]+@{1}[\\w-]+\\.{1}\\w{2,4}(\\.{0,1}\\w{2}){0,1}/ig, // 电子邮箱\n  Hour: /^(0?[1-9]|1[0-9]|2[0-4])$/, // 小时\n  PhoneNumber: /^1[3456789]\\d{9}$/, // 电话\n  TelNo: /(^1\\d{10}$)|(^\\d{3,4}-\\d{7,8}$)/,\n  // TelNo: /((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/, // 座机号码\n  Number: /^[0-9]*$/,\n  Number_1_100: /^(0|\\d{1,2}|100)$/,\n  Number2: /^\\d+(\\.\\d{1,2})?$/,\n  Number3: /^\\d+(\\.\\d{1,3})?$/,\n  Number4: /^(0|-?[0-9]\\d*)+(\\.\\d{1,2})?$/,\n  Number5: /^[1-9][0-9]{0,3}$/, // 1-9999整数\n  Number6: /^[+-]?(0|([1-9]\\d*))(\\.\\d+)?$/, //不限制⼩数位数\n  NumberJudge: /^[0-9]+([.]{1}[0-9]{1,2})?$/, //判断非负数并且最多两位小数\n  RunMiles: /^\\d{1,7}(\\.\\d{1,2})?$/,\n  NumberAndEnglish: /^[0-9a-zA-Z]*$/,\n  EngineNo: /^[0-9a-zA-Z\\-\\s]*$/,\n  orgCode: /^[0-9A-Z]{8}([0-9]{1}|[X])$/,\n  NoChinese: /^[^\\u4e00-\\u9fa5]*$/, // 非中文\n  MobilePhone: /^[1-9][0-9]{10}$/, // 手机\n  AccountNo: /^[0-9a-zA-Z]*$/, // 数字或字母\n  Date: /^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2})$/, // 日期\n  Money: /^(-?(0|[1-9][0-9]{0,8})([.][0-9]{1,2})?)?$/, // 货币类型\n  PositiveMoney: /^((0|[1-9][0-9]{0,8})([.][0-9]{1,2})?)$/, // 货币类型\n  CarNo: /(^[\\u4e00-\\u9fa5]{1}[A-Z0-9]{5,10}[\\u4e00-\\u9fa5]?$)|(^[A-Z]{2}[A-Z0-9]{4,9}[\\u4e00-\\u9fa5]?$)/, // 车牌号,\n  // CarNo: /(^[\\u4e00-\\u9fa5]{1}[A-Z0-9]{5,10}$)|(^WJ[0-9]{4,9}$)/, // 车牌号,\n  CarNoL: /^[A-Z0-9]{5,10}\\u9886$/, // 领馆车牌号,\n  CarNoLM: /^[A-Z0-9]{1}\\u9886[A-Z0-9]{4,9}$/, // 领馆摩托车牌号,\n  // CarNoL: /([\\u4e00-\\u9fa5A-Z0-9]{4,9}\\u9886$)/, // 领馆车牌号,\n  // CarNoLM: /([\\u4e00-\\u9fa5A-Z0-9]{1}\\u9886[\\u4e00-\\u9fa5A-Z0-9]{3,8})/, // 领馆摩托车牌号,\n  CarNoS: /((^\\u4f7f[A-Z0-9]{4,9}$)|(^[A-Z0-9]{4,9}\\u4f7f$))/, // 使车牌号,\n  CarNoJ: /^[\\u4e00-\\u9fa5]{1}[A-Z0-9]{5}\\u5B66$/, //教练车牌号，\n  Percentage: /^100$|^(\\d|[1-9]\\d)(\\.\\d+)*$/, // 百分率\n  IdentifyNumber: IdentifyNumberRegex,\n  NoEmpty: /\\S/,\n  Money2: /^([0-9]{1,9}|[0-9]{1,9}\\.[0-9]{1,2})$/,\n  Money3: /^\\d{1,9}$|^\\d{1,9}[.]\\d{1,2}$/, // 小数点前最多9位小数点后最多只有两位而且不为负数\n  MoneyLimit: function MoneyLimit(limit) {\n    return function (rule, value, callback) {\n      if (value > limit) {\n        callback(new Error('金额不能大于' + limit + '元'));\n      } else {\n        callback();\n      }\n    };\n  },\n\n  IdentifyNumberValidator: function IdentifyNumberValidator(rule, value, callback) {\n    var city = {\n      11: '北京',\n      12: '天津',\n      13: '河北',\n      14: '山西',\n      15: '内蒙古',\n      21: '辽宁',\n      22: '吉林',\n      23: '黑龙江 ',\n      31: '上海',\n      32: '江苏',\n      33: '浙江',\n      34: '安徽',\n      35: '福建',\n      36: '江西',\n      37: '山东',\n      41: '河南',\n      42: '湖北 ',\n      43: '湖南',\n      44: '广东',\n      45: '广西',\n      46: '海南',\n      50: '重庆',\n      51: '四川',\n      52: '贵州',\n      53: '云南',\n      54: '西藏 ',\n      61: '陕西',\n      62: '甘肃',\n      63: '青海',\n      64: '宁夏',\n      65: '新疆',\n      71: '台湾',\n      81: '香港',\n      82: '澳门',\n      91: '国外 '\n    };\n    if (!value || !IdentifyNumberRegex.test(value)) {\n      callback(new Error('请录入正确的身份证'));\n    } else if (!city[value.substr(0, 2)]) {\n      callback(new Error('请录入正确的身份证'));\n    } else {\n      if (value.length === 18) {\n        value = value.split('');\n        var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n        var parity = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n        var sum = 0;\n        for (var i = 0; i < 17; i++) {\n          sum += value[i] * factor[i];\n        }\n        console.log(sum, parity[sum % 11], value[17]);\n        if (parity[sum % 11] !== value[17].toUpperCase()) {\n          callback(new Error('请录入正确的身份证'));\n        }\n      }\n    }\n    callback();\n  },\n  VinNo: /^((?![IOQ])([A-Z]|[0-9])){17}$/, // VIN码\n  LessVInNo: /^((?![IOQ])([A-Z]|[0-9])){1,17}$/, // 小于 17\n  MoreVinNo: /^((?![IOQ])([A-Z]|[0-9])){17,}$/, // 大于 17\n  DriverLisenceNo: /^.{10}(.{5}(.{3})?)?$/, // 驾驶证号\n  DriverIdentifyNumber: /^[0-9a-zA-Z]{1,18}$/, //定损出险驾驶员证件号码（不超过18）\n  // DriverLisenceNo: /^([0-9A-Z]{10}$|[0-9A-Z]{15}$|[0-9A-Z]{18}$)/, // 驾驶证号\n  Age: /^([1-9]|[1-9]\\d|1\\d{2}|200)$/, // 年龄是1-200之间有效\n  Age2: /^([0-9]|[1-9]\\d|1\\d{2}|200)$/, // 年龄是0-200之间有效\n  Age3: /^(1[89]|[2-6]\\d|70)$/, // 年龄是18-70之间有效\n  Month: /^(0?[[1-9]|1[0-2])$/, // 校验月份\n  Month2: /^([0-9]|1[0-2])$/, // 校验月份,可以为0\n  UnifiedSocialCreditCode: /^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$/, //统一社会信用代码\n  Name: /^([\\u4e00-\\u9fa5]{1,20}|[a-zA-Z\\.\\s]{1,20})$/, //姓名\n  notnull: /\\s*\\S+?/, // 验证非空白字符正则\n  buildRquired: function buildRquired(fieldMap) {\n    var rules = [];\n    for (var key in fieldMap) {\n      var name = fieldMap[key];\n      var rule = [{ required: true, message: name + '为必填项', trigger: 'blur' }];\n      rules.push(rule);\n    }\n    return rules;\n  }\n};\n})('app/validator/Regular.js'); exports; ","main.js":"(function(parentUrl) {\n'use strict';\n\nvar _NodeModule = require(parentUrl,'./app/NodeModule.js');\n\nvar _AppUltra = require(parentUrl,'./AppUltra.vue');\n\nvar _AppUltra2 = _interopRequireDefault(_AppUltra);\n\nvar _App = require(parentUrl,'./App.vue');\n\nvar _App2 = _interopRequireDefault(_App);\n\nvar _Store = require(parentUrl,'./app/data/Store.js');\n\nvar _Store2 = _interopRequireDefault(_Store);\n\nvar _globalCmpt = require(parentUrl,'./app/config/global-cmpt.js');\n\nvar _globalCmpt2 = _interopRequireDefault(_globalCmpt);\n\nvar _loadJs = require(parentUrl,'./app/config/loadJs.js');\n\nvar _loadJs2 = _interopRequireDefault(_loadJs);\n\nvar _indexRouter = require(parentUrl,'./html/index/router/index-router.js');\n\nvar _indexRouter2 = _interopRequireDefault(_indexRouter);\n\nfunction _interopRequireDefault(obj) { return { default: obj}; }\n\n// First Vue Page Need Import In First Vue Page!\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n_NodeModule.Vue.use(_NodeModule.ElementUI); // ui库\n\nvar vue = new _NodeModule.Vue({\n  el: '#app',\n  router: _indexRouter2.default,\n  store: _Store2.default,\n  components: {\n    'App': _AppUltra2.default\n  },\n  template: '<App/>'\n});\nwindow.vue = vue;\nwindow.App = vue;\n\n_globalCmpt2.default.log();\n_loadJs2.default.init(vue);\n})('main.js'); exports; ","pages/counter/pie.js":"(function(parentUrl) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar _module = {};\nexports = {\n    test: function test() {\n        console.log('test');\n    }\n};\n\ndefine(_module.exports);\n})('pages/counter/pie.js'); exports; "}